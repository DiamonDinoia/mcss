<?xml version="1.0" encoding="UTF-8" ?>
<Graph version="2020.2" pxg_version="2" maxfile_name="MCSS" design_name="loopKernel" compilation_phase="original" frequency="0.00">
	<Node criticalPaths="[]" group="[]" id="1" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeEvalStreamOffset">
		<Output latency="0" name="output" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Text>EvalStreamOffset(loopLength)</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream$OffsetExpr.getDFEVar(Stream.java:183)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:27)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="2" dst_node_input="llv" src_node_id="1" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="25" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1228)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:54)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="26" dst_node_input="option1" src_node_id="25" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="26" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="32" FMems="0" LUTs="32" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1228)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:54)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="105" dst_node_input="a" src_node_id="26" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="103" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>-2.8921767233489434E-5</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mulAsRHS(DFEVar.java:1045)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>-2.8921767233489434E-5</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="104" dst_node_input="a" src_node_id="103" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="27" isControl="true" isVisible="false" pipelineFactor="1.0" powerUsage="N/A" type="NodeInputMappedReg">
		<Output latency="0" name="io_y_force_disabled" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>Scalar input (io_y_force_disabled)</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:629)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:62)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Name>io_y_force_disabled</Name>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="28" dst_node_input="a" src_node_id="27" src_node_output="io_y_force_disabled" />
	<Node criticalPaths="[]" group="[]" id="28" isControl="true" isVisible="false" pipelineFactor="0.0" powerUsage="N/A" type="NodeNot">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>~</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:629)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:62)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="29" dst_node_input="enable" src_node_id="28" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="29" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeInput">
		<Input name="enable" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="5" name="data" type="dfeBits(96)" />
		<Text>Input(y)</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:629)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:62)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Name>y</Name>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="30" dst_node_input="a" src_node_id="29" src_node_output="data" />
	<Edge criticalPaths="[]" dst_node_id="32" dst_node_input="a" src_node_id="29" src_node_output="data" />
	<Edge criticalPaths="[]" dst_node_id="34" dst_node_input="a" src_node_id="29" src_node_output="data" />
	<Node criticalPaths="[]" group="[]" id="30" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(96)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>[31:0]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:629)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:62)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>0</Base>
		<Width>32</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="31" dst_node_input="input" src_node_id="30" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="31" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>&lt;{HWFloat:8, 24}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:629)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:62)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="36" dst_node_input="a" src_node_id="31" src_node_output="output" />
	<Edge criticalPaths="[]" dst_node_id="37" dst_node_input="a" src_node_id="31" src_node_output="output" />
	<Edge criticalPaths="[]" dst_node_id="44" dst_node_input="a" src_node_id="31" src_node_output="output" />
	<Edge criticalPaths="[]" dst_node_id="48" dst_node_input="a" src_node_id="31" src_node_output="output" />
	<Edge criticalPaths="[]" dst_node_id="100" dst_node_input="a" src_node_id="31" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="99" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>0.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.gte(DFEVar.java:810)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:55)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="100" dst_node_input="b" src_node_id="99" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="100" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeGte">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="2" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;=</Text>
		<ResourceUsage DSPs="0" FFs="2" FMems="0" LUTs="3" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.gte(DFEVar.java:810)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:55)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="102" dst_node_input="sel" src_node_id="100" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="101" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x7fc00000; NaN</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:55)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>01111111110000000000000000000000</Value>
		<HexValue>0x7fc00000</HexValue>
		<NumericValue>NaN</NumericValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="102" dst_node_input="option0" src_node_id="101" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="44" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[31:31]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getMantissa(FloatingPoint.java:93)
com.maxeler.maxblox.utils.Frexpf.&lt;init&gt;(Frexpf.java:38)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:32)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>31</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="45" dst_node_input="input" src_node_id="44" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="45" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(1)" />
		<Output latency="0" name="output" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:1, 0, UNSIGNED}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getMantissa(FloatingPoint.java:94)
com.maxeler.maxblox.utils.Frexpf.&lt;init&gt;(Frexpf.java:38)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:32)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="47" dst_node_input="sel" src_node_id="45" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="40" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getMantissa(FloatingPoint.java:89)
com.maxeler.maxblox.utils.Frexpf.&lt;init&gt;(Frexpf.java:38)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:32)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="41" dst_node_input="in0" src_node_id="40" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="37" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeBits(31)" />
		<Text>[30:0]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getMantissa(FloatingPoint.java:81)
com.maxeler.maxblox.utils.Frexpf.&lt;init&gt;(Frexpf.java:38)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:32)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>0</Base>
		<Width>31</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="39" dst_node_input="a" src_node_id="37" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="38" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>0.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getMantissa(FloatingPoint.java:82)
com.maxeler.maxblox.utils.Frexpf.&lt;init&gt;(Frexpf.java:38)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:32)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="39" dst_node_input="b" src_node_id="38" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="39" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeNeq">
		<Input name="a" type="dfeBits(31)" />
		<Input name="b" type="dfeBits(31)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>!=</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getMantissa(FloatingPoint.java:82)
com.maxeler.maxblox.utils.Frexpf.&lt;init&gt;(Frexpf.java:38)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:32)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="41" dst_node_input="in1" src_node_id="39" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="41" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(2)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getMantissa(FloatingPoint.java:89)
com.maxeler.maxblox.utils.Frexpf.&lt;init&gt;(Frexpf.java:38)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:32)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="42" dst_node_input="in0" src_node_id="41" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="36" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeBits(23)" />
		<Text>[22:0]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getMantissa(FloatingPoint.java:77)
com.maxeler.maxblox.utils.Frexpf.&lt;init&gt;(Frexpf.java:38)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:32)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>0</Base>
		<Width>23</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="42" dst_node_input="in1" src_node_id="36" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="42" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(2)" />
		<Input name="in1" type="dfeBits(23)" />
		<Output latency="0" name="result" type="dfeBits(25)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getMantissa(FloatingPoint.java:91)
com.maxeler.maxblox.utils.Frexpf.&lt;init&gt;(Frexpf.java:38)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:32)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="43" dst_node_input="input" src_node_id="42" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="43" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(25)" />
		<Output latency="0" name="output" type="dfeOffsetFix(25, -23, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:25, -23, TWOSCOMPLEMENT}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getMantissa(FloatingPoint.java:92)
com.maxeler.maxblox.utils.Frexpf.&lt;init&gt;(Frexpf.java:38)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:32)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="46" dst_node_input="a" src_node_id="43" src_node_output="output" />
	<Edge criticalPaths="[]" dst_node_id="47" dst_node_input="option0" src_node_id="43" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="46" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeNeg">
		<Input name="a" type="dfeOffsetFix(25, -23, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(25, -23, TWOSCOMPLEMENT)" />
		<Text>(-)</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getMantissa(FloatingPoint.java:95)
com.maxeler.maxblox.utils.Frexpf.&lt;init&gt;(Frexpf.java:38)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:32)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="47" dst_node_input="option1" src_node_id="46" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="47" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(25, -23, TWOSCOMPLEMENT)" />
		<Input name="option1" type="dfeOffsetFix(25, -23, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(25, -23, TWOSCOMPLEMENT)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="25" FMems="0" LUTs="25" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getMantissa(FloatingPoint.java:95)
com.maxeler.maxblox.utils.Frexpf.&lt;init&gt;(Frexpf.java:38)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:32)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="53" dst_node_input="a" src_node_id="47" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="54" dst_node_input="a" src_node_id="47" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="52" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>1.5</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.gt(DFEVar.java:845)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:34)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>1.5</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="53" dst_node_input="b" src_node_id="52" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="53" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeGt">
		<Input name="a" type="dfeOffsetFix(25, -23, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(25, -23, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.gt(DFEVar.java:845)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:34)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="60" dst_node_input="sel" src_node_id="53" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="77" dst_node_input="sel" src_node_id="53" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="78" dst_node_input="sel" src_node_id="53" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="79" dst_node_input="sel" src_node_id="53" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="80" dst_node_input="sel" src_node_id="53" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="81" dst_node_input="sel" src_node_id="53" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="95" dst_node_input="sel" src_node_id="53" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="48" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeBits(8)" />
		<Text>[30:23]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getExponent(FloatingPoint.java:37)
com.maxeler.maxblox.utils.Frexpf.&lt;init&gt;(Frexpf.java:39)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:32)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>23</Base>
		<Width>8</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="49" dst_node_input="input" src_node_id="48" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="49" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(8)" />
		<Output latency="0" name="output" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:8, 0, UNSIGNED}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getExponent(FloatingPoint.java:38)
com.maxeler.maxblox.utils.Frexpf.&lt;init&gt;(Frexpf.java:39)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:32)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="51" dst_node_input="a" src_node_id="49" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="50" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>127.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getExponent(FloatingPoint.java:41)
com.maxeler.maxblox.utils.Frexpf.&lt;init&gt;(Frexpf.java:39)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:32)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>127.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="51" dst_node_input="b" src_node_id="50" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="51" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSub">
		<Input name="a" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>-</Text>
		<ResourceUsage DSPs="0" FFs="9" FMems="0" LUTs="18" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getExponent(FloatingPoint.java:41)
com.maxeler.maxblox.utils.Frexpf.&lt;init&gt;(Frexpf.java:39)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:32)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="59" dst_node_input="a" src_node_id="51" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="60" dst_node_input="option0" src_node_id="51" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="58" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>1.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:945)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:41)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>1.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="59" dst_node_input="b" src_node_id="58" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="59" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<ResourceUsage DSPs="0" FFs="9" FMems="0" LUTs="18" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:945)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:41)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="60" dst_node_input="option1" src_node_id="59" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="60" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="option1" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="9" FMems="0" LUTs="9" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1187)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:41)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="62" dst_node_input="a" src_node_id="60" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="63" dst_node_input="a" src_node_id="60" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="64" dst_node_input="option0" src_node_id="60" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="67" dst_node_input="a" src_node_id="60" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="66" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>0.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.gte(DFEVar.java:810)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:47)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="67" dst_node_input="b" src_node_id="66" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="67" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeGte">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;=</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.gte(DFEVar.java:810)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:47)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="69" dst_node_input="sel" src_node_id="67" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="61" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>0.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.abs(KernelMath.java:250)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:45)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="62" dst_node_input="b" src_node_id="61" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="62" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.abs(KernelMath.java:250)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:45)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="64" dst_node_input="sel" src_node_id="62" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="63" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeNeg">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>(-)</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.abs(KernelMath.java:250)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:45)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="64" dst_node_input="option1" src_node_id="63" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="64" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="option1" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="9" FMems="0" LUTs="9" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.abs(KernelMath.java:250)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:45)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="65" dst_node_input="a" src_node_id="64" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="65" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="result" type="dfeBits(8)" />
		<Text>[7:0]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:344)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:46)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>0</Base>
		<Width>8</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1294" dst_node_input="addr" src_node_id="65" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1294" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeROM">
		<Input name="addr" type="dfeBits(8)" />
		<Output latency="2" name="dout" type="dfeFloat(8, 24)" />
		<Text>ROM</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="1" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Mem.alloc(Mem.java:63)
maxpower.math.interpolation.functions.arithmetic.FixLog.buildROM(FixLog.java:97)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:44)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Depth>256</Depth>
		<MemoryData>0x00000000
0x3f317218
0x3fb17218
0x40051592
0x40317218
0x405dce9e
0x40851592
0x409b43d5
0x40b17218
0x40c7a05b
0x40ddce9e
0x40f3fce1
0x41051592
0x41102cb3
0x411b43d5
0x41265af6
0x41317218
0x413c8939
0x4147a05b
0x4152b77c
0x415dce9e
0x4168e5bf
0x4173fce1
0x417f1402
0x41851592
0x418aa123
0x41902cb3
0x4195b844
0x419b43d5
0x41a0cf66
0x41a65af6
0x41abe687
0x41b17218
0x41b6fda9
0x41bc8939
0x41c214ca
0x41c7a05b
0x41cd2bec
0x41d2b77c
0x41d8430d
0x41ddce9e
0x41e35a2f
0x41e8e5bf
0x41ee7150
0x41f3fce1
0x41f98872
0x41ff1402
0x42024fca
0x42051592
0x4207db5a
0x420aa123
0x420d66eb
0x42102cb3
0x4212f27c
0x4215b844
0x42187e0d
0x421b43d5
0x421e099d
0x4220cf66
0x4223952e
0x42265af6
0x422920bf
0x422be687
0x422eac50
0x42317218
0x423437e0
0x4236fda9
0x4239c371
0x423c8939
0x423f4f02
0x424214ca
0x4244da93
0x4247a05b
0x424a6623
0x424d2bec
0x424ff1b4
0x4252b77c
0x42557d45
0x4258430d
0x425b08d6
0x425dce9e
0x42609466
0x42635a2f
0x42661ff7
0x4268e5bf
0x426bab88
0x426e7150
0x42713719
0x4273fce1
0x4276c2a9
0x42798872
0x427c4e3a
0x427f1402
0x4280ece5
0x42824fca
0x4283b2ae
0x42851592
0x42867876
0x4287db5a
0x42893e3f
0x428aa123
0x428c0407
0x428d66eb
0x428ec9cf
0x42902cb3
0x42918f98
0x4292f27c
0x42945560
0x4295b844
0x42971b28
0x42987e0d
0x4299e0f1
0x429b43d5
0x429ca6b9
0x429e099d
0x429f6c82
0x42a0cf66
0x42a2324a
0x42a3952e
0x42a4f812
0x42a65af6
0x42a7bddb
0x42a920bf
0x42aa83a3
0x42abe687
0x42ad496b
0x42aeac50
0x42b00f34
0x42b17218
0x42b2d4fc
0x42b437e0
0x42b59ac5
0x42b6fda9
0x42b8608d
0x42b9c371
0x42bb2655
0x42bc8939
0x42bdec1e
0x42bf4f02
0x42c0b1e6
0x42c214ca
0x42c377ae
0x42c4da93
0x42c63d77
0x42c7a05b
0x42c9033f
0x42ca6623
0x42cbc908
0x42cd2bec
0x42ce8ed0
0x42cff1b4
0x42d15498
0x42d2b77c
0x42d41a61
0x42d57d45
0x42d6e029
0x42d8430d
0x42d9a5f1
0x42db08d6
0x42dc6bba
0x42ddce9e
0x42df3182
0x42e09466
0x42e1f74b
0x42e35a2f
0x42e4bd13
0x42e61ff7
0x42e782db
0x42e8e5bf
0x42ea48a4
0x42ebab88
0x42ed0e6c
0x42ee7150
0x42efd434
0x42f13719
0x42f299fd
0x42f3fce1
0x42f55fc5
0x42f6c2a9
0x42f8258e
0x42f98872
0x42faeb56
0x42fc4e3a
0x42fdb11e
0x42ff1402
0x43003b73
0x4300ece5
0x43019e58
0x43024fca
0x4303013c
0x4303b2ae
0x43046420
0x43051592
0x4305c704
0x43067876
0x430729e8
0x4307db5a
0x43088ccc
0x43093e3f
0x4309efb1
0x430aa123
0x430b5295
0x430c0407
0x430cb579
0x430d66eb
0x430e185d
0x430ec9cf
0x430f7b41
0x43102cb3
0x4310de26
0x43118f98
0x4312410a
0x4312f27c
0x4313a3ee
0x43145560
0x431506d2
0x4315b844
0x431669b6
0x43171b28
0x4317cc9b
0x43187e0d
0x43192f7f
0x4319e0f1
0x431a9263
0x431b43d5
0x431bf547
0x431ca6b9
0x431d582b
0x431e099d
0x431ebb0f
0x431f6c82
0x43201df4
0x4320cf66
0x432180d8
0x4322324a
0x4322e3bc
0x4323952e
0x432446a0
0x4324f812
0x4325a984
0x43265af6
0x43270c69
0x4327bddb
0x43286f4d
0x432920bf
0x4329d231
0x432a83a3
0x432b3515
0x432be687
0x432c97f9
0x432d496b
0x432dfadd
0x432eac50
0x432f5dc2
0x43300f34
0x4330c0a6</MemoryData>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="68" dst_node_input="a" src_node_id="1294" src_node_output="dout" />
	<Edge criticalPaths="[]" dst_node_id="69" dst_node_input="option1" src_node_id="1294" src_node_output="dout" />
	<Node criticalPaths="[]" group="[]" id="68" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeNeg">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeFloat(8, 24)" />
		<Text>(-)</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.neg(DFEVar.java:1119)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:47)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="69" dst_node_input="option0" src_node_id="68" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="69" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="32" FMems="0" LUTs="32" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1187)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:47)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="98" dst_node_input="a" src_node_id="69" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="54" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeOffsetFix(25, -23, TWOSCOMPLEMENT)" />
		<Output latency="0" name="result" type="dfeBits(23)" />
		<Text>[22:0]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:344)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:37)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>0</Base>
		<Width>23</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="55" dst_node_input="input" src_node_id="54" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="55" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(23)" />
		<Output latency="0" name="output" type="dfeBits(23)" />
		<Text>&lt;{HWRawBits:23}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.reinterpret(DFEVar.java:1440)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:38)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="56" dst_node_input="input" src_node_id="55" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="56" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(23)" />
		<Output latency="0" name="output" type="dfeOffsetFix(23, -23, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:23, -23, UNSIGNED}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.reinterpret(DFEVar.java:1440)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:38)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="57" dst_node_input="i" src_node_id="56" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="57" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(23, -23, UNSIGNED)" />
		<Output latency="0" name="o" type="dfeOffsetFix(27, -23, TWOSCOMPLEMENT)" />
		<Text>NodeCast
{HWOffsetFix:23, -23, UNSIGNED} 
-&gt;
 {HWOffsetFix:27, -23, TWOSCOMPLEMENT}</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:181)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:39)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="70" dst_node_input="i" src_node_id="57" src_node_output="o" />
	<Node criticalPaths="[]" group="[]" id="70" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(27, -23, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(25, -24, UNSIGNED)" />
		<Text>NodeCast
{HWOffsetFix:27, -23, TWOSCOMPLEMENT} 
-&gt;
 {HWOffsetFix:25, -24, UNSIGNED}</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:181)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:48)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="71" dst_node_input="a" src_node_id="70" src_node_output="o" />
	<Edge criticalPaths="[]" dst_node_id="73" dst_node_input="a" src_node_id="70" src_node_output="o" />
	<Edge criticalPaths="[]" dst_node_id="74" dst_node_input="a" src_node_id="70" src_node_output="o" />
	<Edge criticalPaths="[]" dst_node_id="76" dst_node_input="a" src_node_id="70" src_node_output="o" />
	<Edge criticalPaths="[]" dst_node_id="93" dst_node_input="datain" src_node_id="70" src_node_output="o" />
	<Edge criticalPaths="[]" dst_node_id="95" dst_node_input="option0" src_node_id="70" src_node_output="o" />
	<Node criticalPaths="[]" group="[]" id="73" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeOffsetFix(25, -24, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(7)" />
		<Text>[23:17]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:344)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFix(CubicSplineBuilder.java:176)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:200)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:49)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>17</Base>
		<Width>7</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1276" dst_node_input="addr" src_node_id="73" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1276" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeROM">
		<Input name="addr" type="dfeBits(7)" />
		<Output latency="2" name="dout" type="dfeBits(108)" />
		<Text>ROM</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="3" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Mem.alloc(Mem.java:63)
maxpower.math.interpolation.CubicSplineBuilder.buildCoefficientRom(CubicSplineBuilder.java:293)
maxpower.math.interpolation.CubicSplineBuilder.access$1(CubicSplineBuilder.java:264)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:90)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:87)
maxpower.math.interpolation.CubicSplineBuilder.build(CubicSplineBuilder.java:239)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:43)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Depth>128</Depth>
		<MemoryData>0xffffffe00002afffc0000800000
0xffffffe00002a3ffc0a907f80aa
0xffffffe0000297ffc14f87f02a3
0xffffffe000028bffc1f307e85e5
0xffffffe000027fffc29387e0a6c
0xffffffe0000277ffc33187d9031
0xffffffe000026bffc3cc87d1730
0xffffffe000025fffc46507c9f62
0xffffffe0000257ffc4fb87c28c3
0xffffffe000024bffc58f07bb34e
0xffffffe0000243ffc62007b3efd
0xffffffe000023bffc6af07acbcd
0xffffffe000022fffc73b87a59b8
0xffffffe0000227ffc7c6079e8ba
0xffffffe000021fffc84e07978cf
0xffffffe0000217ffc8d407909f1
0xffffffe000020fffc9580789c1e
0xffffffe0000207ffc9da0782f50
0xffffffe00001ffffca59877c383
0xffffffe00001f7ffcad787758b5
0xffffffe00001efffcb53876eee0
0xffffffe00001e7ffcbcd8768601
0xffffffe00001dfffcc458761e14
0xffffffe00001d7ffccbc075b716
0xffffffe00001d3ffcd308755102
0xffffffe00001cbffcda3874ebd7
0xffffffe00001c3ffce14874878f
0xffffffe00001bfffce840742428
0xffffffe00001b7ffcef2073c19e
0xffffffe00001b3ffcf5e8735fef
0xffffffe00001abffcfc9072ff17
0x000000000001a3ffd0328729f12
0x0000000000019fffd09a0723fdf
0x0000000000019bffd100871e17a
0x00000000000193ffd16507183e0
0x0000000000018fffd1c8871270e
0x00000000000187ffd22a870cb02
0x00000000000183ffd28b8706fb8
0x0000000000017fffd2eb070152e
0x00000000000177ffd34906fbb62
0x00000000000173ffd3a586f6251
0x0000000000016fffd40106f09f8
0x0000000000016bffd45b86eb255
0x00000000000167ffd4b486e5b66
0x0000000000015fffd50c86e0527
0x0000000000015bffd56386daf97
0x00000000000157ffd5b906d5ab4
0x00000000000153ffd60d86d067b
0x0000000000014fffd66106cb2e9
0x0000000000014bffd6b386c5ffe
0x00000000000147ffd70486c0db6
0x00000000000143ffd75506bbc10
0x0000000000013fffd7a406b6b09
0x0000000000013bffd7f286b1a9f
0x00000000000137ffd83f86acad1
0x00000000000133ffd88c06a7b9d
0x0000000000012fffd8d706a2d00
0x0000000000012bffd921869def9
0x00000000000127ffd96b0699185
0x00000000000123ffd9b386944a4
0x0000000000011fffd9fb868f853
0x0000000000011bffda42068ac91
0x0000000000011bffda88068615b
0x00000000000117ffdacd06816b1
0x00000000000113ffdb11867cc90
0x0000000000010fffdb5506782f6
0x0000000000010bffdb9786739e3
0x0000000000010bffdbd9866f155
0x00000000000107ffdc1b066a949
0x00000000000103ffdc5b06661bf
0x000000000000ffffdc9b0661ab5
0x000000000000ffffdcd9865d42a
0x000000000000fbffdd180658e1c
0x000000000000f7ffdd558654889
0x000000000000f3ffdd920650370
0x000000000000f3ffddce064bed1
0x000000000000efffde098647aa8
0x000000000000ebffde4486436f6
0x000000000000ebffde7e863f3b9
0x000000000000e7ffdeb7863b0ef
0x000000000000e3ffdef08636e98
0x000000000000e3ffdf288632cb1
0x000000000000dfffdf60062eb3a
0x000000000000dfffdf97062aa31
0x000000000000dbffdfcd8626996
0x000000000000d7ffe0038622967
0x000000000000d7ffe038861e9a3
0x000000000000d3ffe06d061aa48
0x000000000000d3ffe0a10616b57
0x000000000000cfffe0d48612ccc
0x000000000000cfffe107860eea8
0x000000000000cbffe13a060b0ea
0x000000000000cbffe16c0607390
0x000000000000c7ffe19d0603699
0x000000000000c7ffe1ce05ffa04
0x000000000000c3ffe1fe85fbdd0
0x000000000000c3ffe22e05f81fd
0x000000000000bfffe25d85f4688
0x000000000000bfffe28c85f0b72
0x000000000000bbffe2ba85ed0b9
0x000000000000bbffe2e885e965d
0x000000000000b7ffe31605e5c5b
0x000000000000b7ffe34305e22b4
0x000000000000b3ffe36f85de967
0x000000000000b3ffe39b85db072
0x000000000000afffe3c785d77d5
0x000000000000afffe3f285d3f8f
0x000000000000afffe41d85d079f
0x000000000000abffe44785cd004
0x000000000000abffe47185c98bd
0x000000000000a7ffe49b05c61ca
0x000000000000a7ffe4c485c2b2a
0x000000000000a7ffe4ed05bf4db
0x000000000000a3ffe51585bbede
0x000000000000a3ffe53d85b8930
0x0000000000009fffe56505b53d3
0x0000000000009fffe58c05b1ec4
0x0000000000009fffe5b305aea03
0x0000000000009bffe5d985ab58f
0x0000000000009bffe5ff85a8169
0x0000000000009bffe62585a4d8d
0x00000000000097ffe64a85a19fd
0x00000000000097ffe66f859e6b8
0x00000000000097ffe694859b3bc
0x00000000000093ffe6b90598109
0x00000000000093ffe6dd0594e9f
0x00000000000093ffe7008591c7d
0x0000000000008fffe724058eaa1</MemoryData>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1277" dst_node_input="a" src_node_id="1276" src_node_output="dout" />
	<Edge criticalPaths="[]" dst_node_id="1279" dst_node_input="a" src_node_id="1276" src_node_output="dout" />
	<Edge criticalPaths="[]" dst_node_id="1281" dst_node_input="a" src_node_id="1276" src_node_output="dout" />
	<Edge criticalPaths="[]" dst_node_id="1283" dst_node_input="a" src_node_id="1276" src_node_output="dout" />
	<Node criticalPaths="[]" group="[]" id="1283" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(108)" />
		<Output latency="0" name="result" type="dfeBits(27)" />
		<Text>[107:81]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Mem.alloc(Mem.java:63)
maxpower.math.interpolation.CubicSplineBuilder.buildCoefficientRom(CubicSplineBuilder.java:293)
maxpower.math.interpolation.CubicSplineBuilder.access$1(CubicSplineBuilder.java:264)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:90)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:87)
maxpower.math.interpolation.CubicSplineBuilder.build(CubicSplineBuilder.java:239)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:43)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>81</Base>
		<Width>27</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1284" dst_node_input="input" src_node_id="1283" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1284" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(27)" />
		<Output latency="0" name="output" type="dfeOffsetFix(27, -23, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:27, -23, TWOSCOMPLEMENT}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Mem.alloc(Mem.java:63)
maxpower.math.interpolation.CubicSplineBuilder.buildCoefficientRom(CubicSplineBuilder.java:293)
maxpower.math.interpolation.CubicSplineBuilder.access$1(CubicSplineBuilder.java:264)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:90)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:87)
maxpower.math.interpolation.CubicSplineBuilder.build(CubicSplineBuilder.java:239)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:43)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="81" dst_node_input="option0" src_node_id="1284" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="76" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeOffsetFix(25, -24, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(7)" />
		<Text>[23:17]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:344)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFix(CubicSplineBuilder.java:176)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:200)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:49)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>17</Base>
		<Width>7</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1285" dst_node_input="addr" src_node_id="76" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1285" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeROM">
		<Input name="addr" type="dfeBits(7)" />
		<Output latency="2" name="dout" type="dfeBits(108)" />
		<Text>ROM</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="3" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Mem.alloc(Mem.java:63)
maxpower.math.interpolation.CubicSplineBuilder.buildCoefficientRom(CubicSplineBuilder.java:293)
maxpower.math.interpolation.CubicSplineBuilder.access$1(CubicSplineBuilder.java:264)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:99)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:87)
maxpower.math.interpolation.CubicSplineBuilder.build(CubicSplineBuilder.java:239)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:43)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Depth>128</Depth>
		<MemoryData>0x000000000000000000000000000
0x000000000000000000000000000
0x000000000000000000000000000
0x000000000000000000000000000
0x000000000000000000000000000
0x000000000000000000000000000
0x000000000000000000000000000
0x000000000000000000000000000
0x000000000000000000000000000
0x000000000000000000000000000
0x000000000000000000000000000
0x000000000000000000000000000
0x000000000000000000000000000
0x000000000000000000000000000
0x000000000000000000000000000
0x000000000000000000000000000
0x000000000000000000000000000
0x000000000000000000000000000
0x000000000000000000000000000
0x000000000000000000000000000
0x000000000000000000000000000
0x000000000000000000000000000
0x000000000000000000000000000
0x000000000000000000000000000
0x000000000000000000000000000
0x000000000000000000000000000
0x000000000000000000000000000
0x000000000000000000000000000
0x000000000000000000000000000
0x000000000000000000000000000
0x000000000000000000000000000
0x000000000000000000000000000
0x000000000000000000000000000
0x000000000000000000000000000
0x000000000000000000000000000
0x000000000000000000000000000
0x000000000000000000000000000
0x000000000000000000000000000
0x000000000000000000000000000
0x000000000000000000000000000
0x000000000000000000000000000
0x000000000000000000000000000
0x000000000000000000000000000
0x000000000000000000000000000
0x000000000000000000000000000
0x000000000000000000000000000
0x000000000000000000000000000
0x000000000000000000000000000
0x000000000000000000000000000
0x000000000000000000000000000
0x000000000000000000000000000
0x000000000000000000000000000
0x000000000000000000000000000
0x000000000000000000000000000
0x000000000000000000000000000
0x000000000000000000000000000
0x000000000000000000000000000
0x000000000000000000000000000
0x000000000000000000000000000
0x000000000000000000000000000
0x000000000000000000000000000
0x000000000000000000000000000
0x000000000000000000000000000
0x2571bf19049bdc0000000000000
0x00000abfffa96c027bebf6cb4ef
0x00000a1fffad6c0266c6f719777
0x0000099fffb13002529af7650af
0x000008ffffb4bc023f5877ae27c
0x0000087fffb810022cf1f7f4ea2
0x000007ffffbb38021b5b78396cd
0x0000079fffbe30020a87f87bc90
0x0000071fffc0fc01fa6d78bc166
0x000006bfffc3a001eb00f8fa6b7
0x0000067fffc62401dc397936dd6
0x0000061fffc88001ce0df971803
0x000005bfffcac001c075f9aa66e
0x0000057fffcce001b36979e1a36
0x0000053fffcee401a6e1fa1746b
0x000004ffffd0cc019ad7fa4b610
0x000004bfffd2a0018f457a7e019
0x0000047fffd4580184247aaf36f
0x0000043fffd5fc01796efadf0f0
0x0000041fffd78c016f1ffb0d96e
0x000003dfffd908016532fb3adb0
0x000003bfffda74015ba27b66e76
0x0000037fffdbcc01526afb91c74
0x0000035fffdd180149877bbb858
0x0000033fffde500140f47be42c6
0x0000031fffdf800138ae7c0bc5c
0x000002ffffe09c0130b1fc325b0
0x000002dfffe1b00128fb7c57f51
0x000002bfffe2b4012187fc7c9c9
0x0000029fffe3b0011a547ca059a
0x0000027fffe4a001135e7cc3342
0x0000025fffe584010ca2fce5339
0x0000025fffe66001061f7d065f1
0x0000023fffe73400ffd1fd26bd9
0x0000021fffe7fc00f9b87d4655a
0x000001ffffe8c000f3cffd652da
0x000001ffffe97800ee16fd834b8
0x000001dfffea2c00e88bfda0b53
0x000001dfffead800e32bfdbd703
0x000001bfffeb7c00ddf67dd981d
0x000001bfffec1c00d8e97df4ef6
0x0000019fffecb400d402fe0fbdb
0x0000019fffed4400cf417e29f18
0x0000017fffedd000caa47e438f7
0x0000017fffee5800c6297e5c9bf
0x0000015fffeedc00c1cffe751b3
0x0000015fffef5800bd967e8d113
0x0000015fffefd000b97bfea4820
0x0000013ffff04800b57efebb715
0x0000013ffff0b800b19e7ed1e2d
0x0000013ffff12400add9fee7da0
0x0000011ffff18c00aa2f7efd5a4
0x0000011ffff1f000a69eff1266e
0x0000011ffff25000a3277f2702f
0x0000011ffff2b0009fc77f3b31a
0x000000fffff30c009c7eff4ef5c
0x000000fffff36400994c7f62523
0x000000fffff3b800962fff7549b
0x000000fffff408009327ff87dee
0x000000dffff458009033ff9a146
0x000000dffff4a4008d537fabeca
0x000000dffff4f0008a85ffbd69f
0x000000dffff5380087caffce8ec
0x000000dffff57c008520ffdf5d5
0x000000bffff5c00082887fefd7b</MemoryData>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1286" dst_node_input="a" src_node_id="1285" src_node_output="dout" />
	<Edge criticalPaths="[]" dst_node_id="1288" dst_node_input="a" src_node_id="1285" src_node_output="dout" />
	<Edge criticalPaths="[]" dst_node_id="1290" dst_node_input="a" src_node_id="1285" src_node_output="dout" />
	<Edge criticalPaths="[]" dst_node_id="1292" dst_node_input="a" src_node_id="1285" src_node_output="dout" />
	<Node criticalPaths="[]" group="[]" id="1292" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(108)" />
		<Output latency="0" name="result" type="dfeBits(27)" />
		<Text>[107:81]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Mem.alloc(Mem.java:63)
maxpower.math.interpolation.CubicSplineBuilder.buildCoefficientRom(CubicSplineBuilder.java:293)
maxpower.math.interpolation.CubicSplineBuilder.access$1(CubicSplineBuilder.java:264)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:99)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:87)
maxpower.math.interpolation.CubicSplineBuilder.build(CubicSplineBuilder.java:239)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:43)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>81</Base>
		<Width>27</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1293" dst_node_input="input" src_node_id="1292" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1293" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(27)" />
		<Output latency="0" name="output" type="dfeOffsetFix(27, -23, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:27, -23, TWOSCOMPLEMENT}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Mem.alloc(Mem.java:63)
maxpower.math.interpolation.CubicSplineBuilder.buildCoefficientRom(CubicSplineBuilder.java:293)
maxpower.math.interpolation.CubicSplineBuilder.access$1(CubicSplineBuilder.java:264)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:99)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:87)
maxpower.math.interpolation.CubicSplineBuilder.build(CubicSplineBuilder.java:239)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:43)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="81" dst_node_input="option1" src_node_id="1293" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="81" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(27, -23, TWOSCOMPLEMENT)" />
		<Input name="option1" type="dfeOffsetFix(27, -23, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(27, -23, TWOSCOMPLEMENT)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="27" FMems="0" LUTs="27" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Control.mux(Control.java:124)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFix(CubicSplineBuilder.java:183)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:200)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:49)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="82" dst_node_input="a" src_node_id="81" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="71" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeOffsetFix(25, -24, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(17)" />
		<Text>[16:0]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:344)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFix(CubicSplineBuilder.java:174)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:200)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:49)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>0</Base>
		<Width>17</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="72" dst_node_input="input" src_node_id="71" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="72" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(17)" />
		<Output latency="0" name="output" type="dfeOffsetFix(17, -17, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:17, -17, UNSIGNED}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:172)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFix(CubicSplineBuilder.java:175)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:200)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:49)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="77" dst_node_input="option0" src_node_id="72" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="74" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeOffsetFix(25, -24, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(17)" />
		<Text>[16:0]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:344)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFix(CubicSplineBuilder.java:174)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:200)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:49)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>0</Base>
		<Width>17</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="75" dst_node_input="input" src_node_id="74" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="75" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(17)" />
		<Output latency="0" name="output" type="dfeOffsetFix(17, -17, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:17, -17, UNSIGNED}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:172)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFix(CubicSplineBuilder.java:175)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:200)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:49)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="77" dst_node_input="option1" src_node_id="75" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="77" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(17, -17, UNSIGNED)" />
		<Input name="option1" type="dfeOffsetFix(17, -17, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(17, -17, UNSIGNED)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="17" FMems="0" LUTs="17" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Control.mux(Control.java:124)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFix(CubicSplineBuilder.java:181)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:200)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:49)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="82" dst_node_input="b" src_node_id="77" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="85" dst_node_input="b" src_node_id="77" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="88" dst_node_input="b" src_node_id="77" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="82" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(27, -23, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(17, -17, UNSIGNED)" />
		<Output latency="4" name="result" type="dfeOffsetFix(44, -40, TWOSCOMPLEMENT)" />
		<Text>*</Text>
		<ResourceUsage DSPs="0" FFs="176" FMems="0" LUTs="220" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:1020)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFix(CubicSplineBuilder.java:186)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:200)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:49)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="83" dst_node_input="a" src_node_id="82" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1281" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(108)" />
		<Output latency="0" name="result" type="dfeBits(27)" />
		<Text>[80:54]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Mem.alloc(Mem.java:63)
maxpower.math.interpolation.CubicSplineBuilder.buildCoefficientRom(CubicSplineBuilder.java:293)
maxpower.math.interpolation.CubicSplineBuilder.access$1(CubicSplineBuilder.java:264)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:90)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:87)
maxpower.math.interpolation.CubicSplineBuilder.build(CubicSplineBuilder.java:239)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:43)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>54</Base>
		<Width>27</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1282" dst_node_input="input" src_node_id="1281" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1282" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(27)" />
		<Output latency="0" name="output" type="dfeOffsetFix(27, -23, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:27, -23, TWOSCOMPLEMENT}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Mem.alloc(Mem.java:63)
maxpower.math.interpolation.CubicSplineBuilder.buildCoefficientRom(CubicSplineBuilder.java:293)
maxpower.math.interpolation.CubicSplineBuilder.access$1(CubicSplineBuilder.java:264)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:90)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:87)
maxpower.math.interpolation.CubicSplineBuilder.build(CubicSplineBuilder.java:239)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:43)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="80" dst_node_input="option0" src_node_id="1282" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="1290" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(108)" />
		<Output latency="0" name="result" type="dfeBits(27)" />
		<Text>[80:54]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Mem.alloc(Mem.java:63)
maxpower.math.interpolation.CubicSplineBuilder.buildCoefficientRom(CubicSplineBuilder.java:293)
maxpower.math.interpolation.CubicSplineBuilder.access$1(CubicSplineBuilder.java:264)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:99)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:87)
maxpower.math.interpolation.CubicSplineBuilder.build(CubicSplineBuilder.java:239)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:43)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>54</Base>
		<Width>27</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1291" dst_node_input="input" src_node_id="1290" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1291" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(27)" />
		<Output latency="0" name="output" type="dfeOffsetFix(27, -23, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:27, -23, TWOSCOMPLEMENT}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Mem.alloc(Mem.java:63)
maxpower.math.interpolation.CubicSplineBuilder.buildCoefficientRom(CubicSplineBuilder.java:293)
maxpower.math.interpolation.CubicSplineBuilder.access$1(CubicSplineBuilder.java:264)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:99)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:87)
maxpower.math.interpolation.CubicSplineBuilder.build(CubicSplineBuilder.java:239)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:43)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="80" dst_node_input="option1" src_node_id="1291" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="80" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(27, -23, TWOSCOMPLEMENT)" />
		<Input name="option1" type="dfeOffsetFix(27, -23, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(27, -23, TWOSCOMPLEMENT)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="27" FMems="0" LUTs="27" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Control.mux(Control.java:124)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFix(CubicSplineBuilder.java:183)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:200)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:49)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="83" dst_node_input="b" src_node_id="80" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="83" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(44, -40, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(27, -23, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(45, -40, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<ResourceUsage DSPs="0" FFs="45" FMems="0" LUTs="90" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:930)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFix(CubicSplineBuilder.java:186)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:200)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:49)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="84" dst_node_input="i" src_node_id="83" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="84" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(45, -40, TWOSCOMPLEMENT)" />
		<Output latency="1" name="o" type="dfeOffsetFix(25, -20, TWOSCOMPLEMENT)" />
		<Text>NodeCast
{HWOffsetFix:45, -40, TWOSCOMPLEMENT} 
-&gt;
 {HWOffsetFix:25, -20, TWOSCOMPLEMENT}</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:181)
maxpower.math.interpolation.CubicSplineBuilder.cast(CubicSplineBuilder.java:301)
maxpower.math.interpolation.CubicSplineBuilder.access$3(CubicSplineBuilder.java:298)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFix(CubicSplineBuilder.java:186)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:200)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:49)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="85" dst_node_input="a" src_node_id="84" src_node_output="o" />
	<Node criticalPaths="[]" group="[]" id="85" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(25, -20, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(17, -17, UNSIGNED)" />
		<Output latency="4" name="result" type="dfeOffsetFix(42, -37, TWOSCOMPLEMENT)" />
		<Text>*</Text>
		<ResourceUsage DSPs="0" FFs="168" FMems="0" LUTs="210" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:1020)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFix(CubicSplineBuilder.java:186)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:200)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:49)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="86" dst_node_input="a" src_node_id="85" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1279" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(108)" />
		<Output latency="0" name="result" type="dfeBits(27)" />
		<Text>[53:27]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Mem.alloc(Mem.java:63)
maxpower.math.interpolation.CubicSplineBuilder.buildCoefficientRom(CubicSplineBuilder.java:293)
maxpower.math.interpolation.CubicSplineBuilder.access$1(CubicSplineBuilder.java:264)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:90)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:87)
maxpower.math.interpolation.CubicSplineBuilder.build(CubicSplineBuilder.java:239)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:43)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>27</Base>
		<Width>27</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1280" dst_node_input="input" src_node_id="1279" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1280" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(27)" />
		<Output latency="0" name="output" type="dfeOffsetFix(27, -23, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:27, -23, TWOSCOMPLEMENT}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Mem.alloc(Mem.java:63)
maxpower.math.interpolation.CubicSplineBuilder.buildCoefficientRom(CubicSplineBuilder.java:293)
maxpower.math.interpolation.CubicSplineBuilder.access$1(CubicSplineBuilder.java:264)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:90)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:87)
maxpower.math.interpolation.CubicSplineBuilder.build(CubicSplineBuilder.java:239)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:43)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="79" dst_node_input="option0" src_node_id="1280" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="1288" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(108)" />
		<Output latency="0" name="result" type="dfeBits(27)" />
		<Text>[53:27]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Mem.alloc(Mem.java:63)
maxpower.math.interpolation.CubicSplineBuilder.buildCoefficientRom(CubicSplineBuilder.java:293)
maxpower.math.interpolation.CubicSplineBuilder.access$1(CubicSplineBuilder.java:264)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:99)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:87)
maxpower.math.interpolation.CubicSplineBuilder.build(CubicSplineBuilder.java:239)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:43)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>27</Base>
		<Width>27</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1289" dst_node_input="input" src_node_id="1288" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1289" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(27)" />
		<Output latency="0" name="output" type="dfeOffsetFix(27, -23, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:27, -23, TWOSCOMPLEMENT}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Mem.alloc(Mem.java:63)
maxpower.math.interpolation.CubicSplineBuilder.buildCoefficientRom(CubicSplineBuilder.java:293)
maxpower.math.interpolation.CubicSplineBuilder.access$1(CubicSplineBuilder.java:264)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:99)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:87)
maxpower.math.interpolation.CubicSplineBuilder.build(CubicSplineBuilder.java:239)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:43)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="79" dst_node_input="option1" src_node_id="1289" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="79" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(27, -23, TWOSCOMPLEMENT)" />
		<Input name="option1" type="dfeOffsetFix(27, -23, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(27, -23, TWOSCOMPLEMENT)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="27" FMems="0" LUTs="27" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Control.mux(Control.java:124)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFix(CubicSplineBuilder.java:183)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:200)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:49)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="86" dst_node_input="b" src_node_id="79" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="86" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(42, -37, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(27, -23, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(43, -37, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<ResourceUsage DSPs="0" FFs="43" FMems="0" LUTs="86" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:930)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFix(CubicSplineBuilder.java:186)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:200)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:49)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="87" dst_node_input="i" src_node_id="86" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="87" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(43, -37, TWOSCOMPLEMENT)" />
		<Output latency="1" name="o" type="dfeOffsetFix(25, -19, TWOSCOMPLEMENT)" />
		<Text>NodeCast
{HWOffsetFix:43, -37, TWOSCOMPLEMENT} 
-&gt;
 {HWOffsetFix:25, -19, TWOSCOMPLEMENT}</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:181)
maxpower.math.interpolation.CubicSplineBuilder.cast(CubicSplineBuilder.java:301)
maxpower.math.interpolation.CubicSplineBuilder.access$3(CubicSplineBuilder.java:298)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFix(CubicSplineBuilder.java:186)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:200)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:49)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="88" dst_node_input="a" src_node_id="87" src_node_output="o" />
	<Node criticalPaths="[]" group="[]" id="88" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(25, -19, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(17, -17, UNSIGNED)" />
		<Output latency="4" name="result" type="dfeOffsetFix(42, -36, TWOSCOMPLEMENT)" />
		<Text>*</Text>
		<ResourceUsage DSPs="0" FFs="168" FMems="0" LUTs="210" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:1020)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFix(CubicSplineBuilder.java:186)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:200)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:49)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="89" dst_node_input="a" src_node_id="88" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1277" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(108)" />
		<Output latency="0" name="result" type="dfeBits(27)" />
		<Text>[26:0]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Mem.alloc(Mem.java:63)
maxpower.math.interpolation.CubicSplineBuilder.buildCoefficientRom(CubicSplineBuilder.java:293)
maxpower.math.interpolation.CubicSplineBuilder.access$1(CubicSplineBuilder.java:264)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:90)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:87)
maxpower.math.interpolation.CubicSplineBuilder.build(CubicSplineBuilder.java:239)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:43)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>0</Base>
		<Width>27</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1278" dst_node_input="input" src_node_id="1277" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1278" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(27)" />
		<Output latency="0" name="output" type="dfeOffsetFix(27, -23, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:27, -23, TWOSCOMPLEMENT}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Mem.alloc(Mem.java:63)
maxpower.math.interpolation.CubicSplineBuilder.buildCoefficientRom(CubicSplineBuilder.java:293)
maxpower.math.interpolation.CubicSplineBuilder.access$1(CubicSplineBuilder.java:264)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:90)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:87)
maxpower.math.interpolation.CubicSplineBuilder.build(CubicSplineBuilder.java:239)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:43)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="78" dst_node_input="option0" src_node_id="1278" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="1286" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(108)" />
		<Output latency="0" name="result" type="dfeBits(27)" />
		<Text>[26:0]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Mem.alloc(Mem.java:63)
maxpower.math.interpolation.CubicSplineBuilder.buildCoefficientRom(CubicSplineBuilder.java:293)
maxpower.math.interpolation.CubicSplineBuilder.access$1(CubicSplineBuilder.java:264)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:99)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:87)
maxpower.math.interpolation.CubicSplineBuilder.build(CubicSplineBuilder.java:239)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:43)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>0</Base>
		<Width>27</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1287" dst_node_input="input" src_node_id="1286" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1287" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(27)" />
		<Output latency="0" name="output" type="dfeOffsetFix(27, -23, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:27, -23, TWOSCOMPLEMENT}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Mem.alloc(Mem.java:63)
maxpower.math.interpolation.CubicSplineBuilder.buildCoefficientRom(CubicSplineBuilder.java:293)
maxpower.math.interpolation.CubicSplineBuilder.access$1(CubicSplineBuilder.java:264)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:99)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:87)
maxpower.math.interpolation.CubicSplineBuilder.build(CubicSplineBuilder.java:239)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:43)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="78" dst_node_input="option1" src_node_id="1287" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="78" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(27, -23, TWOSCOMPLEMENT)" />
		<Input name="option1" type="dfeOffsetFix(27, -23, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(27, -23, TWOSCOMPLEMENT)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="27" FMems="0" LUTs="27" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Control.mux(Control.java:124)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFix(CubicSplineBuilder.java:183)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:200)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:49)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="89" dst_node_input="b" src_node_id="78" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="89" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(42, -36, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(27, -23, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(42, -36, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<ResourceUsage DSPs="0" FFs="42" FMems="0" LUTs="84" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:930)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFix(CubicSplineBuilder.java:186)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:200)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:49)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="90" dst_node_input="i" src_node_id="89" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="90" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(42, -36, TWOSCOMPLEMENT)" />
		<Output latency="1" name="o" type="dfeOffsetFix(25, -19, TWOSCOMPLEMENT)" />
		<Text>NodeCast
{HWOffsetFix:42, -36, TWOSCOMPLEMENT} 
-&gt;
 {HWOffsetFix:25, -19, TWOSCOMPLEMENT}</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:181)
maxpower.math.interpolation.CubicSplineBuilder.cast(CubicSplineBuilder.java:301)
maxpower.math.interpolation.CubicSplineBuilder.access$3(CubicSplineBuilder.java:298)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFix(CubicSplineBuilder.java:186)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:200)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:49)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="91" dst_node_input="i" src_node_id="90" src_node_output="o" />
	<Node criticalPaths="[]" group="[]" id="91" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(25, -19, TWOSCOMPLEMENT)" />
		<Output latency="6" name="o" type="dfeFloat(8, 24)" />
		<Text>NodeCast
{HWOffsetFix:25, -19, TWOSCOMPLEMENT} 
-&gt;
 {HWFloat:8, 24}</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:181)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:49)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="97" dst_node_input="a" src_node_id="91" src_node_output="o" />
	<Node criticalPaths="[]" group="[]" id="92" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>1.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.shiftRight(DFEVar.java:262)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:50)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>1.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="93" dst_node_input="shift" src_node_id="92" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="93" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeShift">
		<Input name="datain" type="dfeOffsetFix(25, -24, UNSIGNED)" />
		<Input name="shift" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="dataout" type="dfeBits(25)" />
		<Text>&gt;&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.shiftRight(DFEVar.java:262)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:50)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Direction>Right</Direction>
		<Circular>false</Circular>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="94" dst_node_input="input" src_node_id="93" src_node_output="dataout" />
	<Node criticalPaths="[]" group="[]" id="94" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(25)" />
		<Output latency="0" name="output" type="dfeOffsetFix(25, -24, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:25, -24, UNSIGNED}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.shiftRight(DFEVar.java:262)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:50)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="95" dst_node_input="option1" src_node_id="94" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="95" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(25, -24, UNSIGNED)" />
		<Input name="option1" type="dfeOffsetFix(25, -24, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(25, -24, UNSIGNED)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="25" FMems="0" LUTs="25" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1187)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:50)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="96" dst_node_input="i" src_node_id="95" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="96" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(25, -24, UNSIGNED)" />
		<Output latency="6" name="o" type="dfeFloat(8, 24)" />
		<Text>NodeCast
{HWOffsetFix:25, -24, UNSIGNED} 
-&gt;
 {HWFloat:8, 24}</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:181)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:51)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="97" dst_node_input="b" src_node_id="96" src_node_output="o" />
	<Node criticalPaths="[]" group="[]" id="97" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<ResourceUsage DSPs="0" FFs="256" FMems="0" LUTs="288" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:1020)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:53)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="98" dst_node_input="b" src_node_id="97" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="98" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="12" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<ResourceUsage DSPs="0" FFs="384" FMems="0" LUTs="416" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:930)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:53)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="102" dst_node_input="option1" src_node_id="98" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="102" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="32" FMems="0" LUTs="32" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:55)
maxpower.math.interpolation.functions.arithmetic.FloatLog.value(FloatLog.java:66)
maxpower.math.functions.Arithmetic.log(Arithmetic.java:25)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="104" dst_node_input="b" src_node_id="102" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="104" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<ResourceUsage DSPs="0" FFs="256" FMems="0" LUTs="288" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mulAsRHS(DFEVar.java:1045)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:63)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="105" dst_node_input="b" src_node_id="104" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="110" dst_node_input="option0" src_node_id="104" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="105" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="11" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<ResourceUsage DSPs="0" FFs="352" FMems="0" LUTs="384" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:930)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:64)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="107" dst_node_input="a" src_node_id="105" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1253" dst_node_input="input" src_node_id="105" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1255" dst_node_input="a" src_node_id="105" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1258" dst_node_input="arg2" src_node_id="105" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="2" dst_node_input="length" src_node_id="105" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1253" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeStreamOffset">
		<Input name="input" type="dfeFloat(8, 24)" />
		<Output latency="-loopLength" name="output" type="dfeFloat(8, 24)" />
		<Text>stream offset: -loopLength</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:353)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:112)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="9" dst_node_input="a" src_node_id="1253" src_node_output="output" />
	<Edge criticalPaths="[]" dst_node_id="2" dst_node_input="carriedlength" src_node_id="1253" src_node_output="output" />
	<Edge criticalPaths="[]" dst_node_id="26" dst_node_input="option0" src_node_id="1253" src_node_output="output" />
	<Edge criticalPaths="[]" dst_node_id="2" dst_node_input="lengthoffset" src_node_id="1253" src_node_output="output" />
	<Edge criticalPaths="[]" dst_node_id="1258" dst_node_input="arg3" src_node_id="1253" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="8" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>9.688792023218961E-4</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.gt(DFEVar.java:845)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:42)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>9.688792023218961E-4</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="9" dst_node_input="b" src_node_id="8" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="9" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeGt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="2" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;</Text>
		<ResourceUsage DSPs="0" FFs="2" FMems="0" LUTs="3" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.gt(DFEVar.java:845)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:42)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="10" dst_node_input="a" src_node_id="9" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="3" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x1; 1.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.pulse(Count.java:703)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:30)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>1</Value>
		<HexValue>0x1</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="4" dst_node_input="enable" src_node_id="3" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="4" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodePulse">
		<Input name="enable" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>pulse(90)</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.pulse(Count.java:703)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:30)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="10" dst_node_input="b" src_node_id="4" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="10" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeOr">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>|</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.or(DFEVar.java:469)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:42)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="12" dst_node_input="sel" src_node_id="10" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="14" dst_node_input="sel" src_node_id="10" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="16" dst_node_input="sel" src_node_id="10" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="18" dst_node_input="sel" src_node_id="10" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="20" dst_node_input="sel" src_node_id="10" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="22" dst_node_input="sel" src_node_id="10" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="24" dst_node_input="sel" src_node_id="10" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="26" dst_node_input="sel" src_node_id="10" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="2" dst_node_input="reset" src_node_id="10" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="11" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1228)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:47)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="12" dst_node_input="option1" src_node_id="11" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="12" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="32" FMems="0" LUTs="32" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1228)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:47)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="112" dst_node_input="a" src_node_id="12" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="106" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>9.688792023218961E-4</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.gt(DFEVar.java:845)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:65)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>9.688792023218961E-4</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="107" dst_node_input="b" src_node_id="106" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="107" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeGt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="2" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;</Text>
		<ResourceUsage DSPs="0" FFs="2" FMems="0" LUTs="3" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.gt(DFEVar.java:845)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:65)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="2" dst_node_input="pastlimit" src_node_id="107" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="110" dst_node_input="sel" src_node_id="107" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="119" dst_node_input="arg1" src_node_id="107" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1196" dst_node_input="a" src_node_id="107" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1201" dst_node_input="a" src_node_id="107" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1211" dst_node_input="a" src_node_id="107" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1221" dst_node_input="a" src_node_id="107" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1232" dst_node_input="a" src_node_id="107" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1236" dst_node_input="a" src_node_id="107" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1240" dst_node_input="a" src_node_id="107" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1242" dst_node_input="a" src_node_id="107" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1244" dst_node_input="a" src_node_id="107" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1261" dst_node_input="a" src_node_id="107" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1240" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeNot">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>~</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.complement(DFEVar.java:1110)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:98)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1241" dst_node_input="sel" src_node_id="1240" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1232" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeNot">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>~</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.complement(DFEVar.java:1110)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:95)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1233" dst_node_input="a" src_node_id="1232" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1244" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeNot">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>~</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.complement(DFEVar.java:1110)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:100)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1245" dst_node_input="sel" src_node_id="1244" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1236" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeNot">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>~</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.complement(DFEVar.java:1110)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:96)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1237" dst_node_input="a" src_node_id="1236" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1237" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.and(DFEVar.java:579)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:96)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1239" dst_node_input="sel" src_node_id="1237" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1221" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeNot">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>~</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.complement(DFEVar.java:1110)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:92)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1222" dst_node_input="a" src_node_id="1221" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1191" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<ResourceUsage DSPs="0" FFs="256" FMems="0" LUTs="288" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:1020)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:84)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1193" dst_node_input="a" src_node_id="1191" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1242" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeNot">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>~</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.complement(DFEVar.java:1110)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:99)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1243" dst_node_input="sel" src_node_id="1242" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1211" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeNot">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>~</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.complement(DFEVar.java:1110)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:91)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1212" dst_node_input="a" src_node_id="1211" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1212" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.and(DFEVar.java:579)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:91)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1220" dst_node_input="sel" src_node_id="1212" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="135" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>1.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.subAsRHS(DFEVar.java:1000)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:77)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>1.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="136" dst_node_input="a" src_node_id="135" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="129" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0xbf800000; -1.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:90)
mcss.LoopKernel.sampleCosTheta(LoopKernel.java:18)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:76)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>10111111100000000000000000000000</Value>
		<HexValue>0xbf800000</HexValue>
		<NumericValue>-1.0</NumericValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="133" dst_node_input="a" src_node_id="129" src_node_output="value" />
	<Edge criticalPaths="[]" dst_node_id="134" dst_node_input="option1" src_node_id="129" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="130" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3f800000; 1.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:90)
mcss.LoopKernel.sampleCosTheta(LoopKernel.java:18)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:76)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>00111111100000000000000000000000</Value>
		<HexValue>0x3f800000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="131" dst_node_input="a" src_node_id="130" src_node_output="value" />
	<Edge criticalPaths="[]" dst_node_id="132" dst_node_input="option0" src_node_id="130" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="127" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>1.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.subAsRHS(DFEVar.java:1000)
mcss.LoopKernel.sampleCosTheta(LoopKernel.java:17)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:76)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>1.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="128" dst_node_input="a" src_node_id="127" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="120" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>0.002647037785580363</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mulAsRHS(DFEVar.java:1045)
mcss.LoopKernel.sampleCosTheta(LoopKernel.java:17)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:76)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0.002647037785580363</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="121" dst_node_input="a" src_node_id="120" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="32" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(96)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>[63:32]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:629)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:62)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>32</Base>
		<Width>32</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="33" dst_node_input="input" src_node_id="32" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="33" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>&lt;{HWFloat:8, 24}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:629)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:62)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="121" dst_node_input="b" src_node_id="33" src_node_output="output" />
	<Edge criticalPaths="[]" dst_node_id="123" dst_node_input="b" src_node_id="33" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="121" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<ResourceUsage DSPs="0" FFs="256" FMems="0" LUTs="288" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mulAsRHS(DFEVar.java:1045)
mcss.LoopKernel.sampleCosTheta(LoopKernel.java:17)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:76)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="126" dst_node_input="a" src_node_id="121" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="122" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>1.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.subAsRHS(DFEVar.java:1000)
mcss.LoopKernel.sampleCosTheta(LoopKernel.java:17)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:76)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>1.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="123" dst_node_input="a" src_node_id="122" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="123" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSub">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="11" name="result" type="dfeFloat(8, 24)" />
		<Text>-</Text>
		<ResourceUsage DSPs="0" FFs="352" FMems="0" LUTs="384" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.subAsRHS(DFEVar.java:1000)
mcss.LoopKernel.sampleCosTheta(LoopKernel.java:17)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:76)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="125" dst_node_input="a" src_node_id="123" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="124" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>0.0013235188927901815</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:935)
mcss.LoopKernel.sampleCosTheta(LoopKernel.java:17)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:76)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0.0013235188927901815</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="125" dst_node_input="b" src_node_id="124" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="125" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="11" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<ResourceUsage DSPs="0" FFs="352" FMems="0" LUTs="384" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:935)
mcss.LoopKernel.sampleCosTheta(LoopKernel.java:17)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:76)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="126" dst_node_input="b" src_node_id="125" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="126" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeDiv">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="28" name="result" type="dfeFloat(8, 24)" />
		<Text>/</Text>
		<ResourceUsage DSPs="0" FFs="896" FMems="0" LUTs="928" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.div(DFEVar.java:1065)
mcss.LoopKernel.sampleCosTheta(LoopKernel.java:17)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:76)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="128" dst_node_input="b" src_node_id="126" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="128" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSub">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="11" name="result" type="dfeFloat(8, 24)" />
		<Text>-</Text>
		<ResourceUsage DSPs="0" FFs="352" FMems="0" LUTs="384" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.subAsRHS(DFEVar.java:1000)
mcss.LoopKernel.sampleCosTheta(LoopKernel.java:17)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:76)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="131" dst_node_input="b" src_node_id="128" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="132" dst_node_input="option1" src_node_id="128" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="131" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeGt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="2" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;</Text>
		<ResourceUsage DSPs="0" FFs="2" FMems="0" LUTs="3" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.min(KernelMath.java:615)
mcss.LoopKernel.sampleCosTheta(LoopKernel.java:18)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:76)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="132" dst_node_input="sel" src_node_id="131" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="132" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="32" FMems="0" LUTs="32" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.min(KernelMath.java:615)
mcss.LoopKernel.sampleCosTheta(LoopKernel.java:18)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:76)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="133" dst_node_input="b" src_node_id="132" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="134" dst_node_input="option0" src_node_id="132" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="133" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeGt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="2" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;</Text>
		<ResourceUsage DSPs="0" FFs="2" FMems="0" LUTs="3" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.max(KernelMath.java:648)
mcss.LoopKernel.sampleCosTheta(LoopKernel.java:18)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:76)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="134" dst_node_input="sel" src_node_id="133" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="134" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="32" FMems="0" LUTs="32" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.max(KernelMath.java:648)
mcss.LoopKernel.sampleCosTheta(LoopKernel.java:18)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:76)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="136" dst_node_input="b" src_node_id="134" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1208" dst_node_input="b" src_node_id="134" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1218" dst_node_input="b" src_node_id="134" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1225" dst_node_input="b" src_node_id="134" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1227" dst_node_input="option0" src_node_id="134" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="136" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSub">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="11" name="result" type="dfeFloat(8, 24)" />
		<Text>-</Text>
		<ResourceUsage DSPs="0" FFs="352" FMems="0" LUTs="384" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.subAsRHS(DFEVar.java:1000)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:77)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="138" dst_node_input="b" src_node_id="136" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="139" dst_node_input="a" src_node_id="136" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="137" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>2.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.subAsRHS(DFEVar.java:1000)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:78)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>2.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="138" dst_node_input="a" src_node_id="137" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="138" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSub">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="11" name="result" type="dfeFloat(8, 24)" />
		<Text>-</Text>
		<ResourceUsage DSPs="0" FFs="352" FMems="0" LUTs="384" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.subAsRHS(DFEVar.java:1000)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:78)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="139" dst_node_input="b" src_node_id="138" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="139" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<ResourceUsage DSPs="0" FFs="256" FMems="0" LUTs="288" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:1020)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:78)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="140" dst_node_input="a" src_node_id="139" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="140" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSqrt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="28" name="result" type="dfeFloat(8, 24)" />
		<Text>sqrt</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.sqrt(KernelMath.java:267)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:78)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="141" dst_node_input="i" src_node_id="140" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="141" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCast">
		<Input name="i" type="dfeFloat(8, 24)" />
		<Output latency="0" name="o" type="dfeFloat(8, 24)" />
		<Text>NodeCast
{HWFloat:8, 24} 
-&gt;
 {HWFloat:8, 24}</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.sqrt(KernelMath.java:267)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:78)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="664" dst_node_input="a" src_node_id="141" src_node_output="o" />
	<Edge criticalPaths="[]" dst_node_id="1190" dst_node_input="a" src_node_id="141" src_node_output="o" />
	<Node criticalPaths="[]" group="[]" id="667" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x0; 0.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.abs(KernelMath.java:243)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:25)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="669" dst_node_input="in0" src_node_id="667" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="142" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>6.283185307179586</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mulAsRHS(DFEVar.java:1045)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:79)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>6.283185307179586</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="143" dst_node_input="a" src_node_id="142" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="34" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(96)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>[95:64]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:629)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:62)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>64</Base>
		<Width>32</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="35" dst_node_input="input" src_node_id="34" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="35" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>&lt;{HWFloat:8, 24}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:629)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:62)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="143" dst_node_input="b" src_node_id="35" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="143" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<ResourceUsage DSPs="0" FFs="256" FMems="0" LUTs="288" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mulAsRHS(DFEVar.java:1045)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:79)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="145" dst_node_input="a" src_node_id="143" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="666" dst_node_input="a" src_node_id="143" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="668" dst_node_input="a" src_node_id="143" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="668" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeBits(31)" />
		<Text>[30:0]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.abs(KernelMath.java:243)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:25)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>0</Base>
		<Width>31</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="669" dst_node_input="in1" src_node_id="668" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="669" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="in1" type="dfeBits(31)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.abs(KernelMath.java:243)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:25)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="670" dst_node_input="input" src_node_id="669" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="670" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>&lt;{HWFloat:8, 24}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.abs(KernelMath.java:243)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:25)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="671" dst_node_input="a" src_node_id="670" src_node_output="output" />
	<Edge criticalPaths="[]" dst_node_id="677" dst_node_input="a" src_node_id="670" src_node_output="output" />
	<Edge criticalPaths="[]" dst_node_id="1178" dst_node_input="a" src_node_id="670" src_node_output="output" />
	<Edge criticalPaths="[]" dst_node_id="1180" dst_node_input="a" src_node_id="670" src_node_output="output" />
	<Edge criticalPaths="[]" dst_node_id="1181" dst_node_input="a" src_node_id="670" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="1178" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeBits(31)" />
		<Text>[30:0]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.isInfinity(FloatingPoint.java:171)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:47)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>0</Base>
		<Width>31</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1179" dst_node_input="a" src_node_id="1178" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1177" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(31)" />
		<Text>{HWRawBits:31}\n0x7f800000</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.isInfinity(FloatingPoint.java:167)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:47)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>1111111100000000000000000000000</Value>
		<HexValue>0x7f800000</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1179" dst_node_input="b" src_node_id="1177" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="1179" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeEq">
		<Input name="a" type="dfeBits(31)" />
		<Input name="b" type="dfeBits(31)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>==</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.isInfinity(FloatingPoint.java:173)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:47)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1187" dst_node_input="a" src_node_id="1179" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1181" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeBits(8)" />
		<Text>[30:23]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.isNaN(FloatingPoint.java:129)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:47)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>23</Base>
		<Width>8</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1183" dst_node_input="a" src_node_id="1181" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1182" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(8)" />
		<Text>{HWRawBits:8}\n0xff</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.isNaN(FloatingPoint.java:131)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:47)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>11111111</Value>
		<HexValue>0xff</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1183" dst_node_input="b" src_node_id="1182" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="1183" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeEq">
		<Input name="a" type="dfeBits(8)" />
		<Input name="b" type="dfeBits(8)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>==</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.isNaN(FloatingPoint.java:135)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:47)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1186" dst_node_input="a" src_node_id="1183" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1180" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeBits(23)" />
		<Text>[22:0]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.isNaN(FloatingPoint.java:128)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:47)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>0</Base>
		<Width>23</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1185" dst_node_input="a" src_node_id="1180" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1184" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>0.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.isNaN(FloatingPoint.java:135)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:47)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1185" dst_node_input="b" src_node_id="1184" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="1185" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeNeq">
		<Input name="a" type="dfeBits(23)" />
		<Input name="b" type="dfeBits(23)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>!=</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.isNaN(FloatingPoint.java:135)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:47)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1186" dst_node_input="b" src_node_id="1185" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1186" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.isNaN(FloatingPoint.java:135)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:47)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1187" dst_node_input="b" src_node_id="1186" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1187" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeOr">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>|</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.or(DFEVar.java:469)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:47)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1189" dst_node_input="sel" src_node_id="1187" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="665" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>0.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.lt(DFEVar.java:900)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:24)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="666" dst_node_input="b" src_node_id="665" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="666" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="2" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="2" FMems="0" LUTs="3" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.lt(DFEVar.java:900)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:24)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="704" dst_node_input="sel" src_node_id="666" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="672" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x1; 1.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:90)
maxpower.math.Utils.getMantissa(Utils.java:28)
maxpower.math.Utils.trigonometricRangeReduction(Utils.java:50)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:27)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>1</Value>
		<HexValue>0x1</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="673" dst_node_input="in0" src_node_id="672" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="671" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeBits(23)" />
		<Text>[22:0]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:344)
maxpower.math.Utils.getMantissa(Utils.java:27)
maxpower.math.Utils.trigonometricRangeReduction(Utils.java:50)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:27)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>0</Base>
		<Width>23</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="673" dst_node_input="in1" src_node_id="671" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="673" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="in1" type="dfeBits(23)" />
		<Output latency="0" name="result" type="dfeBits(24)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
maxpower.math.Utils.getMantissa(Utils.java:29)
maxpower.math.Utils.trigonometricRangeReduction(Utils.java:50)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:27)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="674" dst_node_input="input" src_node_id="673" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="674" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(24)" />
		<Output latency="0" name="output" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:24, -23, UNSIGNED}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:172)
maxpower.math.Utils.getMantissa(Utils.java:29)
maxpower.math.Utils.trigonometricRangeReduction(Utils.java:50)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:27)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="675" dst_node_input="input" src_node_id="674" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="675" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeBits(24)" />
		<Text>&lt;{HWRawBits:24}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.reinterpret(DFEVar.java:1440)
maxpower.math.Utils.trigonometricRangeReduction(Utils.java:61)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:27)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="676" dst_node_input="input" src_node_id="675" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="676" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(24)" />
		<Output latency="0" name="output" type="dfeOffsetFix(24, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:24, 0, UNSIGNED}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.reinterpret(DFEVar.java:1440)
maxpower.math.Utils.trigonometricRangeReduction(Utils.java:61)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:27)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="698" dst_node_input="a" src_node_id="676" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="677" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeBits(8)" />
		<Text>[30:23]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getExponent(FloatingPoint.java:37)
maxpower.math.Utils.getExponent(Utils.java:33)
maxpower.math.Utils.trigonometricRangeReduction(Utils.java:64)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:27)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>23</Base>
		<Width>8</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="678" dst_node_input="input" src_node_id="677" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="678" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(8)" />
		<Output latency="0" name="output" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:8, 0, UNSIGNED}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getExponent(FloatingPoint.java:38)
maxpower.math.Utils.getExponent(Utils.java:33)
maxpower.math.Utils.trigonometricRangeReduction(Utils.java:64)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:27)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="680" dst_node_input="a" src_node_id="678" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="679" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>127.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getExponent(FloatingPoint.java:41)
maxpower.math.Utils.getExponent(Utils.java:33)
maxpower.math.Utils.trigonometricRangeReduction(Utils.java:64)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:27)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>127.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="680" dst_node_input="b" src_node_id="679" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="680" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSub">
		<Input name="a" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>-</Text>
		<ResourceUsage DSPs="0" FFs="9" FMems="0" LUTs="18" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getExponent(FloatingPoint.java:41)
maxpower.math.Utils.getExponent(Utils.java:33)
maxpower.math.Utils.trigonometricRangeReduction(Utils.java:64)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:27)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="682" dst_node_input="a" src_node_id="680" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="681" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>24.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:990)
maxpower.math.Utils.trigonometricRangeReduction(Utils.java:64)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:27)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>24.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="682" dst_node_input="b" src_node_id="681" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="682" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSub">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>-</Text>
		<ResourceUsage DSPs="0" FFs="9" FMems="0" LUTs="18" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:990)
maxpower.math.Utils.trigonometricRangeReduction(Utils.java:64)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:27)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="685" dst_node_input="a" src_node_id="682" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="687" dst_node_input="a" src_node_id="682" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="688" dst_node_input="a" src_node_id="682" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="689" dst_node_input="option0" src_node_id="682" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="684" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>0.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.lt(DFEVar.java:900)
maxpower.math.Utils.trigonometricRangeReduction(Utils.java:74)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:27)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="685" dst_node_input="b" src_node_id="684" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="685" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.lt(DFEVar.java:900)
maxpower.math.Utils.trigonometricRangeReduction(Utils.java:74)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:27)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="694" dst_node_input="sel" src_node_id="685" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="683" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(185)" />
		<Text>{HWRawBits:185}\n0x0a2f9836e4e441529fc2757d1f534ddc0db6295993c4390</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:60)
maxpower.math.Utils.getTwoOverPI(Utils.java:129)
maxpower.math.Utils.trigonometricRangeReduction(Utils.java:72)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:27)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>01010001011111001100000110110111001001110010001000001010100101001111111000010011101010111110100011111010100110100110111011100000011011011011000101001010110011001001111000100001110010000</Value>
		<HexValue>0x0a2f9836e4e441529fc2757d1f534ddc0db6295993c4390</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="692" dst_node_input="datain" src_node_id="683" src_node_output="value" />
	<Edge criticalPaths="[]" dst_node_id="693" dst_node_input="datain" src_node_id="683" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="686" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>0.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.abs(KernelMath.java:250)
maxpower.math.Utils.trigonometricRangeReduction(Utils.java:75)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:27)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="687" dst_node_input="b" src_node_id="686" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="687" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.abs(KernelMath.java:250)
maxpower.math.Utils.trigonometricRangeReduction(Utils.java:75)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:27)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="689" dst_node_input="sel" src_node_id="687" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="688" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeNeg">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>(-)</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.abs(KernelMath.java:250)
maxpower.math.Utils.trigonometricRangeReduction(Utils.java:75)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:27)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="689" dst_node_input="option1" src_node_id="688" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="689" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="option1" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="9" FMems="0" LUTs="9" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.abs(KernelMath.java:250)
maxpower.math.Utils.trigonometricRangeReduction(Utils.java:75)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:27)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="690" dst_node_input="a" src_node_id="689" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="690" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="result" type="dfeBits(8)" />
		<Text>[7:0]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:344)
maxpower.math.Utils.trigonometricRangeReduction(Utils.java:76)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:27)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>0</Base>
		<Width>8</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="691" dst_node_input="input" src_node_id="690" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="691" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(8)" />
		<Output latency="0" name="output" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:8, 0, UNSIGNED}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:172)
maxpower.math.Utils.trigonometricRangeReduction(Utils.java:77)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:27)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="692" dst_node_input="shift" src_node_id="691" src_node_output="output" />
	<Edge criticalPaths="[]" dst_node_id="693" dst_node_input="shift" src_node_id="691" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="693" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeShift">
		<Input name="datain" type="dfeBits(185)" />
		<Input name="shift" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Output latency="4" name="dataout" type="dfeBits(185)" />
		<Text>&lt;&lt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.shiftLeft(DFEVar.java:219)
maxpower.math.Utils.trigonometricRangeReduction(Utils.java:80)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:27)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Direction>Left</Direction>
		<Circular>false</Circular>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="694" dst_node_input="option0" src_node_id="693" src_node_output="dataout" />
	<Node criticalPaths="[]" group="[]" id="692" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeShift">
		<Input name="datain" type="dfeBits(185)" />
		<Input name="shift" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Output latency="4" name="dataout" type="dfeBits(185)" />
		<Text>&gt;&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.shiftRight(DFEVar.java:243)
maxpower.math.Utils.trigonometricRangeReduction(Utils.java:80)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:27)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Direction>Right</Direction>
		<Circular>false</Circular>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="694" dst_node_input="option1" src_node_id="692" src_node_output="dataout" />
	<Node criticalPaths="[]" group="[]" id="694" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(185)" />
		<Input name="option1" type="dfeBits(185)" />
		<Output latency="1" name="result" type="dfeBits(185)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="185" FMems="0" LUTs="185" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1187)
maxpower.math.Utils.trigonometricRangeReduction(Utils.java:80)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:27)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="695" dst_node_input="a" src_node_id="694" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="695" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(185)" />
		<Output latency="0" name="result" type="dfeBits(81)" />
		<Text>[184:104]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:344)
maxpower.math.Utils.trigonometricRangeReduction(Utils.java:82)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:27)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>104</Base>
		<Width>81</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="696" dst_node_input="input" src_node_id="695" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="696" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(81)" />
		<Output latency="0" name="output" type="dfeBits(81)" />
		<Text>&lt;{HWRawBits:81}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.reinterpret(DFEVar.java:1440)
maxpower.math.Utils.trigonometricRangeReduction(Utils.java:83)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:27)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="697" dst_node_input="input" src_node_id="696" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="697" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(81)" />
		<Output latency="0" name="output" type="dfeOffsetFix(81, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:81, 0, UNSIGNED}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.reinterpret(DFEVar.java:1440)
maxpower.math.Utils.trigonometricRangeReduction(Utils.java:83)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:27)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="698" dst_node_input="b" src_node_id="697" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="698" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(24, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(81, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(81, 0, UNSIGNED)" />
		<Text>*</Text>
		<ResourceUsage DSPs="0" FFs="81" FMems="0" LUTs="162" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:1020)
maxpower.math.Utils.trigonometricRangeReduction(Utils.java:92)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:27)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="699" dst_node_input="input" src_node_id="698" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="699" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(81, 0, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeBits(81)" />
		<Text>&lt;{HWRawBits:81}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.reinterpret(DFEVar.java:1440)
maxpower.math.Utils.trigonometricRangeReduction(Utils.java:95)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:27)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="700" dst_node_input="input" src_node_id="699" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="700" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(81)" />
		<Output latency="0" name="output" type="dfeOffsetFix(81, -79, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:81, -79, UNSIGNED}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.reinterpret(DFEVar.java:1440)
maxpower.math.Utils.trigonometricRangeReduction(Utils.java:95)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:27)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="701" dst_node_input="a" src_node_id="700" src_node_output="output" />
	<Edge criticalPaths="[]" dst_node_id="705" dst_node_input="a" src_node_id="700" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="701" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeOffsetFix(81, -79, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(2)" />
		<Text>[80:79]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:344)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:29)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>79</Base>
		<Width>2</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="703" dst_node_input="a" src_node_id="701" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="704" dst_node_input="option0" src_node_id="701" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="702" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>2.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.xor(DFEVar.java:539)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:32)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>2.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="703" dst_node_input="b" src_node_id="702" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="703" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeXor">
		<Input name="a" type="dfeBits(2)" />
		<Input name="b" type="dfeBits(2)" />
		<Output latency="1" name="result" type="dfeBits(2)" />
		<Text>^</Text>
		<ResourceUsage DSPs="0" FFs="2" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.xor(DFEVar.java:539)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:32)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="704" dst_node_input="option1" src_node_id="703" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="704" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(2)" />
		<Input name="option1" type="dfeBits(2)" />
		<Output latency="1" name="result" type="dfeBits(2)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="2" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1187)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:32)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="747" dst_node_input="a" src_node_id="704" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="749" dst_node_input="a" src_node_id="704" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="751" dst_node_input="a" src_node_id="704" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="748" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>2.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.eq(DFEVar.java:649)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:41)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>2.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="749" dst_node_input="b" src_node_id="748" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="749" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeEq">
		<Input name="a" type="dfeBits(2)" />
		<Input name="b" type="dfeBits(2)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>==</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.eq(DFEVar.java:649)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:41)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="752" dst_node_input="a" src_node_id="749" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="750" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>3.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.eq(DFEVar.java:649)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:41)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>3.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="751" dst_node_input="b" src_node_id="750" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="751" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeEq">
		<Input name="a" type="dfeBits(2)" />
		<Input name="b" type="dfeBits(2)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>==</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.eq(DFEVar.java:649)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:41)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="752" dst_node_input="b" src_node_id="751" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="752" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeOr">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>|</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.or(DFEVar.java:469)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:41)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1176" dst_node_input="sel" src_node_id="752" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="705" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeOffsetFix(81, -79, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(79)" />
		<Text>[78:0]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:344)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:37)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>0</Base>
		<Width>79</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="706" dst_node_input="input" src_node_id="705" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="706" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(79)" />
		<Output latency="0" name="output" type="dfeOffsetFix(79, -79, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:79, -79, UNSIGNED}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:172)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:38)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="708" dst_node_input="a" src_node_id="706" src_node_output="output" />
	<Edge criticalPaths="[]" dst_node_id="709" dst_node_input="i" src_node_id="706" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="709" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(79, -79, UNSIGNED)" />
		<Output latency="0" name="o" type="dfeOffsetFix(80, -79, TWOSCOMPLEMENT)" />
		<Text>NodeCast
{HWOffsetFix:79, -79, UNSIGNED} 
-&gt;
 {HWOffsetFix:80, -79, TWOSCOMPLEMENT}</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:181)
com.maxeler.maxblox.utils.Frexpf.&lt;init&gt;(Frexpf.java:46)
maxpower.math.Utils.ldexp(Utils.java:108)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:37)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="710" dst_node_input="input" src_node_id="709" src_node_output="o" />
	<Edge criticalPaths="[]" dst_node_id="724" dst_node_input="datain" src_node_id="709" src_node_output="o" />
	<Edge criticalPaths="[]" dst_node_id="726" dst_node_input="option0" src_node_id="709" src_node_output="o" />
	<Node criticalPaths="[]" group="[]" id="710" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLeading1Detect">
		<Input name="input" type="dfeOffsetFix(80, -79, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(80, 0, UNSIGNED)" />
		<Text>Leading 1 Detect (MSB)</Text>
		<ResourceUsage DSPs="0" FFs="80" FMems="0" LUTs="80" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Bitops.leading1Detect(Bitops.java:197)
com.maxeler.maxblox.utils.Frexpf.&lt;init&gt;(Frexpf.java:49)
maxpower.math.Utils.ldexp(Utils.java:108)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:37)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="711" dst_node_input="input" src_node_id="710" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="711" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeOneHotDecode">
		<Input name="input" type="dfeOffsetFix(80, 0, UNSIGNED)" />
		<Output latency="1" name="output" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Text>One-Hot -&gt; binary</Text>
		<ResourceUsage DSPs="0" FFs="7" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Bitops.onehotDecode(Bitops.java:155)
com.maxeler.maxblox.utils.Frexpf.&lt;init&gt;(Frexpf.java:50)
maxpower.math.Utils.ldexp(Utils.java:108)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:37)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="712" dst_node_input="i" src_node_id="711" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="712" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Output latency="0" name="o" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Text>NodeCast
{HWOffsetFix:7, 0, UNSIGNED} 
-&gt;
 {HWOffsetFix:8, 0, TWOSCOMPLEMENT}</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:181)
com.maxeler.maxblox.utils.Frexpf.&lt;init&gt;(Frexpf.java:51)
maxpower.math.Utils.ldexp(Utils.java:108)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:37)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="714" dst_node_input="a" src_node_id="712" src_node_output="o" />
	<Edge criticalPaths="[]" dst_node_id="718" dst_node_input="b" src_node_id="712" src_node_output="o" />
	<Node criticalPaths="[]" group="[]" id="713" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>79.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:990)
com.maxeler.maxblox.utils.Frexpf.&lt;init&gt;(Frexpf.java:54)
maxpower.math.Utils.ldexp(Utils.java:108)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:37)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>79.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="714" dst_node_input="b" src_node_id="713" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="714" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSub">
		<Input name="a" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Text>-</Text>
		<ResourceUsage DSPs="0" FFs="8" FMems="0" LUTs="16" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:990)
com.maxeler.maxblox.utils.Frexpf.&lt;init&gt;(Frexpf.java:54)
maxpower.math.Utils.ldexp(Utils.java:108)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:37)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="716" dst_node_input="a" src_node_id="714" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="715" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>1.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:990)
com.maxeler.maxblox.utils.Frexpf.&lt;init&gt;(Frexpf.java:54)
maxpower.math.Utils.ldexp(Utils.java:108)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:37)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>1.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="716" dst_node_input="b" src_node_id="715" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="716" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSub">
		<Input name="a" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Text>-</Text>
		<ResourceUsage DSPs="0" FFs="8" FMems="0" LUTs="16" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:990)
com.maxeler.maxblox.utils.Frexpf.&lt;init&gt;(Frexpf.java:54)
maxpower.math.Utils.ldexp(Utils.java:108)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:37)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="729" dst_node_input="i" src_node_id="716" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="729" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>NodeCast
{HWOffsetFix:8, 0, TWOSCOMPLEMENT} 
-&gt;
 {HWOffsetFix:9, 0, TWOSCOMPLEMENT}</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:181)
maxpower.math.Utils.ldexp(Utils.java:109)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:37)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="731" dst_node_input="a" src_node_id="729" src_node_output="o" />
	<Node criticalPaths="[]" group="[]" id="730" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>127.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:945)
maxpower.math.Utils.ldexp(Utils.java:109)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:37)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>127.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="731" dst_node_input="b" src_node_id="730" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="731" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<ResourceUsage DSPs="0" FFs="9" FMems="0" LUTs="18" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:945)
maxpower.math.Utils.ldexp(Utils.java:109)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:37)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="734" dst_node_input="i" src_node_id="731" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="740" dst_node_input="a" src_node_id="731" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="744" dst_node_input="a" src_node_id="731" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="743" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>-126.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.lt(DFEVar.java:900)
maxpower.math.Utils.ldexp(Utils.java:117)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:37)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>-126.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="744" dst_node_input="b" src_node_id="743" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="744" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.lt(DFEVar.java:900)
maxpower.math.Utils.ldexp(Utils.java:117)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:37)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="746" dst_node_input="sel" src_node_id="744" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="739" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>127.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.gt(DFEVar.java:855)
maxpower.math.Utils.ldexp(Utils.java:116)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:37)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>127.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="740" dst_node_input="b" src_node_id="739" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="740" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeGt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.gt(DFEVar.java:855)
maxpower.math.Utils.ldexp(Utils.java:116)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:37)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="742" dst_node_input="sel" src_node_id="740" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="707" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>0.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.lt(DFEVar.java:900)
maxpower.math.Utils.ldexp(Utils.java:107)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:37)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="708" dst_node_input="b" src_node_id="707" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="708" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(79, -79, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(79, -79, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.lt(DFEVar.java:900)
maxpower.math.Utils.ldexp(Utils.java:107)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:37)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="735" dst_node_input="in0" src_node_id="708" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="734" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Text>NodeCast
{HWOffsetFix:9, 0, TWOSCOMPLEMENT} 
-&gt;
 {HWOffsetFix:8, 0, UNSIGNED}</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:181)
maxpower.math.Utils.ldexp(Utils.java:115)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:37)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="735" dst_node_input="in1" src_node_id="734" src_node_output="o" />
	<Node criticalPaths="[]" group="[]" id="735" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="in1" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(9)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
maxpower.math.Utils.ldexp(Utils.java:115)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:37)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="736" dst_node_input="in0" src_node_id="735" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="717" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>80.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.subAsRHS(DFEVar.java:1010)
com.maxeler.maxblox.utils.Frexpf.&lt;init&gt;(Frexpf.java:55)
maxpower.math.Utils.ldexp(Utils.java:108)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:37)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>80.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="718" dst_node_input="a" src_node_id="717" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="718" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSub">
		<Input name="a" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Text>-</Text>
		<ResourceUsage DSPs="0" FFs="8" FMems="0" LUTs="16" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.subAsRHS(DFEVar.java:1010)
com.maxeler.maxblox.utils.Frexpf.&lt;init&gt;(Frexpf.java:55)
maxpower.math.Utils.ldexp(Utils.java:108)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:37)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="720" dst_node_input="a" src_node_id="718" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="719" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>1.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:990)
com.maxeler.maxblox.utils.Frexpf.&lt;init&gt;(Frexpf.java:55)
maxpower.math.Utils.ldexp(Utils.java:108)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:37)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>1.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="720" dst_node_input="b" src_node_id="719" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="720" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSub">
		<Input name="a" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Text>-</Text>
		<ResourceUsage DSPs="0" FFs="8" FMems="0" LUTs="16" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:990)
com.maxeler.maxblox.utils.Frexpf.&lt;init&gt;(Frexpf.java:55)
maxpower.math.Utils.ldexp(Utils.java:108)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:37)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="722" dst_node_input="a" src_node_id="720" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="723" dst_node_input="i" src_node_id="720" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="721" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>0.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.gt(DFEVar.java:855)
com.maxeler.maxblox.utils.Frexpf.&lt;init&gt;(Frexpf.java:56)
maxpower.math.Utils.ldexp(Utils.java:108)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:37)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="722" dst_node_input="b" src_node_id="721" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="722" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeGt">
		<Input name="a" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.gt(DFEVar.java:855)
com.maxeler.maxblox.utils.Frexpf.&lt;init&gt;(Frexpf.java:56)
maxpower.math.Utils.ldexp(Utils.java:108)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:37)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="726" dst_node_input="sel" src_node_id="722" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="723" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Text>NodeCast
{HWOffsetFix:8, 0, TWOSCOMPLEMENT} 
-&gt;
 {HWOffsetFix:7, 0, UNSIGNED}</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:181)
com.maxeler.maxblox.utils.Frexpf.&lt;init&gt;(Frexpf.java:57)
maxpower.math.Utils.ldexp(Utils.java:108)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:37)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="724" dst_node_input="shift" src_node_id="723" src_node_output="o" />
	<Node criticalPaths="[]" group="[]" id="724" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeShift">
		<Input name="datain" type="dfeOffsetFix(80, -79, TWOSCOMPLEMENT)" />
		<Input name="shift" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Output latency="4" name="dataout" type="dfeBits(80)" />
		<Text>&lt;&lt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.shiftLeft(DFEVar.java:219)
com.maxeler.maxblox.utils.Frexpf.&lt;init&gt;(Frexpf.java:57)
maxpower.math.Utils.ldexp(Utils.java:108)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:37)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Direction>Left</Direction>
		<Circular>false</Circular>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="725" dst_node_input="input" src_node_id="724" src_node_output="dataout" />
	<Node criticalPaths="[]" group="[]" id="725" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(80)" />
		<Output latency="0" name="output" type="dfeOffsetFix(80, -79, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:80, -79, TWOSCOMPLEMENT}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.shiftLeft(DFEVar.java:231)
com.maxeler.maxblox.utils.Frexpf.&lt;init&gt;(Frexpf.java:57)
maxpower.math.Utils.ldexp(Utils.java:108)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:37)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="726" dst_node_input="option1" src_node_id="725" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="726" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(80, -79, TWOSCOMPLEMENT)" />
		<Input name="option1" type="dfeOffsetFix(80, -79, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(80, -79, TWOSCOMPLEMENT)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="80" FMems="0" LUTs="80" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1187)
com.maxeler.maxblox.utils.Frexpf.&lt;init&gt;(Frexpf.java:56)
maxpower.math.Utils.ldexp(Utils.java:108)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:37)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="727" dst_node_input="input" src_node_id="726" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="727" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(80, -79, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeBits(80)" />
		<Text>&lt;{HWRawBits:80}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.reinterpret(DFEVar.java:1440)
com.maxeler.maxblox.utils.Frexpf.&lt;init&gt;(Frexpf.java:58)
maxpower.math.Utils.ldexp(Utils.java:108)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:37)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="728" dst_node_input="input" src_node_id="727" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="728" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(80)" />
		<Output latency="0" name="output" type="dfeOffsetFix(80, -78, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:80, -78, TWOSCOMPLEMENT}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.reinterpret(DFEVar.java:1440)
com.maxeler.maxblox.utils.Frexpf.&lt;init&gt;(Frexpf.java:58)
maxpower.math.Utils.ldexp(Utils.java:108)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:37)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="732" dst_node_input="i" src_node_id="728" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="732" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(80, -78, TWOSCOMPLEMENT)" />
		<Output latency="1" name="o" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>NodeCast
{HWOffsetFix:80, -78, TWOSCOMPLEMENT} 
-&gt;
 {HWOffsetFix:24, -23, UNSIGNED}</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:181)
maxpower.math.Utils.ldexp(Utils.java:112)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:37)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="733" dst_node_input="a" src_node_id="732" src_node_output="o" />
	<Node criticalPaths="[]" group="[]" id="733" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(23)" />
		<Text>[22:0]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:344)
maxpower.math.Utils.ldexp(Utils.java:113)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:37)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>0</Base>
		<Width>23</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="736" dst_node_input="in1" src_node_id="733" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="736" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(9)" />
		<Input name="in1" type="dfeBits(23)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
maxpower.math.Utils.ldexp(Utils.java:115)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:37)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="737" dst_node_input="input" src_node_id="736" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="737" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeBits(32)" />
		<Text>&lt;{HWRawBits:32}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.reinterpret(DFEVar.java:1440)
maxpower.math.Utils.ldexp(Utils.java:115)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:37)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="738" dst_node_input="input" src_node_id="737" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="738" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>&lt;{HWFloat:8, 24}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.reinterpret(DFEVar.java:1440)
maxpower.math.Utils.ldexp(Utils.java:115)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:37)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="742" dst_node_input="option0" src_node_id="738" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="741" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x7f800000; Infinity</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1228)
maxpower.math.Utils.ldexp(Utils.java:116)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:37)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>01111111100000000000000000000000</Value>
		<HexValue>0x7f800000</HexValue>
		<NumericValue>Infinity</NumericValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="742" dst_node_input="option1" src_node_id="741" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="742" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="32" FMems="0" LUTs="32" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1228)
maxpower.math.Utils.ldexp(Utils.java:116)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:37)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="746" dst_node_input="option0" src_node_id="742" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="745" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0xff800000; -Infinity</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1228)
maxpower.math.Utils.ldexp(Utils.java:117)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:37)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>11111111100000000000000000000000</Value>
		<HexValue>0xff800000</HexValue>
		<NumericValue>-Infinity</NumericValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="746" dst_node_input="option1" src_node_id="745" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="746" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="32" FMems="0" LUTs="32" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1228)
maxpower.math.Utils.ldexp(Utils.java:117)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:37)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="753" dst_node_input="a" src_node_id="746" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="754" dst_node_input="a" src_node_id="746" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="761" dst_node_input="a" src_node_id="746" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="767" dst_node_input="a" src_node_id="746" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="782" dst_node_input="a" src_node_id="746" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="954" dst_node_input="a" src_node_id="746" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="955" dst_node_input="a" src_node_id="746" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="962" dst_node_input="a" src_node_id="746" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="968" dst_node_input="a" src_node_id="746" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="983" dst_node_input="a" src_node_id="746" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1169" dst_node_input="a" src_node_id="746" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1171" dst_node_input="a" src_node_id="746" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1168" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>0.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.lt(DFEVar.java:890)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:151)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1169" dst_node_input="b" src_node_id="1168" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="1169" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="2" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="2" FMems="0" LUTs="3" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.lt(DFEVar.java:890)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:151)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1172" dst_node_input="a" src_node_id="1169" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1170" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>1.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.gte(DFEVar.java:800)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:151)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>1.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1171" dst_node_input="b" src_node_id="1170" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="1171" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeGte">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="2" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;=</Text>
		<ResourceUsage DSPs="0" FFs="2" FMems="0" LUTs="3" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.gte(DFEVar.java:800)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:151)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1172" dst_node_input="b" src_node_id="1171" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1172" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeOr">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>|</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.or(DFEVar.java:469)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:151)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1174" dst_node_input="sel" src_node_id="1172" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="747" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(2)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[0:0]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:344)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:40)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>0</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1155" dst_node_input="sel" src_node_id="747" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1156" dst_node_input="sel" src_node_id="747" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1157" dst_node_input="sel" src_node_id="747" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1158" dst_node_input="sel" src_node_id="747" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1159" dst_node_input="sel" src_node_id="747" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="771" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>7.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.addAsRHS(DFEVar.java:965)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:59)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>7.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="772" dst_node_input="a" src_node_id="771" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="767" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeBits(8)" />
		<Text>[30:23]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getExponent(FloatingPoint.java:37)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:59)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>23</Base>
		<Width>8</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="768" dst_node_input="input" src_node_id="767" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="768" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(8)" />
		<Output latency="0" name="output" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:8, 0, UNSIGNED}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getExponent(FloatingPoint.java:38)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:59)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="770" dst_node_input="a" src_node_id="768" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="769" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>127.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getExponent(FloatingPoint.java:41)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:59)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>127.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="770" dst_node_input="b" src_node_id="769" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="770" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSub">
		<Input name="a" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>-</Text>
		<ResourceUsage DSPs="0" FFs="9" FMems="0" LUTs="18" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getExponent(FloatingPoint.java:41)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:59)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="772" dst_node_input="b" src_node_id="770" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="772" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<ResourceUsage DSPs="0" FFs="9" FMems="0" LUTs="18" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.addAsRHS(DFEVar.java:965)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:59)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="774" dst_node_input="a" src_node_id="772" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="775" dst_node_input="i" src_node_id="772" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="773" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>0.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.lt(DFEVar.java:900)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:60)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="774" dst_node_input="b" src_node_id="773" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="774" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.lt(DFEVar.java:900)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:60)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="780" dst_node_input="sel" src_node_id="774" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="765" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(5, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:5, 0, UNSIGNED}\n0x00; 0.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:90)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:58)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>00000</Value>
		<HexValue>0x00</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="766" dst_node_input="in0" src_node_id="765" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="761" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[31:31]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getMantissa(FloatingPoint.java:93)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:55)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>31</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="762" dst_node_input="input" src_node_id="761" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="762" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(1)" />
		<Output latency="0" name="output" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:1, 0, UNSIGNED}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getMantissa(FloatingPoint.java:94)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:55)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="764" dst_node_input="sel" src_node_id="762" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="757" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getMantissa(FloatingPoint.java:89)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:55)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="758" dst_node_input="in0" src_node_id="757" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="754" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeBits(31)" />
		<Text>[30:0]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getMantissa(FloatingPoint.java:81)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:55)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>0</Base>
		<Width>31</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="756" dst_node_input="a" src_node_id="754" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="755" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>0.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getMantissa(FloatingPoint.java:82)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:55)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="756" dst_node_input="b" src_node_id="755" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="756" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeNeq">
		<Input name="a" type="dfeBits(31)" />
		<Input name="b" type="dfeBits(31)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>!=</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getMantissa(FloatingPoint.java:82)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:55)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="758" dst_node_input="in1" src_node_id="756" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="758" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(2)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getMantissa(FloatingPoint.java:89)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:55)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="759" dst_node_input="in0" src_node_id="758" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="753" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeBits(23)" />
		<Text>[22:0]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getMantissa(FloatingPoint.java:77)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:55)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>0</Base>
		<Width>23</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="759" dst_node_input="in1" src_node_id="753" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="759" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(2)" />
		<Input name="in1" type="dfeBits(23)" />
		<Output latency="0" name="result" type="dfeBits(25)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getMantissa(FloatingPoint.java:91)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:55)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="760" dst_node_input="input" src_node_id="759" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="760" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(25)" />
		<Output latency="0" name="output" type="dfeOffsetFix(25, -23, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:25, -23, TWOSCOMPLEMENT}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getMantissa(FloatingPoint.java:92)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:55)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="763" dst_node_input="a" src_node_id="760" src_node_output="output" />
	<Edge criticalPaths="[]" dst_node_id="764" dst_node_input="option0" src_node_id="760" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="763" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeNeg">
		<Input name="a" type="dfeOffsetFix(25, -23, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(25, -23, TWOSCOMPLEMENT)" />
		<Text>(-)</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getMantissa(FloatingPoint.java:95)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:55)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="764" dst_node_input="option1" src_node_id="763" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="764" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(25, -23, TWOSCOMPLEMENT)" />
		<Input name="option1" type="dfeOffsetFix(25, -23, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(25, -23, TWOSCOMPLEMENT)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="25" FMems="0" LUTs="25" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getMantissa(FloatingPoint.java:95)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:55)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="766" dst_node_input="in1" src_node_id="764" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="766" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeOffsetFix(5, 0, UNSIGNED)" />
		<Input name="in1" type="dfeOffsetFix(25, -23, TWOSCOMPLEMENT)" />
		<Output latency="0" name="result" type="dfeBits(30)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:58)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="776" dst_node_input="datain" src_node_id="766" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="775" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(5, 0, UNSIGNED)" />
		<Text>NodeCast
{HWOffsetFix:9, 0, TWOSCOMPLEMENT} 
-&gt;
 {HWOffsetFix:5, 0, UNSIGNED}</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:181)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:61)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="776" dst_node_input="shift" src_node_id="775" src_node_output="o" />
	<Node criticalPaths="[]" group="[]" id="776" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeShift">
		<Input name="datain" type="dfeBits(30)" />
		<Input name="shift" type="dfeOffsetFix(5, 0, UNSIGNED)" />
		<Output latency="4" name="dataout" type="dfeBits(30)" />
		<Text>&lt;&lt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.shiftLeft(DFEVar.java:219)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:62)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Direction>Left</Direction>
		<Circular>false</Circular>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="777" dst_node_input="a" src_node_id="776" src_node_output="dataout" />
	<Node criticalPaths="[]" group="[]" id="777" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(30)" />
		<Output latency="0" name="result" type="dfeBits(7)" />
		<Text>[29:23]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:344)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:63)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>23</Base>
		<Width>7</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="778" dst_node_input="input" src_node_id="777" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="778" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(7)" />
		<Output latency="0" name="output" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:7, 0, UNSIGNED}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:172)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:64)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="780" dst_node_input="option0" src_node_id="778" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="779" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:7, 0, UNSIGNED}\n0x00; 0.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1228)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:65)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0000000</Value>
		<HexValue>0x00</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="780" dst_node_input="option1" src_node_id="779" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="780" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Input name="option1" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="7" FMems="0" LUTs="7" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1228)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:65)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1313" dst_node_input="addr" src_node_id="780" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1313" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeROM">
		<Input name="addr" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Output latency="2" name="dout" type="dfeBits(128)" />
		<Text>ROM</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="4" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Mem.alloc(Mem.java:63)
maxpower.math.interpolation.CubicSplineBuilder.buildCoefficientRom(CubicSplineBuilder.java:293)
maxpower.math.interpolation.CubicSplineBuilder.access$1(CubicSplineBuilder.java:264)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:90)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:87)
maxpower.math.interpolation.CubicSplineBuilder.build(CubicSplineBuilder.java:239)
maxpower.math.interpolation.InterpolatorBuilder.build(InterpolatorBuilder.java:126)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:35)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Depth>128</Depth>
		<MemoryData>0xb4a55cf2aca335983c490fdb00000000
0xb4a55692b5780c603c490bfa3c490e90
0xb4a549d2b5f807703c49005a3cc90ab0
0xb4a536b3b639ff8f3c48ecfa3d16c32c
0xb4a51d36b677f43b3c48d1db3d48fb30
0xb4a4fd5ab69aefac3c48aefd3d7b2b74
0xb4a4d723b6b9df413c4884643d96a905
0xb4a4aa90b6d8c7ac3c48520f3dafb680
0xb4a477a4b6f7a7bc3c4818013dc8bd36
0xb4a43e61b70b3f1f3c47d63c3de1bc2e
0xb4a3fec9b71aa5033c478cc33dfab273
0xb4a3b8dfb72a04f03c473b993e09cf86
0xb4a36ca5b7395e4f3c46e2c03e164083
0xb4a31a1db748b0883c46823c3e22abb6
0xb4a2c14cb757fb053c461a113e2f10a2
0xb4a26235b7673d2e3c45aa433e3b6ecf
0xb4a1fcdbb776766d3c4532d63e47c5c2
0xb4a19142b782d3163c44b3cf3e541501
0xb4a11f6fb78a65ea3c442d333e605c13
0xb4a0a766b791f3683c439f063e6c9a7f
0xb4a0292bb7997b463c43094f3e78cfcc
0xb49fa4c3b7a0fd393c426c123e827dc0
0xb49f1a33b7a878f73c41c7573e888e93
0xb49e8982b7afee363c411b243e8e9a22
0xb49df2b4b7b75cad3c40677e3e94a031
0xb49d55ceb7bec4123c3fac6e3e9aa086
0xb49cb2d8b7c6241d3c3ee9fa3ea09ae5
0xb49c09d8b7cd7c843c3e202a3ea68f12
0xb49b5ad3b7d4ccff3c3d4f053eac7cd4
0xb49aa5d2b7dc15453c3c76943eb263ef
0xb499eadab7e355103c3b96df3eb8442a
0xb49929f2b7ea8c173c3aafee3ebe1d4a
0xb4986324b7f1ba133c39c1cb3ec3ef15
0xb4979675b7f8debd3c38cc7e3ec9b953
0xb496c3eeb7fff9cf3c37d0123ecf7bca
0xb495eb97b80385823c36cc903ed53641
0xb4950d79b80709093c35c2013edae880
0xb494299bb80a875d3c34b0713ee0924f
0xb4934007b80e00583c3397e93ee63375
0xb49250c6b81173db3c3278753eebcbbb
0xb4915be1b814e1c23c31521f3ef15aea
0xb4906161b81849eb3c3024f43ef6e0cb
0xb48f6150b81bac363c2ef0fe3efc5d27
0xb48e5bb8b81f08803c2db6493f00e7e4
0xb48d50a4b8225ea83c2c74e23f039c3d
0xb48c401cb825ae8e3c2b2cd53f064b82
0xb48b2a2cb828f8113c29de2e3f08f59b
0xb48a0edfb82c3b103c2888fb3f0b9a6b
0xb488ee3fb82f776c3c272d483f0e39da
0xb487c858b832ad033c25cb243f10d3cd
0xb4869d35b835dbb73c24629b3f13682a
0xb4856ce1b83903693c22f3bc3f15f6d9
0xb4843768b83c23f83c217e953f187fc0
0xb482fcd6b83f3d473c2003333f1b02c6
0xb481bd38b8424f363c1e81a73f1d7fd1
0xb4807899b84559a73c1cf9fe3f1ff6cb
0xb47e5e0cb8485c7c3c1b6c483f226799
0xb47bc118b84b57993c19d8943f24d225
0xb4791a6fb84e4ade3c183ef13f273656
0xb4766a2cb851362f3c169f703f299415
0xb473b068b854196f3c14fa213f2beb4a
0xb470ed40b856f4823c134f133f2e3bde
0xb46e20ceb859c74c3c119e573f3085bb
0xb46b4b2db85c91b03c0fe7fe3f32c8c9
0xb4686c7ab85f53943c0e2c193f3504f3
0xb46584d2b8620cdb3c0c6ab83f373a23
0xb4629450b864bd6b3c0aa3ee3f396842
0xb45f9b12b867652a3c08d7cc3f3b8f3b
0xb45c9935b86a03fd3c0706623f3daef9
0xb4598ed7b86c99ca3c052fc53f3fc767
0xb4567c16b86f26783c0354043f41d870
0xb4536110b871a9ee3c0173343f43e200
0xb4503de3b87424133bff1acc3f45e403
0xb44d12b0b87694ce3bfb455a3f47de65
0xb449df94b878fc083bf766393f49d112
0xb446a4b0b87b59a83bf37d8d3f4bbbf8
0xb4436224b87dad983bef8b7f3f4d9f02
0xb440180fb87ff7bf3beb90343f4f7a1f
0xb43cc692b8811c053be78bd53f514d3d
0xb4396dcfb882372f3be37e883f531849
0xb4360de5b8834d553bdf68763f54db31
0xb432a6f6b8845e6a3bdb49c73f5695e5
0xb42f3924b8856a653bd722a43f584853
0xb42bc491b886713c3bd2f3353f59f26a
0xb428495fb88772e33bcebba53f5b941a
0xb424c7afb8886f523bca7c1c3f5d2d53
0xb4213fa6b889667e3bc634c53f5ebe05
0xb41db165b88a585e3bc1e5c93f604621
0xb41a1d0fb88b44e93bbd8f543f61c598
0xb41682c9b88c2c153bb931903f633c5a
0xb412e2b5b88d0dda3bb4cca83f64aa59
0xb40f3cf7b88dea2e3bb060c83f660f88
0xb40b91b4b88ec10a3babee1b3f676bd8
0xb407e10fb88f92653ba774ce3f68bf3c
0xb4042b2db8905e373ba2f50b3f6a09a7
0xb4007033b89124793b9e6f003f6b4b0c
0xb3f9608ab891e5223b99e2da3f6c835e
0xb3f1d711b892a02a3b9550c53f6db293
0xb3ea4446b893558c3b90b8ee3f6ed89e
0xb3e2a872b89405403b8c1b833f6ff573
0xb3db03e1b894af3f3b8778b13f710908
0xb3d356deb89553823b82d0a63f721352
0xb3cba1b6b895f2033b7c471f3f731447
0xb3c3e4b4b8968abd3b72e3393f740bdd
0xb3bc2025b8971da93b6975f63f74fa0b
0xb3b45455b897aac13b5fffb33f75dec6
0xb3ac8191b89832013b5680cd3f76ba07
0xb3a4a826b898b3633b4cf9a23f778bc5
0xb39cc863b8992ee13b436a903f7853f8
0xb394e294b899a4783b39d3f53f791298
0xb38cf708b89a14223b3036303f79c79d
0xb385060cb89a7ddb3b2691a03f7a7302
0xb37a1fe0b89ae1a03b1ce6a43f7b14be
0xb36a2a03b89b3f6c3b13359c3f7baccd
0xb35a2b1eb89b973c3b097ee73f7c3b28
0xb34a23d1b89be90d3aff85c93f7cbfc9
0xb33a14b8b89c34da3aec03eb3f7d3aac
0xb329fe73b89c7aa23ad878f33f7dabcc
0xb319e1a0b89cba623ac4e5a33f7e1324
0xb309bedeb89cf4173ab14abb3f7e70b0
0xb2f32d9ab89d27be3a9da8fe3f7ec46d
0xb2d2d418b89d55573a8a012d3f7f0e58
0xb2b27275b89d7cdf3a6ca8123f7f4e6d
0xb29209f1b89d9e543a4544ac3f7f84ab
0xb2633797b89db9b63a1dd9ab3f7fb10f
0xb2225289b89dcf0339ecd1273f7fd397
0xb1c2ce73b89dde3b399de5d73f7fec43
0xb101e0a3b89de75d391de8e33f7ffb11</MemoryData>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1314" dst_node_input="a" src_node_id="1313" src_node_output="dout" />
	<Edge criticalPaths="[]" dst_node_id="1316" dst_node_input="a" src_node_id="1313" src_node_output="dout" />
	<Edge criticalPaths="[]" dst_node_id="1318" dst_node_input="a" src_node_id="1313" src_node_output="dout" />
	<Edge criticalPaths="[]" dst_node_id="1320" dst_node_input="a" src_node_id="1313" src_node_output="dout" />
	<Node criticalPaths="[]" group="[]" id="1320" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(128)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>[127:96]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Mem.alloc(Mem.java:63)
maxpower.math.interpolation.CubicSplineBuilder.buildCoefficientRom(CubicSplineBuilder.java:293)
maxpower.math.interpolation.CubicSplineBuilder.access$1(CubicSplineBuilder.java:264)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:90)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:87)
maxpower.math.interpolation.CubicSplineBuilder.build(CubicSplineBuilder.java:239)
maxpower.math.interpolation.InterpolatorBuilder.build(InterpolatorBuilder.java:126)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:35)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>96</Base>
		<Width>32</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1321" dst_node_input="input" src_node_id="1320" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1321" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>&lt;{HWFloat:8, 24}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Mem.alloc(Mem.java:63)
maxpower.math.interpolation.CubicSplineBuilder.buildCoefficientRom(CubicSplineBuilder.java:293)
maxpower.math.interpolation.CubicSplineBuilder.access$1(CubicSplineBuilder.java:264)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:90)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:87)
maxpower.math.interpolation.CubicSplineBuilder.build(CubicSplineBuilder.java:239)
maxpower.math.interpolation.InterpolatorBuilder.build(InterpolatorBuilder.java:126)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:35)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1159" dst_node_input="option0" src_node_id="1321" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="972" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>7.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.addAsRHS(DFEVar.java:965)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:59)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>7.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="973" dst_node_input="a" src_node_id="972" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="968" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeBits(8)" />
		<Text>[30:23]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getExponent(FloatingPoint.java:37)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:59)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>23</Base>
		<Width>8</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="969" dst_node_input="input" src_node_id="968" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="969" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(8)" />
		<Output latency="0" name="output" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:8, 0, UNSIGNED}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getExponent(FloatingPoint.java:38)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:59)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="971" dst_node_input="a" src_node_id="969" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="970" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>127.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getExponent(FloatingPoint.java:41)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:59)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>127.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="971" dst_node_input="b" src_node_id="970" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="971" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSub">
		<Input name="a" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>-</Text>
		<ResourceUsage DSPs="0" FFs="9" FMems="0" LUTs="18" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getExponent(FloatingPoint.java:41)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:59)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="973" dst_node_input="b" src_node_id="971" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="973" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<ResourceUsage DSPs="0" FFs="9" FMems="0" LUTs="18" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.addAsRHS(DFEVar.java:965)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:59)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="975" dst_node_input="a" src_node_id="973" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="976" dst_node_input="i" src_node_id="973" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="974" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>0.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.lt(DFEVar.java:900)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:60)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="975" dst_node_input="b" src_node_id="974" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="975" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.lt(DFEVar.java:900)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:60)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="981" dst_node_input="sel" src_node_id="975" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="966" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(5, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:5, 0, UNSIGNED}\n0x00; 0.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:90)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:58)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>00000</Value>
		<HexValue>0x00</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="967" dst_node_input="in0" src_node_id="966" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="962" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[31:31]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getMantissa(FloatingPoint.java:93)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:55)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>31</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="963" dst_node_input="input" src_node_id="962" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="963" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(1)" />
		<Output latency="0" name="output" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:1, 0, UNSIGNED}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getMantissa(FloatingPoint.java:94)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:55)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="965" dst_node_input="sel" src_node_id="963" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="958" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getMantissa(FloatingPoint.java:89)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:55)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="959" dst_node_input="in0" src_node_id="958" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="955" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeBits(31)" />
		<Text>[30:0]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getMantissa(FloatingPoint.java:81)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:55)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>0</Base>
		<Width>31</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="957" dst_node_input="a" src_node_id="955" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="956" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>0.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getMantissa(FloatingPoint.java:82)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:55)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="957" dst_node_input="b" src_node_id="956" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="957" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeNeq">
		<Input name="a" type="dfeBits(31)" />
		<Input name="b" type="dfeBits(31)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>!=</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getMantissa(FloatingPoint.java:82)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:55)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="959" dst_node_input="in1" src_node_id="957" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="959" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(2)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getMantissa(FloatingPoint.java:89)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:55)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="960" dst_node_input="in0" src_node_id="959" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="954" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeBits(23)" />
		<Text>[22:0]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getMantissa(FloatingPoint.java:77)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:55)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>0</Base>
		<Width>23</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="960" dst_node_input="in1" src_node_id="954" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="960" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(2)" />
		<Input name="in1" type="dfeBits(23)" />
		<Output latency="0" name="result" type="dfeBits(25)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getMantissa(FloatingPoint.java:91)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:55)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="961" dst_node_input="input" src_node_id="960" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="961" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(25)" />
		<Output latency="0" name="output" type="dfeOffsetFix(25, -23, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:25, -23, TWOSCOMPLEMENT}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getMantissa(FloatingPoint.java:92)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:55)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="964" dst_node_input="a" src_node_id="961" src_node_output="output" />
	<Edge criticalPaths="[]" dst_node_id="965" dst_node_input="option0" src_node_id="961" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="964" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeNeg">
		<Input name="a" type="dfeOffsetFix(25, -23, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(25, -23, TWOSCOMPLEMENT)" />
		<Text>(-)</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getMantissa(FloatingPoint.java:95)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:55)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="965" dst_node_input="option1" src_node_id="964" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="965" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(25, -23, TWOSCOMPLEMENT)" />
		<Input name="option1" type="dfeOffsetFix(25, -23, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(25, -23, TWOSCOMPLEMENT)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="25" FMems="0" LUTs="25" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getMantissa(FloatingPoint.java:95)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:55)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="967" dst_node_input="in1" src_node_id="965" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="967" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeOffsetFix(5, 0, UNSIGNED)" />
		<Input name="in1" type="dfeOffsetFix(25, -23, TWOSCOMPLEMENT)" />
		<Output latency="0" name="result" type="dfeBits(30)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:58)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="977" dst_node_input="datain" src_node_id="967" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="976" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(5, 0, UNSIGNED)" />
		<Text>NodeCast
{HWOffsetFix:9, 0, TWOSCOMPLEMENT} 
-&gt;
 {HWOffsetFix:5, 0, UNSIGNED}</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:181)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:61)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="977" dst_node_input="shift" src_node_id="976" src_node_output="o" />
	<Node criticalPaths="[]" group="[]" id="977" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeShift">
		<Input name="datain" type="dfeBits(30)" />
		<Input name="shift" type="dfeOffsetFix(5, 0, UNSIGNED)" />
		<Output latency="4" name="dataout" type="dfeBits(30)" />
		<Text>&lt;&lt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.shiftLeft(DFEVar.java:219)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:62)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Direction>Left</Direction>
		<Circular>false</Circular>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="978" dst_node_input="a" src_node_id="977" src_node_output="dataout" />
	<Node criticalPaths="[]" group="[]" id="978" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(30)" />
		<Output latency="0" name="result" type="dfeBits(7)" />
		<Text>[29:23]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:344)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:63)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>23</Base>
		<Width>7</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="979" dst_node_input="input" src_node_id="978" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="979" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(7)" />
		<Output latency="0" name="output" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:7, 0, UNSIGNED}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:172)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:64)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="981" dst_node_input="option0" src_node_id="979" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="980" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:7, 0, UNSIGNED}\n0x00; 0.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1228)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:65)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0000000</Value>
		<HexValue>0x00</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="981" dst_node_input="option1" src_node_id="980" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="981" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Input name="option1" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="7" FMems="0" LUTs="7" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1228)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:65)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1322" dst_node_input="addr" src_node_id="981" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1322" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeROM">
		<Input name="addr" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Output latency="2" name="dout" type="dfeBits(128)" />
		<Text>ROM</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="4" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Mem.alloc(Mem.java:63)
maxpower.math.interpolation.CubicSplineBuilder.buildCoefficientRom(CubicSplineBuilder.java:293)
maxpower.math.interpolation.CubicSplineBuilder.access$1(CubicSplineBuilder.java:264)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:99)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:87)
maxpower.math.interpolation.CubicSplineBuilder.build(CubicSplineBuilder.java:239)
maxpower.math.interpolation.InterpolatorBuilder.build(InterpolatorBuilder.java:126)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:35)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Depth>128</Depth>
		<MemoryData>0x3101e0a3b89dea68000000003f800000
0x31c2ce73b89de75db91de8e33f7ffb11
0x32225289b89dde3bb99de5d73f7fec43
0x32633797b89dcf03b9ecd1273f7fd397
0x329209f1b89db9b6ba1dd9ab3f7fb10f
0x32b27275b89d9e54ba4544ac3f7f84ab
0x32d2d418b89d7cdfba6ca8123f7f4e6d
0x32f32d9ab89d5557ba8a012d3f7f0e58
0x3309bedeb89d27beba9da8fe3f7ec46d
0x3319e1a0b89cf416bab14abb3f7e70b0
0x3329fe73b89cba62bac4e5a33f7e1324
0x333a14b8b89c7aa2bad878f33f7dabcc
0x334a23d1b89c34dabaec03eb3f7d3aac
0x335a2b1eb89be90cbaff85c93f7cbfc9
0x336a2a03b89b973cbb097ee73f7c3b28
0x337a1fe0b89b3f6cbb13359c3f7baccd
0x3385060cb89ae1a0bb1ce6a43f7b14be
0x338cf708b89a7ddbbb2691a03f7a7302
0x3394e294b89a1421bb3036303f79c79d
0x339cc863b899a477bb39d3f53f791298
0x33a4a826b8992ee1bb436a903f7853f8
0x33ac8191b898b362bb4cf9a23f778bc5
0x33b45455b8983201bb5680cd3f76ba07
0x33bc2025b897aac1bb5fffb33f75dec6
0x33c3e4b4b8971da9bb6975f63f74fa0b
0x33cba1b6b8968abdbb72e3393f740bdd
0x33d356deb895f203bb7c471f3f731447
0x33db03e1b8955381bb82d0a63f721352
0x33e2a872b894af3ebb8778b13f710908
0x33ea4446b894053fbb8c1b833f6ff573
0x33f1d711b893558cbb90b8ee3f6ed89e
0x33f9608ab892a02abb9550c53f6db293
0x34007033b891e521bb99e2da3f6c835e
0x34042b2db8912478bb9e6f003f6b4b0c
0x3407e10fb8905e37bba2f50b3f6a09a7
0x340b91b4b88f9265bba774ce3f68bf3c
0x340f3cf7b88ec10abbabee1b3f676bd8
0x3412e2b5b88dea2ebbb060c83f660f88
0x341682c9b88d0dd9bbb4cca83f64aa59
0x341a1d0fb88c2c14bbb931903f633c5a
0x341db165b88b44e8bbbd8f543f61c598
0x34213fa6b88a585dbbc1e5c93f604621
0x3424c7afb889667dbbc634c53f5ebe05
0x3428495fb8886f51bbca7c1c3f5d2d53
0x342bc491b88772e2bbcebba53f5b941a
0x342f3924b886713bbbd2f3353f59f26a
0x3432a6f6b8856a65bbd722a43f584853
0x34360de5b8845e69bbdb49c73f5695e5
0x34396dcfb8834d54bbdf68763f54db31
0x343cc692b882372ebbe37e883f531849
0x3440180fb8811c04bbe78bd53f514d3d
0x34436224b87ff7bebbeb90343f4f7a1f
0x3446a4b0b87dad96bbef8b7f3f4d9f02
0x3449df94b87b59a6bbf37d8d3f4bbbf8
0x344d12b0b878fc06bbf766393f49d112
0x34503de3b87694ccbbfb455a3f47de65
0x34536110b8742411bbff1acc3f45e403
0x34567c16b871a9ecbc0173343f43e200
0x34598ed7b86f2676bc0354043f41d870
0x345c9935b86c99c8bc052fc53f3fc767
0x345f9b12b86a03fbbc0706623f3daef9
0x34629450b8676528bc08d7cc3f3b8f3b
0x346584d2b864bd69bc0aa3ee3f396842
0x34686c7ab8620cd9bc0c6ab83f373a23
0x346b4b2db85f5392bc0e2c193f3504f3
0x346e20ceb85c91aebc0fe7fe3f32c8c9
0x3470ed40b859c74abc119e573f3085bb
0x3473b068b856f481bc134f133f2e3bde
0x34766a2cb854196dbc14fa213f2beb4a
0x34791a6fb851362dbc169f703f299415
0x347bc118b84e4adcbc183ef13f273656
0x347e5e0cb84b5797bc19d8943f24d225
0x34807899b8485c7abc1b6c483f226799
0x3481bd38b84559a5bc1cf9fe3f1ff6cb
0x3482fcd6b8424f34bc1e81a73f1d7fd1
0x34843768b83f3d45bc2003333f1b02c6
0x34856ce1b83c23f6bc217e953f187fc0
0x34869d35b8390367bc22f3bc3f15f6d9
0x3487c858b835dbb5bc24629b3f13682a
0x3488ee3fb832ad01bc25cb243f10d3cd
0x348a0edfb82f776abc272d483f0e39da
0x348b2a2cb82c3b0ebc2888fb3f0b9a6b
0x348c401cb828f80fbc29de2e3f08f59b
0x348d50a4b825ae8cbc2b2cd53f064b82
0x348e5bb8b8225ea6bc2c74e23f039c3d
0x348f6150b81f087ebc2db6493f00e7e4
0x34906161b81bac34bc2ef0fe3efc5d27
0x34915be1b81849e9bc3024f43ef6e0cb
0x349250c6b814e1c0bc31521f3ef15aea
0x34934007b81173d9bc3278753eebcbbb
0x3494299bb80e0056bc3397e93ee63375
0x34950d79b80a875abc34b0713ee0924f
0x3495eb97b8070907bc35c2013edae880
0x3496c3eeb803857fbc36cc903ed53641
0x34979675b7fff9cbbc37d0123ecf7bca
0x34986324b7f8deb9bc38cc7e3ec9b953
0x349929f2b7f1ba0ebc39c1cb3ec3ef15
0x3499eadab7ea8c12bc3aafee3ebe1d4a
0x349aa5d2b7e3550bbc3b96df3eb8442a
0x349b5ad3b7dc1541bc3c76943eb263ef
0x349c09d8b7d4ccfabc3d4f053eac7cd4
0x349cb2d8b7cd7c7fbc3e202a3ea68f12
0x349d55ceb7c62418bc3ee9fa3ea09ae5
0x349df2b4b7bec40dbc3fac6e3e9aa086
0x349e8982b7b75ca8bc40677e3e94a031
0x349f1a33b7afee31bc411b243e8e9a22
0x349fa4c3b7a878f2bc41c7573e888e93
0x34a0292bb7a0fd34bc426c123e827dc0
0x34a0a766b7997b41bc43094f3e78cfcc
0x34a11f6fb791f363bc439f063e6c9a7f
0x34a19142b78a65e5bc442d333e605c13
0x34a1fcdbb782d311bc44b3cf3e541501
0x34a26235b7767663bc4532d63e47c5c2
0x34a2c14cb7673d24bc45aa433e3b6ecf
0x34a31a1db757fafbbc461a113e2f10a2
0x34a36ca4b748b07ebc46823c3e22abb6
0x34a3b8dfb7395e44bc46e2c03e164083
0x34a3fec9b72a04e5bc473b993e09cf86
0x34a43e61b71aa4f8bc478cc33dfab273
0x34a477a4b70b3f15bc47d63c3de1bc2e
0x34a4aa90b6f7a7a7bc4818013dc8bd36
0x34a4d723b6d8c798bc48520f3dafb680
0x34a4fd5ab6b9df2dbc4884643d96a905
0x34a51d36b69aef98bc48aefd3d7b2b74
0x34a536b3b677f413bc48d1db3d48fb30
0x34a549d2b639ff67bc48ecfa3d16c32c
0x34a55692b5f8071ebc49005a3cc90ab0
0x34a55cf2b5780bbdbc490bfa3c490e90</MemoryData>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1323" dst_node_input="a" src_node_id="1322" src_node_output="dout" />
	<Edge criticalPaths="[]" dst_node_id="1325" dst_node_input="a" src_node_id="1322" src_node_output="dout" />
	<Edge criticalPaths="[]" dst_node_id="1327" dst_node_input="a" src_node_id="1322" src_node_output="dout" />
	<Edge criticalPaths="[]" dst_node_id="1329" dst_node_input="a" src_node_id="1322" src_node_output="dout" />
	<Node criticalPaths="[]" group="[]" id="1329" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(128)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>[127:96]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Mem.alloc(Mem.java:63)
maxpower.math.interpolation.CubicSplineBuilder.buildCoefficientRom(CubicSplineBuilder.java:293)
maxpower.math.interpolation.CubicSplineBuilder.access$1(CubicSplineBuilder.java:264)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:99)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:87)
maxpower.math.interpolation.CubicSplineBuilder.build(CubicSplineBuilder.java:239)
maxpower.math.interpolation.InterpolatorBuilder.build(InterpolatorBuilder.java:126)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:35)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>96</Base>
		<Width>32</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1330" dst_node_input="input" src_node_id="1329" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1330" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>&lt;{HWFloat:8, 24}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Mem.alloc(Mem.java:63)
maxpower.math.interpolation.CubicSplineBuilder.buildCoefficientRom(CubicSplineBuilder.java:293)
maxpower.math.interpolation.CubicSplineBuilder.access$1(CubicSplineBuilder.java:264)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:99)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:87)
maxpower.math.interpolation.CubicSplineBuilder.build(CubicSplineBuilder.java:239)
maxpower.math.interpolation.InterpolatorBuilder.build(InterpolatorBuilder.java:126)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:35)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1159" dst_node_input="option1" src_node_id="1330" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="1159" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeBits(1)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="32" FMems="0" LUTs="32" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Control.mux(Control.java:124)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:134)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1161" dst_node_input="a" src_node_id="1159" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="781" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>128.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:1035)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>128.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="782" dst_node_input="b" src_node_id="781" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="782" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<ResourceUsage DSPs="0" FFs="256" FMems="0" LUTs="288" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:1035)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="783" dst_node_input="a" src_node_id="782" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="788" dst_node_input="a" src_node_id="782" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="790" dst_node_input="a" src_node_id="782" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="790" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[31:31]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getSignBit(FloatingPoint.java:264)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:36)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>31</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="951" dst_node_input="sel" src_node_id="790" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="783" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeBits(8)" />
		<Text>[30:23]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getExponent(FloatingPoint.java:37)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:34)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>23</Base>
		<Width>8</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="784" dst_node_input="input" src_node_id="783" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="784" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(8)" />
		<Output latency="0" name="output" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:8, 0, UNSIGNED}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getExponent(FloatingPoint.java:38)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:34)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="786" dst_node_input="a" src_node_id="784" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="785" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>127.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getExponent(FloatingPoint.java:41)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:34)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>127.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="786" dst_node_input="b" src_node_id="785" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="786" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSub">
		<Input name="a" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>-</Text>
		<ResourceUsage DSPs="0" FFs="9" FMems="0" LUTs="18" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getExponent(FloatingPoint.java:41)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:34)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="792" dst_node_input="a" src_node_id="786" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="794" dst_node_input="a" src_node_id="786" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="798" dst_node_input="a" src_node_id="786" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="799" dst_node_input="a" src_node_id="786" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="806" dst_node_input="b" src_node_id="786" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="945" dst_node_input="i" src_node_id="786" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="791" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>23.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:80)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:42)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>23.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="792" dst_node_input="b" src_node_id="791" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="792" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeGte">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;=</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.gte(DFEVar.java:795)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:42)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="795" dst_node_input="a" src_node_id="792" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="793" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>-24.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:80)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:43)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>-24.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="794" dst_node_input="b" src_node_id="793" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="794" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLte">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;=</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.lte(DFEVar.java:750)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:43)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="795" dst_node_input="b" src_node_id="794" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="795" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeOr">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>|</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.or(DFEVar.java:469)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:44)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="947" dst_node_input="in0" src_node_id="795" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="797" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>-1.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.lte(DFEVar.java:765)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:49)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>-1.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="798" dst_node_input="b" src_node_id="797" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="798" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLte">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;=</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.lte(DFEVar.java:765)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:49)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="947" dst_node_input="in1" src_node_id="798" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="947" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="in1" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(2)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:61)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="948" dst_node_input="input" src_node_id="947" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="948" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(2)" />
		<Output latency="0" name="output" type="dfeOffsetFix(2, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:2, 0, UNSIGNED}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:172)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:61)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="949" dst_node_input="sel" src_node_id="948" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="939" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>22.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>22.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="940" dst_node_input="a" src_node_id="939" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="805" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>23.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.subAsRHS(DFEVar.java:1010)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:55)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>23.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="806" dst_node_input="a" src_node_id="805" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="806" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSub">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>-</Text>
		<ResourceUsage DSPs="0" FFs="9" FMems="0" LUTs="18" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.subAsRHS(DFEVar.java:1010)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:55)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="808" dst_node_input="b" src_node_id="806" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="814" dst_node_input="b" src_node_id="806" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="820" dst_node_input="b" src_node_id="806" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="826" dst_node_input="b" src_node_id="806" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="832" dst_node_input="b" src_node_id="806" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="838" dst_node_input="b" src_node_id="806" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="844" dst_node_input="b" src_node_id="806" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="850" dst_node_input="b" src_node_id="806" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="856" dst_node_input="b" src_node_id="806" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="862" dst_node_input="b" src_node_id="806" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="868" dst_node_input="b" src_node_id="806" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="874" dst_node_input="b" src_node_id="806" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="880" dst_node_input="b" src_node_id="806" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="886" dst_node_input="b" src_node_id="806" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="892" dst_node_input="b" src_node_id="806" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="898" dst_node_input="b" src_node_id="806" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="904" dst_node_input="b" src_node_id="806" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="910" dst_node_input="b" src_node_id="806" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="916" dst_node_input="b" src_node_id="806" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="922" dst_node_input="b" src_node_id="806" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="928" dst_node_input="b" src_node_id="806" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="934" dst_node_input="b" src_node_id="806" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="940" dst_node_input="b" src_node_id="806" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="940" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="943" dst_node_input="sel" src_node_id="940" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="942" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="943" dst_node_input="option0" src_node_id="942" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="787" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x1; 1.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:90)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:35)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>1</Value>
		<HexValue>0x1</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="789" dst_node_input="in0" src_node_id="787" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="788" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeBits(23)" />
		<Text>[22:0]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getMantissaBits(FloatingPoint.java:233)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:35)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>0</Base>
		<Width>23</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="789" dst_node_input="in1" src_node_id="788" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="789" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="in1" type="dfeBits(23)" />
		<Output latency="0" name="result" type="dfeBits(24)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:35)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="803" dst_node_input="datain" src_node_id="789" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="809" dst_node_input="a" src_node_id="789" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="815" dst_node_input="a" src_node_id="789" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="821" dst_node_input="a" src_node_id="789" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="827" dst_node_input="a" src_node_id="789" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="833" dst_node_input="a" src_node_id="789" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="839" dst_node_input="a" src_node_id="789" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="845" dst_node_input="a" src_node_id="789" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="851" dst_node_input="a" src_node_id="789" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="857" dst_node_input="a" src_node_id="789" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="863" dst_node_input="a" src_node_id="789" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="869" dst_node_input="a" src_node_id="789" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="875" dst_node_input="a" src_node_id="789" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="881" dst_node_input="a" src_node_id="789" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="887" dst_node_input="a" src_node_id="789" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="893" dst_node_input="a" src_node_id="789" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="899" dst_node_input="a" src_node_id="789" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="905" dst_node_input="a" src_node_id="789" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="911" dst_node_input="a" src_node_id="789" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="917" dst_node_input="a" src_node_id="789" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="923" dst_node_input="a" src_node_id="789" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="929" dst_node_input="a" src_node_id="789" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="935" dst_node_input="a" src_node_id="789" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="941" dst_node_input="a" src_node_id="789" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="941" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[22:22]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>22</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="943" dst_node_input="option1" src_node_id="941" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="943" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="944" dst_node_input="in0" src_node_id="943" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="933" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>21.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>21.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="934" dst_node_input="a" src_node_id="933" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="934" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="937" dst_node_input="sel" src_node_id="934" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="936" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="937" dst_node_input="option0" src_node_id="936" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="935" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[21:21]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>21</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="937" dst_node_input="option1" src_node_id="935" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="937" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="938" dst_node_input="in0" src_node_id="937" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="927" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>20.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>20.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="928" dst_node_input="a" src_node_id="927" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="928" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="931" dst_node_input="sel" src_node_id="928" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="930" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="931" dst_node_input="option0" src_node_id="930" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="929" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[20:20]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>20</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="931" dst_node_input="option1" src_node_id="929" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="931" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="932" dst_node_input="in0" src_node_id="931" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="921" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>19.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>19.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="922" dst_node_input="a" src_node_id="921" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="922" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="925" dst_node_input="sel" src_node_id="922" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="924" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="925" dst_node_input="option0" src_node_id="924" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="923" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[19:19]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>19</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="925" dst_node_input="option1" src_node_id="923" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="925" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="926" dst_node_input="in0" src_node_id="925" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="915" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>18.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>18.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="916" dst_node_input="a" src_node_id="915" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="916" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="919" dst_node_input="sel" src_node_id="916" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="918" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="919" dst_node_input="option0" src_node_id="918" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="917" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[18:18]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>18</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="919" dst_node_input="option1" src_node_id="917" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="919" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="920" dst_node_input="in0" src_node_id="919" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="909" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>17.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>17.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="910" dst_node_input="a" src_node_id="909" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="910" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="913" dst_node_input="sel" src_node_id="910" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="912" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="913" dst_node_input="option0" src_node_id="912" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="911" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[17:17]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>17</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="913" dst_node_input="option1" src_node_id="911" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="913" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="914" dst_node_input="in0" src_node_id="913" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="903" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>16.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>16.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="904" dst_node_input="a" src_node_id="903" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="904" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="907" dst_node_input="sel" src_node_id="904" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="906" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="907" dst_node_input="option0" src_node_id="906" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="905" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[16:16]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>16</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="907" dst_node_input="option1" src_node_id="905" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="907" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="908" dst_node_input="in0" src_node_id="907" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="897" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>15.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>15.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="898" dst_node_input="a" src_node_id="897" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="898" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="901" dst_node_input="sel" src_node_id="898" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="900" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="901" dst_node_input="option0" src_node_id="900" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="899" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[15:15]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>15</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="901" dst_node_input="option1" src_node_id="899" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="901" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="902" dst_node_input="in0" src_node_id="901" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="891" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>14.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>14.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="892" dst_node_input="a" src_node_id="891" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="892" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="895" dst_node_input="sel" src_node_id="892" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="894" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="895" dst_node_input="option0" src_node_id="894" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="893" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[14:14]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>14</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="895" dst_node_input="option1" src_node_id="893" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="895" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="896" dst_node_input="in0" src_node_id="895" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="885" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>13.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>13.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="886" dst_node_input="a" src_node_id="885" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="886" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="889" dst_node_input="sel" src_node_id="886" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="888" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="889" dst_node_input="option0" src_node_id="888" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="887" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[13:13]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>13</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="889" dst_node_input="option1" src_node_id="887" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="889" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="890" dst_node_input="in0" src_node_id="889" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="879" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>12.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>12.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="880" dst_node_input="a" src_node_id="879" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="880" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="883" dst_node_input="sel" src_node_id="880" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="882" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="883" dst_node_input="option0" src_node_id="882" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="881" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[12:12]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>12</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="883" dst_node_input="option1" src_node_id="881" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="883" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="884" dst_node_input="in0" src_node_id="883" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="873" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>11.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>11.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="874" dst_node_input="a" src_node_id="873" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="874" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="877" dst_node_input="sel" src_node_id="874" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="876" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="877" dst_node_input="option0" src_node_id="876" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="875" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[11:11]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>11</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="877" dst_node_input="option1" src_node_id="875" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="877" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="878" dst_node_input="in0" src_node_id="877" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="867" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>10.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>10.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="868" dst_node_input="a" src_node_id="867" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="868" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="871" dst_node_input="sel" src_node_id="868" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="870" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="871" dst_node_input="option0" src_node_id="870" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="869" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[10:10]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>10</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="871" dst_node_input="option1" src_node_id="869" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="871" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="872" dst_node_input="in0" src_node_id="871" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="861" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>9.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>9.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="862" dst_node_input="a" src_node_id="861" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="862" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="865" dst_node_input="sel" src_node_id="862" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="864" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="865" dst_node_input="option0" src_node_id="864" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="863" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[9:9]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>9</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="865" dst_node_input="option1" src_node_id="863" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="865" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="866" dst_node_input="in0" src_node_id="865" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="855" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>8.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>8.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="856" dst_node_input="a" src_node_id="855" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="856" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="859" dst_node_input="sel" src_node_id="856" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="858" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="859" dst_node_input="option0" src_node_id="858" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="857" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[8:8]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>8</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="859" dst_node_input="option1" src_node_id="857" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="859" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="860" dst_node_input="in0" src_node_id="859" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="849" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>7.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>7.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="850" dst_node_input="a" src_node_id="849" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="850" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="853" dst_node_input="sel" src_node_id="850" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="852" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="853" dst_node_input="option0" src_node_id="852" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="851" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[7:7]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>7</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="853" dst_node_input="option1" src_node_id="851" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="853" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="854" dst_node_input="in0" src_node_id="853" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="843" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>6.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>6.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="844" dst_node_input="a" src_node_id="843" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="844" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="847" dst_node_input="sel" src_node_id="844" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="846" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="847" dst_node_input="option0" src_node_id="846" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="845" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[6:6]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>6</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="847" dst_node_input="option1" src_node_id="845" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="847" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="848" dst_node_input="in0" src_node_id="847" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="837" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>5.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>5.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="838" dst_node_input="a" src_node_id="837" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="838" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="841" dst_node_input="sel" src_node_id="838" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="840" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="841" dst_node_input="option0" src_node_id="840" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="839" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[5:5]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>5</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="841" dst_node_input="option1" src_node_id="839" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="841" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="842" dst_node_input="in0" src_node_id="841" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="831" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>4.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>4.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="832" dst_node_input="a" src_node_id="831" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="832" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="835" dst_node_input="sel" src_node_id="832" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="834" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="835" dst_node_input="option0" src_node_id="834" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="833" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[4:4]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>4</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="835" dst_node_input="option1" src_node_id="833" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="835" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="836" dst_node_input="in0" src_node_id="835" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="825" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>3.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>3.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="826" dst_node_input="a" src_node_id="825" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="826" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="829" dst_node_input="sel" src_node_id="826" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="828" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="829" dst_node_input="option0" src_node_id="828" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="827" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[3:3]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>3</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="829" dst_node_input="option1" src_node_id="827" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="829" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="830" dst_node_input="in0" src_node_id="829" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="819" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>2.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>2.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="820" dst_node_input="a" src_node_id="819" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="820" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="823" dst_node_input="sel" src_node_id="820" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="822" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="823" dst_node_input="option0" src_node_id="822" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="821" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[2:2]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>2</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="823" dst_node_input="option1" src_node_id="821" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="823" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="824" dst_node_input="in0" src_node_id="823" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="813" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>1.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>1.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="814" dst_node_input="a" src_node_id="813" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="814" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="817" dst_node_input="sel" src_node_id="814" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="816" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="817" dst_node_input="option0" src_node_id="816" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="815" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[1:1]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>1</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="817" dst_node_input="option1" src_node_id="815" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="817" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="818" dst_node_input="in0" src_node_id="817" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="807" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>0.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="808" dst_node_input="a" src_node_id="807" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="808" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="811" dst_node_input="sel" src_node_id="808" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="810" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="811" dst_node_input="option0" src_node_id="810" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="809" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[0:0]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>0</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="811" dst_node_input="option1" src_node_id="809" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="811" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="812" dst_node_input="in0" src_node_id="811" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="804" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x0; 0.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:90)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:54)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="812" dst_node_input="in1" src_node_id="804" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="812" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(2)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="818" dst_node_input="in1" src_node_id="812" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="818" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(2)" />
		<Output latency="0" name="result" type="dfeBits(3)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="824" dst_node_input="in1" src_node_id="818" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="824" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(3)" />
		<Output latency="0" name="result" type="dfeBits(4)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="830" dst_node_input="in1" src_node_id="824" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="830" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(4)" />
		<Output latency="0" name="result" type="dfeBits(5)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="836" dst_node_input="in1" src_node_id="830" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="836" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(5)" />
		<Output latency="0" name="result" type="dfeBits(6)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="842" dst_node_input="in1" src_node_id="836" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="842" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(6)" />
		<Output latency="0" name="result" type="dfeBits(7)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="848" dst_node_input="in1" src_node_id="842" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="848" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(7)" />
		<Output latency="0" name="result" type="dfeBits(8)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="854" dst_node_input="in1" src_node_id="848" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="854" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(8)" />
		<Output latency="0" name="result" type="dfeBits(9)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="860" dst_node_input="in1" src_node_id="854" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="860" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(9)" />
		<Output latency="0" name="result" type="dfeBits(10)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="866" dst_node_input="in1" src_node_id="860" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="866" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(10)" />
		<Output latency="0" name="result" type="dfeBits(11)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="872" dst_node_input="in1" src_node_id="866" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="872" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(11)" />
		<Output latency="0" name="result" type="dfeBits(12)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="878" dst_node_input="in1" src_node_id="872" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="878" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(12)" />
		<Output latency="0" name="result" type="dfeBits(13)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="884" dst_node_input="in1" src_node_id="878" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="884" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(13)" />
		<Output latency="0" name="result" type="dfeBits(14)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="890" dst_node_input="in1" src_node_id="884" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="890" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(14)" />
		<Output latency="0" name="result" type="dfeBits(15)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="896" dst_node_input="in1" src_node_id="890" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="896" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(15)" />
		<Output latency="0" name="result" type="dfeBits(16)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="902" dst_node_input="in1" src_node_id="896" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="902" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(16)" />
		<Output latency="0" name="result" type="dfeBits(17)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="908" dst_node_input="in1" src_node_id="902" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="908" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(17)" />
		<Output latency="0" name="result" type="dfeBits(18)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="914" dst_node_input="in1" src_node_id="908" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="914" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(18)" />
		<Output latency="0" name="result" type="dfeBits(19)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="920" dst_node_input="in1" src_node_id="914" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="920" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(19)" />
		<Output latency="0" name="result" type="dfeBits(20)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="926" dst_node_input="in1" src_node_id="920" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="926" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(20)" />
		<Output latency="0" name="result" type="dfeBits(21)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="932" dst_node_input="in1" src_node_id="926" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="932" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(21)" />
		<Output latency="0" name="result" type="dfeBits(22)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="938" dst_node_input="in1" src_node_id="932" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="938" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(22)" />
		<Output latency="0" name="result" type="dfeBits(23)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="944" dst_node_input="in1" src_node_id="938" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="944" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(23)" />
		<Output latency="0" name="result" type="dfeBits(24)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="946" dst_node_input="datain" src_node_id="944" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="945" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(5, 0, UNSIGNED)" />
		<Text>NodeCast
{HWOffsetFix:9, 0, TWOSCOMPLEMENT} 
-&gt;
 {HWOffsetFix:5, 0, UNSIGNED}</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:181)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:59)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="946" dst_node_input="shift" src_node_id="945" src_node_output="o" />
	<Node criticalPaths="[]" group="[]" id="946" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeShift">
		<Input name="datain" type="dfeBits(24)" />
		<Input name="shift" type="dfeOffsetFix(5, 0, UNSIGNED)" />
		<Output latency="4" name="dataout" type="dfeBits(24)" />
		<Text>&lt;&lt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.shiftLeft(DFEVar.java:219)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:59)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Direction>Left</Direction>
		<Circular>false</Circular>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="949" dst_node_input="option0" src_node_id="946" src_node_output="dataout" />
	<Node criticalPaths="[]" group="[]" id="799" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeNeg">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>(-)</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.neg(DFEVar.java:1119)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:50)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="801" dst_node_input="a" src_node_id="799" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="800" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>1.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:990)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:50)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>1.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="801" dst_node_input="b" src_node_id="800" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="801" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSub">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>-</Text>
		<ResourceUsage DSPs="0" FFs="9" FMems="0" LUTs="18" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:990)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:50)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="802" dst_node_input="i" src_node_id="801" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="802" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(5, 0, UNSIGNED)" />
		<Text>NodeCast
{HWOffsetFix:9, 0, TWOSCOMPLEMENT} 
-&gt;
 {HWOffsetFix:5, 0, UNSIGNED}</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:181)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:50)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="803" dst_node_input="shift" src_node_id="802" src_node_output="o" />
	<Node criticalPaths="[]" group="[]" id="803" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeShift">
		<Input name="datain" type="dfeBits(24)" />
		<Input name="shift" type="dfeOffsetFix(5, 0, UNSIGNED)" />
		<Output latency="4" name="dataout" type="dfeBits(24)" />
		<Text>&gt;&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.shiftRight(DFEVar.java:243)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:50)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Direction>Right</Direction>
		<Circular>false</Circular>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="949" dst_node_input="option1" src_node_id="803" src_node_output="dataout" />
	<Node criticalPaths="[]" group="[]" id="796" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>0.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:80)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:45)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="949" dst_node_input="option2" src_node_id="796" src_node_output="value" />
	<Edge criticalPaths="[]" dst_node_id="949" dst_node_input="option3" src_node_id="796" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="949" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(2, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(24)" />
		<Input name="option1" type="dfeBits(24)" />
		<Input name="option2" type="dfeBits(24)" />
		<Input name="option3" type="dfeBits(24)" />
		<Output latency="1" name="result" type="dfeBits(24)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="24" FMems="0" LUTs="24" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Control.mux(Control.java:112)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:62)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="950" dst_node_input="a" src_node_id="949" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="951" dst_node_input="option0" src_node_id="949" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="950" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeNot">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(24)" />
		<Text>~</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.complement(DFEVar.java:1110)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:63)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="951" dst_node_input="option1" src_node_id="950" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="951" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeBits(1)" />
		<Input name="option0" type="dfeBits(24)" />
		<Input name="option1" type="dfeBits(24)" />
		<Output latency="1" name="result" type="dfeBits(24)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="24" FMems="0" LUTs="24" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1187)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:63)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="952" dst_node_input="input" src_node_id="951" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="952" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(24)" />
		<Output latency="0" name="output" type="dfeOffsetFix(24, -24, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:24, -24, UNSIGNED}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:172)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:63)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="953" dst_node_input="i" src_node_id="952" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="953" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(24, -24, UNSIGNED)" />
		<Output latency="7" name="o" type="dfeFloat(8, 24)" />
		<Text>NodeCast
{HWOffsetFix:24, -24, UNSIGNED} 
-&gt;
 {HWFloat:8, 24}</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:181)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1155" dst_node_input="option0" src_node_id="953" src_node_output="o" />
	<Node criticalPaths="[]" group="[]" id="982" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>128.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:1035)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>128.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="983" dst_node_input="b" src_node_id="982" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="983" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<ResourceUsage DSPs="0" FFs="256" FMems="0" LUTs="288" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:1035)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="984" dst_node_input="a" src_node_id="983" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="989" dst_node_input="a" src_node_id="983" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="991" dst_node_input="a" src_node_id="983" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="991" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[31:31]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getSignBit(FloatingPoint.java:264)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:36)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>31</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1152" dst_node_input="sel" src_node_id="991" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="984" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeBits(8)" />
		<Text>[30:23]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getExponent(FloatingPoint.java:37)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:34)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>23</Base>
		<Width>8</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="985" dst_node_input="input" src_node_id="984" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="985" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(8)" />
		<Output latency="0" name="output" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:8, 0, UNSIGNED}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getExponent(FloatingPoint.java:38)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:34)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="987" dst_node_input="a" src_node_id="985" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="986" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>127.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getExponent(FloatingPoint.java:41)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:34)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>127.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="987" dst_node_input="b" src_node_id="986" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="987" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSub">
		<Input name="a" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>-</Text>
		<ResourceUsage DSPs="0" FFs="9" FMems="0" LUTs="18" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getExponent(FloatingPoint.java:41)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:34)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="993" dst_node_input="a" src_node_id="987" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="995" dst_node_input="a" src_node_id="987" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="999" dst_node_input="a" src_node_id="987" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1000" dst_node_input="a" src_node_id="987" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1007" dst_node_input="b" src_node_id="987" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1146" dst_node_input="i" src_node_id="987" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="992" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>23.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:80)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:42)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>23.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="993" dst_node_input="b" src_node_id="992" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="993" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeGte">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;=</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.gte(DFEVar.java:795)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:42)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="996" dst_node_input="a" src_node_id="993" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="994" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>-24.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:80)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:43)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>-24.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="995" dst_node_input="b" src_node_id="994" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="995" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLte">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;=</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.lte(DFEVar.java:750)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:43)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="996" dst_node_input="b" src_node_id="995" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="996" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeOr">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>|</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.or(DFEVar.java:469)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:44)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1148" dst_node_input="in0" src_node_id="996" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="998" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>-1.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.lte(DFEVar.java:765)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:49)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>-1.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="999" dst_node_input="b" src_node_id="998" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="999" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLte">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;=</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.lte(DFEVar.java:765)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:49)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1148" dst_node_input="in1" src_node_id="999" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1148" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="in1" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(2)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:61)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1149" dst_node_input="input" src_node_id="1148" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1149" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(2)" />
		<Output latency="0" name="output" type="dfeOffsetFix(2, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:2, 0, UNSIGNED}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:172)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:61)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1150" dst_node_input="sel" src_node_id="1149" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="1140" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>22.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>22.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1141" dst_node_input="a" src_node_id="1140" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="1006" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>23.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.subAsRHS(DFEVar.java:1010)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:55)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>23.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1007" dst_node_input="a" src_node_id="1006" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="1007" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSub">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>-</Text>
		<ResourceUsage DSPs="0" FFs="9" FMems="0" LUTs="18" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.subAsRHS(DFEVar.java:1010)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:55)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1009" dst_node_input="b" src_node_id="1007" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1015" dst_node_input="b" src_node_id="1007" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1021" dst_node_input="b" src_node_id="1007" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1027" dst_node_input="b" src_node_id="1007" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1033" dst_node_input="b" src_node_id="1007" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1039" dst_node_input="b" src_node_id="1007" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1045" dst_node_input="b" src_node_id="1007" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1051" dst_node_input="b" src_node_id="1007" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1057" dst_node_input="b" src_node_id="1007" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1063" dst_node_input="b" src_node_id="1007" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1069" dst_node_input="b" src_node_id="1007" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1075" dst_node_input="b" src_node_id="1007" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1081" dst_node_input="b" src_node_id="1007" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1087" dst_node_input="b" src_node_id="1007" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1093" dst_node_input="b" src_node_id="1007" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1099" dst_node_input="b" src_node_id="1007" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1105" dst_node_input="b" src_node_id="1007" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1111" dst_node_input="b" src_node_id="1007" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1117" dst_node_input="b" src_node_id="1007" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1123" dst_node_input="b" src_node_id="1007" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1129" dst_node_input="b" src_node_id="1007" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1135" dst_node_input="b" src_node_id="1007" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1141" dst_node_input="b" src_node_id="1007" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1141" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1144" dst_node_input="sel" src_node_id="1141" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1143" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1144" dst_node_input="option0" src_node_id="1143" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="988" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x1; 1.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:90)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:35)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>1</Value>
		<HexValue>0x1</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="990" dst_node_input="in0" src_node_id="988" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="989" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeBits(23)" />
		<Text>[22:0]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getMantissaBits(FloatingPoint.java:233)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:35)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>0</Base>
		<Width>23</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="990" dst_node_input="in1" src_node_id="989" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="990" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="in1" type="dfeBits(23)" />
		<Output latency="0" name="result" type="dfeBits(24)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:35)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1004" dst_node_input="datain" src_node_id="990" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1010" dst_node_input="a" src_node_id="990" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1016" dst_node_input="a" src_node_id="990" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1022" dst_node_input="a" src_node_id="990" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1028" dst_node_input="a" src_node_id="990" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1034" dst_node_input="a" src_node_id="990" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1040" dst_node_input="a" src_node_id="990" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1046" dst_node_input="a" src_node_id="990" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1052" dst_node_input="a" src_node_id="990" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1058" dst_node_input="a" src_node_id="990" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1064" dst_node_input="a" src_node_id="990" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1070" dst_node_input="a" src_node_id="990" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1076" dst_node_input="a" src_node_id="990" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1082" dst_node_input="a" src_node_id="990" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1088" dst_node_input="a" src_node_id="990" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1094" dst_node_input="a" src_node_id="990" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1100" dst_node_input="a" src_node_id="990" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1106" dst_node_input="a" src_node_id="990" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1112" dst_node_input="a" src_node_id="990" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1118" dst_node_input="a" src_node_id="990" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1124" dst_node_input="a" src_node_id="990" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1130" dst_node_input="a" src_node_id="990" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1136" dst_node_input="a" src_node_id="990" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1142" dst_node_input="a" src_node_id="990" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1142" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[22:22]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>22</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1144" dst_node_input="option1" src_node_id="1142" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1144" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1145" dst_node_input="in0" src_node_id="1144" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1134" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>21.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>21.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1135" dst_node_input="a" src_node_id="1134" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="1135" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1138" dst_node_input="sel" src_node_id="1135" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1137" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1138" dst_node_input="option0" src_node_id="1137" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="1136" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[21:21]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>21</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1138" dst_node_input="option1" src_node_id="1136" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1138" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1139" dst_node_input="in0" src_node_id="1138" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1128" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>20.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>20.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1129" dst_node_input="a" src_node_id="1128" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="1129" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1132" dst_node_input="sel" src_node_id="1129" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1131" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1132" dst_node_input="option0" src_node_id="1131" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="1130" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[20:20]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>20</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1132" dst_node_input="option1" src_node_id="1130" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1132" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1133" dst_node_input="in0" src_node_id="1132" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1122" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>19.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>19.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1123" dst_node_input="a" src_node_id="1122" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="1123" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1126" dst_node_input="sel" src_node_id="1123" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1125" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1126" dst_node_input="option0" src_node_id="1125" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="1124" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[19:19]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>19</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1126" dst_node_input="option1" src_node_id="1124" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1126" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1127" dst_node_input="in0" src_node_id="1126" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1116" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>18.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>18.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1117" dst_node_input="a" src_node_id="1116" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="1117" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1120" dst_node_input="sel" src_node_id="1117" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1119" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1120" dst_node_input="option0" src_node_id="1119" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="1118" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[18:18]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>18</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1120" dst_node_input="option1" src_node_id="1118" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1120" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1121" dst_node_input="in0" src_node_id="1120" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1110" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>17.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>17.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1111" dst_node_input="a" src_node_id="1110" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="1111" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1114" dst_node_input="sel" src_node_id="1111" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1113" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1114" dst_node_input="option0" src_node_id="1113" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="1112" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[17:17]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>17</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1114" dst_node_input="option1" src_node_id="1112" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1114" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1115" dst_node_input="in0" src_node_id="1114" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1104" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>16.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>16.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1105" dst_node_input="a" src_node_id="1104" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="1105" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1108" dst_node_input="sel" src_node_id="1105" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1107" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1108" dst_node_input="option0" src_node_id="1107" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="1106" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[16:16]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>16</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1108" dst_node_input="option1" src_node_id="1106" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1108" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1109" dst_node_input="in0" src_node_id="1108" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1098" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>15.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>15.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1099" dst_node_input="a" src_node_id="1098" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="1099" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1102" dst_node_input="sel" src_node_id="1099" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1101" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1102" dst_node_input="option0" src_node_id="1101" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="1100" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[15:15]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>15</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1102" dst_node_input="option1" src_node_id="1100" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1102" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1103" dst_node_input="in0" src_node_id="1102" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1092" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>14.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>14.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1093" dst_node_input="a" src_node_id="1092" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="1093" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1096" dst_node_input="sel" src_node_id="1093" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1095" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1096" dst_node_input="option0" src_node_id="1095" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="1094" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[14:14]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>14</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1096" dst_node_input="option1" src_node_id="1094" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1096" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1097" dst_node_input="in0" src_node_id="1096" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1086" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>13.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>13.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1087" dst_node_input="a" src_node_id="1086" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="1087" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1090" dst_node_input="sel" src_node_id="1087" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1089" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1090" dst_node_input="option0" src_node_id="1089" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="1088" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[13:13]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>13</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1090" dst_node_input="option1" src_node_id="1088" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1090" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1091" dst_node_input="in0" src_node_id="1090" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1080" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>12.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>12.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1081" dst_node_input="a" src_node_id="1080" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="1081" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1084" dst_node_input="sel" src_node_id="1081" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1083" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1084" dst_node_input="option0" src_node_id="1083" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="1082" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[12:12]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>12</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1084" dst_node_input="option1" src_node_id="1082" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1084" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1085" dst_node_input="in0" src_node_id="1084" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1074" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>11.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>11.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1075" dst_node_input="a" src_node_id="1074" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="1075" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1078" dst_node_input="sel" src_node_id="1075" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1077" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1078" dst_node_input="option0" src_node_id="1077" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="1076" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[11:11]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>11</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1078" dst_node_input="option1" src_node_id="1076" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1078" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1079" dst_node_input="in0" src_node_id="1078" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1068" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>10.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>10.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1069" dst_node_input="a" src_node_id="1068" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="1069" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1072" dst_node_input="sel" src_node_id="1069" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1071" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1072" dst_node_input="option0" src_node_id="1071" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="1070" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[10:10]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>10</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1072" dst_node_input="option1" src_node_id="1070" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1072" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1073" dst_node_input="in0" src_node_id="1072" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1062" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>9.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>9.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1063" dst_node_input="a" src_node_id="1062" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="1063" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1066" dst_node_input="sel" src_node_id="1063" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1065" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1066" dst_node_input="option0" src_node_id="1065" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="1064" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[9:9]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>9</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1066" dst_node_input="option1" src_node_id="1064" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1066" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1067" dst_node_input="in0" src_node_id="1066" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1056" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>8.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>8.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1057" dst_node_input="a" src_node_id="1056" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="1057" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1060" dst_node_input="sel" src_node_id="1057" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1059" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1060" dst_node_input="option0" src_node_id="1059" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="1058" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[8:8]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>8</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1060" dst_node_input="option1" src_node_id="1058" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1060" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1061" dst_node_input="in0" src_node_id="1060" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1050" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>7.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>7.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1051" dst_node_input="a" src_node_id="1050" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="1051" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1054" dst_node_input="sel" src_node_id="1051" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1053" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1054" dst_node_input="option0" src_node_id="1053" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="1052" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[7:7]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>7</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1054" dst_node_input="option1" src_node_id="1052" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1054" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1055" dst_node_input="in0" src_node_id="1054" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1044" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>6.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>6.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1045" dst_node_input="a" src_node_id="1044" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="1045" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1048" dst_node_input="sel" src_node_id="1045" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1047" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1048" dst_node_input="option0" src_node_id="1047" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="1046" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[6:6]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>6</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1048" dst_node_input="option1" src_node_id="1046" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1048" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1049" dst_node_input="in0" src_node_id="1048" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1038" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>5.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>5.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1039" dst_node_input="a" src_node_id="1038" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="1039" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1042" dst_node_input="sel" src_node_id="1039" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1041" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1042" dst_node_input="option0" src_node_id="1041" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="1040" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[5:5]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>5</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1042" dst_node_input="option1" src_node_id="1040" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1042" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1043" dst_node_input="in0" src_node_id="1042" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1032" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>4.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>4.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1033" dst_node_input="a" src_node_id="1032" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="1033" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1036" dst_node_input="sel" src_node_id="1033" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1035" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1036" dst_node_input="option0" src_node_id="1035" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="1034" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[4:4]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>4</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1036" dst_node_input="option1" src_node_id="1034" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1036" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1037" dst_node_input="in0" src_node_id="1036" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1026" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>3.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>3.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1027" dst_node_input="a" src_node_id="1026" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="1027" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1030" dst_node_input="sel" src_node_id="1027" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1029" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1030" dst_node_input="option0" src_node_id="1029" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="1028" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[3:3]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>3</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1030" dst_node_input="option1" src_node_id="1028" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1030" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1031" dst_node_input="in0" src_node_id="1030" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1020" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>2.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>2.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1021" dst_node_input="a" src_node_id="1020" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="1021" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1024" dst_node_input="sel" src_node_id="1021" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1023" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1024" dst_node_input="option0" src_node_id="1023" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="1022" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[2:2]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>2</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1024" dst_node_input="option1" src_node_id="1022" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1024" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1025" dst_node_input="in0" src_node_id="1024" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1014" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>1.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>1.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1015" dst_node_input="a" src_node_id="1014" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="1015" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1018" dst_node_input="sel" src_node_id="1015" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1017" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1018" dst_node_input="option0" src_node_id="1017" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="1016" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[1:1]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>1</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1018" dst_node_input="option1" src_node_id="1016" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1018" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1019" dst_node_input="in0" src_node_id="1018" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1008" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>0.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1009" dst_node_input="a" src_node_id="1008" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="1009" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1012" dst_node_input="sel" src_node_id="1009" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1011" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1012" dst_node_input="option0" src_node_id="1011" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="1010" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[0:0]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>0</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1012" dst_node_input="option1" src_node_id="1010" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1012" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1013" dst_node_input="in0" src_node_id="1012" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1005" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x0; 0.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:90)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:54)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1013" dst_node_input="in1" src_node_id="1005" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="1013" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(2)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1019" dst_node_input="in1" src_node_id="1013" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1019" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(2)" />
		<Output latency="0" name="result" type="dfeBits(3)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1025" dst_node_input="in1" src_node_id="1019" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1025" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(3)" />
		<Output latency="0" name="result" type="dfeBits(4)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1031" dst_node_input="in1" src_node_id="1025" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1031" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(4)" />
		<Output latency="0" name="result" type="dfeBits(5)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1037" dst_node_input="in1" src_node_id="1031" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1037" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(5)" />
		<Output latency="0" name="result" type="dfeBits(6)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1043" dst_node_input="in1" src_node_id="1037" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1043" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(6)" />
		<Output latency="0" name="result" type="dfeBits(7)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1049" dst_node_input="in1" src_node_id="1043" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1049" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(7)" />
		<Output latency="0" name="result" type="dfeBits(8)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1055" dst_node_input="in1" src_node_id="1049" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1055" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(8)" />
		<Output latency="0" name="result" type="dfeBits(9)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1061" dst_node_input="in1" src_node_id="1055" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1061" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(9)" />
		<Output latency="0" name="result" type="dfeBits(10)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1067" dst_node_input="in1" src_node_id="1061" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1067" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(10)" />
		<Output latency="0" name="result" type="dfeBits(11)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1073" dst_node_input="in1" src_node_id="1067" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1073" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(11)" />
		<Output latency="0" name="result" type="dfeBits(12)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1079" dst_node_input="in1" src_node_id="1073" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1079" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(12)" />
		<Output latency="0" name="result" type="dfeBits(13)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1085" dst_node_input="in1" src_node_id="1079" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1085" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(13)" />
		<Output latency="0" name="result" type="dfeBits(14)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1091" dst_node_input="in1" src_node_id="1085" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1091" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(14)" />
		<Output latency="0" name="result" type="dfeBits(15)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1097" dst_node_input="in1" src_node_id="1091" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1097" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(15)" />
		<Output latency="0" name="result" type="dfeBits(16)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1103" dst_node_input="in1" src_node_id="1097" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1103" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(16)" />
		<Output latency="0" name="result" type="dfeBits(17)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1109" dst_node_input="in1" src_node_id="1103" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1109" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(17)" />
		<Output latency="0" name="result" type="dfeBits(18)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1115" dst_node_input="in1" src_node_id="1109" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1115" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(18)" />
		<Output latency="0" name="result" type="dfeBits(19)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1121" dst_node_input="in1" src_node_id="1115" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1121" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(19)" />
		<Output latency="0" name="result" type="dfeBits(20)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1127" dst_node_input="in1" src_node_id="1121" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1127" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(20)" />
		<Output latency="0" name="result" type="dfeBits(21)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1133" dst_node_input="in1" src_node_id="1127" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1133" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(21)" />
		<Output latency="0" name="result" type="dfeBits(22)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1139" dst_node_input="in1" src_node_id="1133" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1139" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(22)" />
		<Output latency="0" name="result" type="dfeBits(23)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1145" dst_node_input="in1" src_node_id="1139" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1145" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(23)" />
		<Output latency="0" name="result" type="dfeBits(24)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1147" dst_node_input="datain" src_node_id="1145" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1146" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(5, 0, UNSIGNED)" />
		<Text>NodeCast
{HWOffsetFix:9, 0, TWOSCOMPLEMENT} 
-&gt;
 {HWOffsetFix:5, 0, UNSIGNED}</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:181)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:59)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1147" dst_node_input="shift" src_node_id="1146" src_node_output="o" />
	<Node criticalPaths="[]" group="[]" id="1147" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeShift">
		<Input name="datain" type="dfeBits(24)" />
		<Input name="shift" type="dfeOffsetFix(5, 0, UNSIGNED)" />
		<Output latency="4" name="dataout" type="dfeBits(24)" />
		<Text>&lt;&lt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.shiftLeft(DFEVar.java:219)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:59)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Direction>Left</Direction>
		<Circular>false</Circular>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1150" dst_node_input="option0" src_node_id="1147" src_node_output="dataout" />
	<Node criticalPaths="[]" group="[]" id="1000" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeNeg">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>(-)</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.neg(DFEVar.java:1119)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:50)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1002" dst_node_input="a" src_node_id="1000" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1001" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>1.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:990)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:50)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>1.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1002" dst_node_input="b" src_node_id="1001" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="1002" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSub">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>-</Text>
		<ResourceUsage DSPs="0" FFs="9" FMems="0" LUTs="18" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:990)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:50)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1003" dst_node_input="i" src_node_id="1002" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1003" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(5, 0, UNSIGNED)" />
		<Text>NodeCast
{HWOffsetFix:9, 0, TWOSCOMPLEMENT} 
-&gt;
 {HWOffsetFix:5, 0, UNSIGNED}</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:181)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:50)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1004" dst_node_input="shift" src_node_id="1003" src_node_output="o" />
	<Node criticalPaths="[]" group="[]" id="1004" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeShift">
		<Input name="datain" type="dfeBits(24)" />
		<Input name="shift" type="dfeOffsetFix(5, 0, UNSIGNED)" />
		<Output latency="4" name="dataout" type="dfeBits(24)" />
		<Text>&gt;&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.shiftRight(DFEVar.java:243)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:50)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Direction>Right</Direction>
		<Circular>false</Circular>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1150" dst_node_input="option1" src_node_id="1004" src_node_output="dataout" />
	<Node criticalPaths="[]" group="[]" id="997" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>0.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:80)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:45)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1150" dst_node_input="option2" src_node_id="997" src_node_output="value" />
	<Edge criticalPaths="[]" dst_node_id="1150" dst_node_input="option3" src_node_id="997" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="1150" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(2, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(24)" />
		<Input name="option1" type="dfeBits(24)" />
		<Input name="option2" type="dfeBits(24)" />
		<Input name="option3" type="dfeBits(24)" />
		<Output latency="1" name="result" type="dfeBits(24)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="24" FMems="0" LUTs="24" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Control.mux(Control.java:112)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:62)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1151" dst_node_input="a" src_node_id="1150" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1152" dst_node_input="option0" src_node_id="1150" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1151" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeNot">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(24)" />
		<Text>~</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.complement(DFEVar.java:1110)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:63)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1152" dst_node_input="option1" src_node_id="1151" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1152" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeBits(1)" />
		<Input name="option0" type="dfeBits(24)" />
		<Input name="option1" type="dfeBits(24)" />
		<Output latency="1" name="result" type="dfeBits(24)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="24" FMems="0" LUTs="24" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1187)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:63)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1153" dst_node_input="input" src_node_id="1152" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1153" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(24)" />
		<Output latency="0" name="output" type="dfeOffsetFix(24, -24, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:24, -24, UNSIGNED}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:172)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:63)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1154" dst_node_input="i" src_node_id="1153" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="1154" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(24, -24, UNSIGNED)" />
		<Output latency="7" name="o" type="dfeFloat(8, 24)" />
		<Text>NodeCast
{HWOffsetFix:24, -24, UNSIGNED} 
-&gt;
 {HWFloat:8, 24}</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:181)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1155" dst_node_input="option1" src_node_id="1154" src_node_output="o" />
	<Node criticalPaths="[]" group="[]" id="1155" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeBits(1)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="32" FMems="0" LUTs="32" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Control.mux(Control.java:124)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:133)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1160" dst_node_input="a" src_node_id="1155" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1160" dst_node_input="b" src_node_id="1155" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1161" dst_node_input="b" src_node_id="1155" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1165" dst_node_input="b" src_node_id="1155" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1161" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<ResourceUsage DSPs="0" FFs="256" FMems="0" LUTs="288" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:1020)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:147)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1162" dst_node_input="a" src_node_id="1161" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1160" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<ResourceUsage DSPs="0" FFs="256" FMems="0" LUTs="288" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:1020)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:142)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1162" dst_node_input="b" src_node_id="1160" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1163" dst_node_input="b" src_node_id="1160" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1162" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<ResourceUsage DSPs="0" FFs="256" FMems="0" LUTs="288" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:1020)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:147)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1164" dst_node_input="a" src_node_id="1162" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1318" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(128)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>[95:64]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Mem.alloc(Mem.java:63)
maxpower.math.interpolation.CubicSplineBuilder.buildCoefficientRom(CubicSplineBuilder.java:293)
maxpower.math.interpolation.CubicSplineBuilder.access$1(CubicSplineBuilder.java:264)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:90)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:87)
maxpower.math.interpolation.CubicSplineBuilder.build(CubicSplineBuilder.java:239)
maxpower.math.interpolation.InterpolatorBuilder.build(InterpolatorBuilder.java:126)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:35)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>64</Base>
		<Width>32</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1319" dst_node_input="input" src_node_id="1318" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1319" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>&lt;{HWFloat:8, 24}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Mem.alloc(Mem.java:63)
maxpower.math.interpolation.CubicSplineBuilder.buildCoefficientRom(CubicSplineBuilder.java:293)
maxpower.math.interpolation.CubicSplineBuilder.access$1(CubicSplineBuilder.java:264)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:90)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:87)
maxpower.math.interpolation.CubicSplineBuilder.build(CubicSplineBuilder.java:239)
maxpower.math.interpolation.InterpolatorBuilder.build(InterpolatorBuilder.java:126)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:35)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1158" dst_node_input="option0" src_node_id="1319" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="1327" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(128)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>[95:64]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Mem.alloc(Mem.java:63)
maxpower.math.interpolation.CubicSplineBuilder.buildCoefficientRom(CubicSplineBuilder.java:293)
maxpower.math.interpolation.CubicSplineBuilder.access$1(CubicSplineBuilder.java:264)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:99)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:87)
maxpower.math.interpolation.CubicSplineBuilder.build(CubicSplineBuilder.java:239)
maxpower.math.interpolation.InterpolatorBuilder.build(InterpolatorBuilder.java:126)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:35)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>64</Base>
		<Width>32</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1328" dst_node_input="input" src_node_id="1327" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1328" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>&lt;{HWFloat:8, 24}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Mem.alloc(Mem.java:63)
maxpower.math.interpolation.CubicSplineBuilder.buildCoefficientRom(CubicSplineBuilder.java:293)
maxpower.math.interpolation.CubicSplineBuilder.access$1(CubicSplineBuilder.java:264)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:99)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:87)
maxpower.math.interpolation.CubicSplineBuilder.build(CubicSplineBuilder.java:239)
maxpower.math.interpolation.InterpolatorBuilder.build(InterpolatorBuilder.java:126)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:35)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1158" dst_node_input="option1" src_node_id="1328" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="1158" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeBits(1)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="32" FMems="0" LUTs="32" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Control.mux(Control.java:124)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:134)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1163" dst_node_input="a" src_node_id="1158" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1163" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<ResourceUsage DSPs="0" FFs="256" FMems="0" LUTs="288" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:1020)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:147)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1164" dst_node_input="b" src_node_id="1163" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1164" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="11" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<ResourceUsage DSPs="0" FFs="352" FMems="0" LUTs="384" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:930)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:147)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1166" dst_node_input="a" src_node_id="1164" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1316" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(128)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>[63:32]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Mem.alloc(Mem.java:63)
maxpower.math.interpolation.CubicSplineBuilder.buildCoefficientRom(CubicSplineBuilder.java:293)
maxpower.math.interpolation.CubicSplineBuilder.access$1(CubicSplineBuilder.java:264)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:90)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:87)
maxpower.math.interpolation.CubicSplineBuilder.build(CubicSplineBuilder.java:239)
maxpower.math.interpolation.InterpolatorBuilder.build(InterpolatorBuilder.java:126)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:35)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>32</Base>
		<Width>32</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1317" dst_node_input="input" src_node_id="1316" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1317" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>&lt;{HWFloat:8, 24}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Mem.alloc(Mem.java:63)
maxpower.math.interpolation.CubicSplineBuilder.buildCoefficientRom(CubicSplineBuilder.java:293)
maxpower.math.interpolation.CubicSplineBuilder.access$1(CubicSplineBuilder.java:264)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:90)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:87)
maxpower.math.interpolation.CubicSplineBuilder.build(CubicSplineBuilder.java:239)
maxpower.math.interpolation.InterpolatorBuilder.build(InterpolatorBuilder.java:126)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:35)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1157" dst_node_input="option0" src_node_id="1317" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="1325" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(128)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>[63:32]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Mem.alloc(Mem.java:63)
maxpower.math.interpolation.CubicSplineBuilder.buildCoefficientRom(CubicSplineBuilder.java:293)
maxpower.math.interpolation.CubicSplineBuilder.access$1(CubicSplineBuilder.java:264)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:99)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:87)
maxpower.math.interpolation.CubicSplineBuilder.build(CubicSplineBuilder.java:239)
maxpower.math.interpolation.InterpolatorBuilder.build(InterpolatorBuilder.java:126)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:35)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>32</Base>
		<Width>32</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1326" dst_node_input="input" src_node_id="1325" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1326" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>&lt;{HWFloat:8, 24}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Mem.alloc(Mem.java:63)
maxpower.math.interpolation.CubicSplineBuilder.buildCoefficientRom(CubicSplineBuilder.java:293)
maxpower.math.interpolation.CubicSplineBuilder.access$1(CubicSplineBuilder.java:264)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:99)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:87)
maxpower.math.interpolation.CubicSplineBuilder.build(CubicSplineBuilder.java:239)
maxpower.math.interpolation.InterpolatorBuilder.build(InterpolatorBuilder.java:126)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:35)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1157" dst_node_input="option1" src_node_id="1326" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="1157" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeBits(1)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="32" FMems="0" LUTs="32" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Control.mux(Control.java:124)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:134)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1165" dst_node_input="a" src_node_id="1157" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1165" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<ResourceUsage DSPs="0" FFs="256" FMems="0" LUTs="288" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:1020)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:147)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1166" dst_node_input="b" src_node_id="1165" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1166" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="11" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<ResourceUsage DSPs="0" FFs="352" FMems="0" LUTs="384" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:930)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:147)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1167" dst_node_input="a" src_node_id="1166" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1314" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(128)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>[31:0]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Mem.alloc(Mem.java:63)
maxpower.math.interpolation.CubicSplineBuilder.buildCoefficientRom(CubicSplineBuilder.java:293)
maxpower.math.interpolation.CubicSplineBuilder.access$1(CubicSplineBuilder.java:264)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:90)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:87)
maxpower.math.interpolation.CubicSplineBuilder.build(CubicSplineBuilder.java:239)
maxpower.math.interpolation.InterpolatorBuilder.build(InterpolatorBuilder.java:126)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:35)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>0</Base>
		<Width>32</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1315" dst_node_input="input" src_node_id="1314" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1315" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>&lt;{HWFloat:8, 24}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Mem.alloc(Mem.java:63)
maxpower.math.interpolation.CubicSplineBuilder.buildCoefficientRom(CubicSplineBuilder.java:293)
maxpower.math.interpolation.CubicSplineBuilder.access$1(CubicSplineBuilder.java:264)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:90)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:87)
maxpower.math.interpolation.CubicSplineBuilder.build(CubicSplineBuilder.java:239)
maxpower.math.interpolation.InterpolatorBuilder.build(InterpolatorBuilder.java:126)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:35)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1156" dst_node_input="option0" src_node_id="1315" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="1323" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(128)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>[31:0]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Mem.alloc(Mem.java:63)
maxpower.math.interpolation.CubicSplineBuilder.buildCoefficientRom(CubicSplineBuilder.java:293)
maxpower.math.interpolation.CubicSplineBuilder.access$1(CubicSplineBuilder.java:264)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:99)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:87)
maxpower.math.interpolation.CubicSplineBuilder.build(CubicSplineBuilder.java:239)
maxpower.math.interpolation.InterpolatorBuilder.build(InterpolatorBuilder.java:126)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:35)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>0</Base>
		<Width>32</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1324" dst_node_input="input" src_node_id="1323" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1324" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>&lt;{HWFloat:8, 24}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Mem.alloc(Mem.java:63)
maxpower.math.interpolation.CubicSplineBuilder.buildCoefficientRom(CubicSplineBuilder.java:293)
maxpower.math.interpolation.CubicSplineBuilder.access$1(CubicSplineBuilder.java:264)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:99)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:87)
maxpower.math.interpolation.CubicSplineBuilder.build(CubicSplineBuilder.java:239)
maxpower.math.interpolation.InterpolatorBuilder.build(InterpolatorBuilder.java:126)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:35)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1156" dst_node_input="option1" src_node_id="1324" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="1156" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeBits(1)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="32" FMems="0" LUTs="32" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Control.mux(Control.java:124)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:134)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1167" dst_node_input="b" src_node_id="1156" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1167" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="11" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<ResourceUsage DSPs="0" FFs="352" FMems="0" LUTs="384" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:930)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:147)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1174" dst_node_input="option0" src_node_id="1167" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1173" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>NaN</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:80)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:151)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>NaN</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1174" dst_node_input="option1" src_node_id="1173" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="1174" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="32" FMems="0" LUTs="32" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1187)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:151)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:43)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1175" dst_node_input="a" src_node_id="1174" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1176" dst_node_input="option0" src_node_id="1174" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1175" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeNeg">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeFloat(8, 24)" />
		<Text>(-)</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.neg(DFEVar.java:1119)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:45)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1176" dst_node_input="option1" src_node_id="1175" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1176" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="32" FMems="0" LUTs="32" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1187)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:45)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1189" dst_node_input="option0" src_node_id="1176" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1188" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x7fc00000; NaN</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1228)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:47)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>01111111110000000000000000000000</Value>
		<HexValue>0x7fc00000</HexValue>
		<NumericValue>NaN</NumericValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1189" dst_node_input="option1" src_node_id="1188" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="1189" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="32" FMems="0" LUTs="32" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1228)
maxpower.math.interpolation.functions.trigonometric.Sin.value(Sin.java:47)
maxpower.math.functions.Trigonometric.sin(Trigonometric.java:24)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1190" dst_node_input="b" src_node_id="1189" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1190" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<ResourceUsage DSPs="0" FFs="256" FMems="0" LUTs="288" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:1020)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:81)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1205" dst_node_input="b" src_node_id="1190" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1215" dst_node_input="b" src_node_id="1190" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1220" dst_node_input="option0" src_node_id="1190" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1213" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<ResourceUsage DSPs="0" FFs="256" FMems="0" LUTs="288" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:1020)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:91)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1214" dst_node_input="a" src_node_id="1213" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="144" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x0; 0.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.abs(KernelMath.java:243)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:24)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="146" dst_node_input="in0" src_node_id="144" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="145" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeBits(31)" />
		<Text>[30:0]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.abs(KernelMath.java:243)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:24)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>0</Base>
		<Width>31</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="146" dst_node_input="in1" src_node_id="145" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="146" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="in1" type="dfeBits(31)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.abs(KernelMath.java:243)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:24)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="147" dst_node_input="input" src_node_id="146" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="147" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>&lt;{HWFloat:8, 24}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.abs(KernelMath.java:243)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:24)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="148" dst_node_input="a" src_node_id="147" src_node_output="output" />
	<Edge criticalPaths="[]" dst_node_id="154" dst_node_input="a" src_node_id="147" src_node_output="output" />
	<Edge criticalPaths="[]" dst_node_id="652" dst_node_input="a" src_node_id="147" src_node_output="output" />
	<Edge criticalPaths="[]" dst_node_id="654" dst_node_input="a" src_node_id="147" src_node_output="output" />
	<Edge criticalPaths="[]" dst_node_id="655" dst_node_input="a" src_node_id="147" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="652" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeBits(31)" />
		<Text>[30:0]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.isInfinity(FloatingPoint.java:171)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:43)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>0</Base>
		<Width>31</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="653" dst_node_input="a" src_node_id="652" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="651" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(31)" />
		<Text>{HWRawBits:31}\n0x7f800000</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.isInfinity(FloatingPoint.java:167)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:43)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>1111111100000000000000000000000</Value>
		<HexValue>0x7f800000</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="653" dst_node_input="b" src_node_id="651" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="653" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeEq">
		<Input name="a" type="dfeBits(31)" />
		<Input name="b" type="dfeBits(31)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>==</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.isInfinity(FloatingPoint.java:173)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:43)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="661" dst_node_input="a" src_node_id="653" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="655" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeBits(8)" />
		<Text>[30:23]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.isNaN(FloatingPoint.java:129)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:43)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>23</Base>
		<Width>8</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="657" dst_node_input="a" src_node_id="655" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="656" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(8)" />
		<Text>{HWRawBits:8}\n0xff</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.isNaN(FloatingPoint.java:131)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:43)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>11111111</Value>
		<HexValue>0xff</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="657" dst_node_input="b" src_node_id="656" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="657" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeEq">
		<Input name="a" type="dfeBits(8)" />
		<Input name="b" type="dfeBits(8)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>==</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.isNaN(FloatingPoint.java:135)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:43)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="660" dst_node_input="a" src_node_id="657" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="654" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeBits(23)" />
		<Text>[22:0]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.isNaN(FloatingPoint.java:128)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:43)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>0</Base>
		<Width>23</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="659" dst_node_input="a" src_node_id="654" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="658" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>0.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.isNaN(FloatingPoint.java:135)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:43)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="659" dst_node_input="b" src_node_id="658" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="659" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeNeq">
		<Input name="a" type="dfeBits(23)" />
		<Input name="b" type="dfeBits(23)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>!=</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.isNaN(FloatingPoint.java:135)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:43)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="660" dst_node_input="b" src_node_id="659" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="660" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.isNaN(FloatingPoint.java:135)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:43)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="661" dst_node_input="b" src_node_id="660" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="661" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeOr">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>|</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.or(DFEVar.java:469)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:43)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="663" dst_node_input="sel" src_node_id="661" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="149" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x1; 1.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:90)
maxpower.math.Utils.getMantissa(Utils.java:28)
maxpower.math.Utils.trigonometricRangeReduction(Utils.java:50)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:26)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>1</Value>
		<HexValue>0x1</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="150" dst_node_input="in0" src_node_id="149" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="148" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeBits(23)" />
		<Text>[22:0]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:344)
maxpower.math.Utils.getMantissa(Utils.java:27)
maxpower.math.Utils.trigonometricRangeReduction(Utils.java:50)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:26)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>0</Base>
		<Width>23</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="150" dst_node_input="in1" src_node_id="148" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="150" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="in1" type="dfeBits(23)" />
		<Output latency="0" name="result" type="dfeBits(24)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
maxpower.math.Utils.getMantissa(Utils.java:29)
maxpower.math.Utils.trigonometricRangeReduction(Utils.java:50)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:26)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="151" dst_node_input="input" src_node_id="150" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="151" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(24)" />
		<Output latency="0" name="output" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:24, -23, UNSIGNED}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:172)
maxpower.math.Utils.getMantissa(Utils.java:29)
maxpower.math.Utils.trigonometricRangeReduction(Utils.java:50)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:26)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="152" dst_node_input="input" src_node_id="151" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="152" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeBits(24)" />
		<Text>&lt;{HWRawBits:24}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.reinterpret(DFEVar.java:1440)
maxpower.math.Utils.trigonometricRangeReduction(Utils.java:61)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:26)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="153" dst_node_input="input" src_node_id="152" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="153" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(24)" />
		<Output latency="0" name="output" type="dfeOffsetFix(24, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:24, 0, UNSIGNED}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.reinterpret(DFEVar.java:1440)
maxpower.math.Utils.trigonometricRangeReduction(Utils.java:61)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:26)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="175" dst_node_input="a" src_node_id="153" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="154" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeBits(8)" />
		<Text>[30:23]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getExponent(FloatingPoint.java:37)
maxpower.math.Utils.getExponent(Utils.java:33)
maxpower.math.Utils.trigonometricRangeReduction(Utils.java:64)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:26)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>23</Base>
		<Width>8</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="155" dst_node_input="input" src_node_id="154" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="155" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(8)" />
		<Output latency="0" name="output" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:8, 0, UNSIGNED}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getExponent(FloatingPoint.java:38)
maxpower.math.Utils.getExponent(Utils.java:33)
maxpower.math.Utils.trigonometricRangeReduction(Utils.java:64)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:26)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="157" dst_node_input="a" src_node_id="155" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="156" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>127.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getExponent(FloatingPoint.java:41)
maxpower.math.Utils.getExponent(Utils.java:33)
maxpower.math.Utils.trigonometricRangeReduction(Utils.java:64)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:26)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>127.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="157" dst_node_input="b" src_node_id="156" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="157" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSub">
		<Input name="a" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>-</Text>
		<ResourceUsage DSPs="0" FFs="9" FMems="0" LUTs="18" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getExponent(FloatingPoint.java:41)
maxpower.math.Utils.getExponent(Utils.java:33)
maxpower.math.Utils.trigonometricRangeReduction(Utils.java:64)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:26)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="159" dst_node_input="a" src_node_id="157" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="158" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>24.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:990)
maxpower.math.Utils.trigonometricRangeReduction(Utils.java:64)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:26)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>24.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="159" dst_node_input="b" src_node_id="158" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="159" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSub">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>-</Text>
		<ResourceUsage DSPs="0" FFs="9" FMems="0" LUTs="18" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:990)
maxpower.math.Utils.trigonometricRangeReduction(Utils.java:64)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:26)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="162" dst_node_input="a" src_node_id="159" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="164" dst_node_input="a" src_node_id="159" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="165" dst_node_input="a" src_node_id="159" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="166" dst_node_input="option0" src_node_id="159" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="161" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>0.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.lt(DFEVar.java:900)
maxpower.math.Utils.trigonometricRangeReduction(Utils.java:74)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:26)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="162" dst_node_input="b" src_node_id="161" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="162" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.lt(DFEVar.java:900)
maxpower.math.Utils.trigonometricRangeReduction(Utils.java:74)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:26)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="171" dst_node_input="sel" src_node_id="162" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="160" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(185)" />
		<Text>{HWRawBits:185}\n0x0a2f9836e4e441529fc2757d1f534ddc0db6295993c4390</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:60)
maxpower.math.Utils.getTwoOverPI(Utils.java:129)
maxpower.math.Utils.trigonometricRangeReduction(Utils.java:72)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:26)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>01010001011111001100000110110111001001110010001000001010100101001111111000010011101010111110100011111010100110100110111011100000011011011011000101001010110011001001111000100001110010000</Value>
		<HexValue>0x0a2f9836e4e441529fc2757d1f534ddc0db6295993c4390</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="169" dst_node_input="datain" src_node_id="160" src_node_output="value" />
	<Edge criticalPaths="[]" dst_node_id="170" dst_node_input="datain" src_node_id="160" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="163" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>0.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.abs(KernelMath.java:250)
maxpower.math.Utils.trigonometricRangeReduction(Utils.java:75)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:26)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="164" dst_node_input="b" src_node_id="163" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="164" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.abs(KernelMath.java:250)
maxpower.math.Utils.trigonometricRangeReduction(Utils.java:75)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:26)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="166" dst_node_input="sel" src_node_id="164" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="165" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeNeg">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>(-)</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.abs(KernelMath.java:250)
maxpower.math.Utils.trigonometricRangeReduction(Utils.java:75)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:26)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="166" dst_node_input="option1" src_node_id="165" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="166" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="option1" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="9" FMems="0" LUTs="9" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.abs(KernelMath.java:250)
maxpower.math.Utils.trigonometricRangeReduction(Utils.java:75)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:26)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="167" dst_node_input="a" src_node_id="166" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="167" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="result" type="dfeBits(8)" />
		<Text>[7:0]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:344)
maxpower.math.Utils.trigonometricRangeReduction(Utils.java:76)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:26)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>0</Base>
		<Width>8</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="168" dst_node_input="input" src_node_id="167" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="168" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(8)" />
		<Output latency="0" name="output" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:8, 0, UNSIGNED}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:172)
maxpower.math.Utils.trigonometricRangeReduction(Utils.java:77)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:26)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="169" dst_node_input="shift" src_node_id="168" src_node_output="output" />
	<Edge criticalPaths="[]" dst_node_id="170" dst_node_input="shift" src_node_id="168" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="170" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeShift">
		<Input name="datain" type="dfeBits(185)" />
		<Input name="shift" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Output latency="4" name="dataout" type="dfeBits(185)" />
		<Text>&lt;&lt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.shiftLeft(DFEVar.java:219)
maxpower.math.Utils.trigonometricRangeReduction(Utils.java:80)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:26)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Direction>Left</Direction>
		<Circular>false</Circular>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="171" dst_node_input="option0" src_node_id="170" src_node_output="dataout" />
	<Node criticalPaths="[]" group="[]" id="169" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeShift">
		<Input name="datain" type="dfeBits(185)" />
		<Input name="shift" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Output latency="4" name="dataout" type="dfeBits(185)" />
		<Text>&gt;&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.shiftRight(DFEVar.java:243)
maxpower.math.Utils.trigonometricRangeReduction(Utils.java:80)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:26)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Direction>Right</Direction>
		<Circular>false</Circular>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="171" dst_node_input="option1" src_node_id="169" src_node_output="dataout" />
	<Node criticalPaths="[]" group="[]" id="171" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(185)" />
		<Input name="option1" type="dfeBits(185)" />
		<Output latency="1" name="result" type="dfeBits(185)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="185" FMems="0" LUTs="185" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1187)
maxpower.math.Utils.trigonometricRangeReduction(Utils.java:80)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:26)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="172" dst_node_input="a" src_node_id="171" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="172" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(185)" />
		<Output latency="0" name="result" type="dfeBits(81)" />
		<Text>[184:104]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:344)
maxpower.math.Utils.trigonometricRangeReduction(Utils.java:82)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:26)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>104</Base>
		<Width>81</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="173" dst_node_input="input" src_node_id="172" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="173" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(81)" />
		<Output latency="0" name="output" type="dfeBits(81)" />
		<Text>&lt;{HWRawBits:81}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.reinterpret(DFEVar.java:1440)
maxpower.math.Utils.trigonometricRangeReduction(Utils.java:83)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:26)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="174" dst_node_input="input" src_node_id="173" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="174" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(81)" />
		<Output latency="0" name="output" type="dfeOffsetFix(81, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:81, 0, UNSIGNED}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.reinterpret(DFEVar.java:1440)
maxpower.math.Utils.trigonometricRangeReduction(Utils.java:83)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:26)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="175" dst_node_input="b" src_node_id="174" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="175" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMul">
		<Input name="a" type="dfeOffsetFix(24, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(81, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(81, 0, UNSIGNED)" />
		<Text>*</Text>
		<ResourceUsage DSPs="0" FFs="81" FMems="0" LUTs="162" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:1020)
maxpower.math.Utils.trigonometricRangeReduction(Utils.java:92)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:26)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="176" dst_node_input="input" src_node_id="175" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="176" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(81, 0, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeBits(81)" />
		<Text>&lt;{HWRawBits:81}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.reinterpret(DFEVar.java:1440)
maxpower.math.Utils.trigonometricRangeReduction(Utils.java:95)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:26)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="177" dst_node_input="input" src_node_id="176" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="177" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(81)" />
		<Output latency="0" name="output" type="dfeOffsetFix(81, -79, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:81, -79, UNSIGNED}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.reinterpret(DFEVar.java:1440)
maxpower.math.Utils.trigonometricRangeReduction(Utils.java:95)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:26)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="178" dst_node_input="a" src_node_id="177" src_node_output="output" />
	<Edge criticalPaths="[]" dst_node_id="179" dst_node_input="a" src_node_id="177" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="178" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeOffsetFix(81, -79, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(2)" />
		<Text>[80:79]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:344)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:29)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>79</Base>
		<Width>2</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="221" dst_node_input="a" src_node_id="178" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="223" dst_node_input="a" src_node_id="178" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="225" dst_node_input="a" src_node_id="178" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="222" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>1.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.eq(DFEVar.java:649)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:38)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>1.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="223" dst_node_input="b" src_node_id="222" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="223" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeEq">
		<Input name="a" type="dfeBits(2)" />
		<Input name="b" type="dfeBits(2)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>==</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.eq(DFEVar.java:649)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:38)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="226" dst_node_input="a" src_node_id="223" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="224" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>2.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.eq(DFEVar.java:649)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:38)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>2.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="225" dst_node_input="b" src_node_id="224" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="225" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeEq">
		<Input name="a" type="dfeBits(2)" />
		<Input name="b" type="dfeBits(2)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>==</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.eq(DFEVar.java:649)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:38)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="226" dst_node_input="b" src_node_id="225" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="226" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeOr">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>|</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.or(DFEVar.java:469)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:38)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="650" dst_node_input="sel" src_node_id="226" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="179" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeOffsetFix(81, -79, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(79)" />
		<Text>[78:0]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:344)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:34)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>0</Base>
		<Width>79</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="180" dst_node_input="input" src_node_id="179" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="180" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(79)" />
		<Output latency="0" name="output" type="dfeOffsetFix(79, -79, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:79, -79, UNSIGNED}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:172)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:35)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="182" dst_node_input="a" src_node_id="180" src_node_output="output" />
	<Edge criticalPaths="[]" dst_node_id="183" dst_node_input="i" src_node_id="180" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="183" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(79, -79, UNSIGNED)" />
		<Output latency="0" name="o" type="dfeOffsetFix(80, -79, TWOSCOMPLEMENT)" />
		<Text>NodeCast
{HWOffsetFix:79, -79, UNSIGNED} 
-&gt;
 {HWOffsetFix:80, -79, TWOSCOMPLEMENT}</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:181)
com.maxeler.maxblox.utils.Frexpf.&lt;init&gt;(Frexpf.java:46)
maxpower.math.Utils.ldexp(Utils.java:108)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:34)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="184" dst_node_input="input" src_node_id="183" src_node_output="o" />
	<Edge criticalPaths="[]" dst_node_id="198" dst_node_input="datain" src_node_id="183" src_node_output="o" />
	<Edge criticalPaths="[]" dst_node_id="200" dst_node_input="option0" src_node_id="183" src_node_output="o" />
	<Node criticalPaths="[]" group="[]" id="184" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLeading1Detect">
		<Input name="input" type="dfeOffsetFix(80, -79, TWOSCOMPLEMENT)" />
		<Output latency="1" name="output" type="dfeOffsetFix(80, 0, UNSIGNED)" />
		<Text>Leading 1 Detect (MSB)</Text>
		<ResourceUsage DSPs="0" FFs="80" FMems="0" LUTs="80" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Bitops.leading1Detect(Bitops.java:197)
com.maxeler.maxblox.utils.Frexpf.&lt;init&gt;(Frexpf.java:49)
maxpower.math.Utils.ldexp(Utils.java:108)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:34)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="185" dst_node_input="input" src_node_id="184" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="185" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeOneHotDecode">
		<Input name="input" type="dfeOffsetFix(80, 0, UNSIGNED)" />
		<Output latency="1" name="output" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Text>One-Hot -&gt; binary</Text>
		<ResourceUsage DSPs="0" FFs="7" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Bitops.onehotDecode(Bitops.java:155)
com.maxeler.maxblox.utils.Frexpf.&lt;init&gt;(Frexpf.java:50)
maxpower.math.Utils.ldexp(Utils.java:108)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:34)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="186" dst_node_input="i" src_node_id="185" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="186" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Output latency="0" name="o" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Text>NodeCast
{HWOffsetFix:7, 0, UNSIGNED} 
-&gt;
 {HWOffsetFix:8, 0, TWOSCOMPLEMENT}</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:181)
com.maxeler.maxblox.utils.Frexpf.&lt;init&gt;(Frexpf.java:51)
maxpower.math.Utils.ldexp(Utils.java:108)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:34)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="188" dst_node_input="a" src_node_id="186" src_node_output="o" />
	<Edge criticalPaths="[]" dst_node_id="192" dst_node_input="b" src_node_id="186" src_node_output="o" />
	<Node criticalPaths="[]" group="[]" id="187" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>79.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:990)
com.maxeler.maxblox.utils.Frexpf.&lt;init&gt;(Frexpf.java:54)
maxpower.math.Utils.ldexp(Utils.java:108)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:34)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>79.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="188" dst_node_input="b" src_node_id="187" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="188" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSub">
		<Input name="a" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Text>-</Text>
		<ResourceUsage DSPs="0" FFs="8" FMems="0" LUTs="16" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:990)
com.maxeler.maxblox.utils.Frexpf.&lt;init&gt;(Frexpf.java:54)
maxpower.math.Utils.ldexp(Utils.java:108)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:34)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="190" dst_node_input="a" src_node_id="188" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="189" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>1.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:990)
com.maxeler.maxblox.utils.Frexpf.&lt;init&gt;(Frexpf.java:54)
maxpower.math.Utils.ldexp(Utils.java:108)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:34)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>1.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="190" dst_node_input="b" src_node_id="189" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="190" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSub">
		<Input name="a" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Text>-</Text>
		<ResourceUsage DSPs="0" FFs="8" FMems="0" LUTs="16" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:990)
com.maxeler.maxblox.utils.Frexpf.&lt;init&gt;(Frexpf.java:54)
maxpower.math.Utils.ldexp(Utils.java:108)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:34)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="203" dst_node_input="i" src_node_id="190" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="203" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>NodeCast
{HWOffsetFix:8, 0, TWOSCOMPLEMENT} 
-&gt;
 {HWOffsetFix:9, 0, TWOSCOMPLEMENT}</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:181)
maxpower.math.Utils.ldexp(Utils.java:109)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:34)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="205" dst_node_input="a" src_node_id="203" src_node_output="o" />
	<Node criticalPaths="[]" group="[]" id="204" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>127.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:945)
maxpower.math.Utils.ldexp(Utils.java:109)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:34)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>127.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="205" dst_node_input="b" src_node_id="204" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="205" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<ResourceUsage DSPs="0" FFs="9" FMems="0" LUTs="18" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:945)
maxpower.math.Utils.ldexp(Utils.java:109)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:34)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="208" dst_node_input="i" src_node_id="205" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="214" dst_node_input="a" src_node_id="205" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="218" dst_node_input="a" src_node_id="205" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="217" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>-126.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.lt(DFEVar.java:900)
maxpower.math.Utils.ldexp(Utils.java:117)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:34)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>-126.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="218" dst_node_input="b" src_node_id="217" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="218" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.lt(DFEVar.java:900)
maxpower.math.Utils.ldexp(Utils.java:117)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:34)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="220" dst_node_input="sel" src_node_id="218" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="213" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>127.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.gt(DFEVar.java:855)
maxpower.math.Utils.ldexp(Utils.java:116)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:34)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>127.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="214" dst_node_input="b" src_node_id="213" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="214" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeGt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.gt(DFEVar.java:855)
maxpower.math.Utils.ldexp(Utils.java:116)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:34)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="216" dst_node_input="sel" src_node_id="214" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="181" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>0.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.lt(DFEVar.java:900)
maxpower.math.Utils.ldexp(Utils.java:107)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:34)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="182" dst_node_input="b" src_node_id="181" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="182" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(79, -79, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(79, -79, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.lt(DFEVar.java:900)
maxpower.math.Utils.ldexp(Utils.java:107)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:34)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="209" dst_node_input="in0" src_node_id="182" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="208" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Text>NodeCast
{HWOffsetFix:9, 0, TWOSCOMPLEMENT} 
-&gt;
 {HWOffsetFix:8, 0, UNSIGNED}</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:181)
maxpower.math.Utils.ldexp(Utils.java:115)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:34)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="209" dst_node_input="in1" src_node_id="208" src_node_output="o" />
	<Node criticalPaths="[]" group="[]" id="209" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="in1" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(9)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
maxpower.math.Utils.ldexp(Utils.java:115)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:34)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="210" dst_node_input="in0" src_node_id="209" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="191" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>80.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.subAsRHS(DFEVar.java:1010)
com.maxeler.maxblox.utils.Frexpf.&lt;init&gt;(Frexpf.java:55)
maxpower.math.Utils.ldexp(Utils.java:108)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:34)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>80.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="192" dst_node_input="a" src_node_id="191" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="192" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSub">
		<Input name="a" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Text>-</Text>
		<ResourceUsage DSPs="0" FFs="8" FMems="0" LUTs="16" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.subAsRHS(DFEVar.java:1010)
com.maxeler.maxblox.utils.Frexpf.&lt;init&gt;(Frexpf.java:55)
maxpower.math.Utils.ldexp(Utils.java:108)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:34)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="194" dst_node_input="a" src_node_id="192" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="193" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>1.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:990)
com.maxeler.maxblox.utils.Frexpf.&lt;init&gt;(Frexpf.java:55)
maxpower.math.Utils.ldexp(Utils.java:108)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:34)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>1.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="194" dst_node_input="b" src_node_id="193" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="194" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSub">
		<Input name="a" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Text>-</Text>
		<ResourceUsage DSPs="0" FFs="8" FMems="0" LUTs="16" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:990)
com.maxeler.maxblox.utils.Frexpf.&lt;init&gt;(Frexpf.java:55)
maxpower.math.Utils.ldexp(Utils.java:108)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:34)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="196" dst_node_input="a" src_node_id="194" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="197" dst_node_input="i" src_node_id="194" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="195" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>0.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.gt(DFEVar.java:855)
com.maxeler.maxblox.utils.Frexpf.&lt;init&gt;(Frexpf.java:56)
maxpower.math.Utils.ldexp(Utils.java:108)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:34)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="196" dst_node_input="b" src_node_id="195" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="196" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeGt">
		<Input name="a" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.gt(DFEVar.java:855)
com.maxeler.maxblox.utils.Frexpf.&lt;init&gt;(Frexpf.java:56)
maxpower.math.Utils.ldexp(Utils.java:108)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:34)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="200" dst_node_input="sel" src_node_id="196" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="197" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(8, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Text>NodeCast
{HWOffsetFix:8, 0, TWOSCOMPLEMENT} 
-&gt;
 {HWOffsetFix:7, 0, UNSIGNED}</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:181)
com.maxeler.maxblox.utils.Frexpf.&lt;init&gt;(Frexpf.java:57)
maxpower.math.Utils.ldexp(Utils.java:108)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:34)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="198" dst_node_input="shift" src_node_id="197" src_node_output="o" />
	<Node criticalPaths="[]" group="[]" id="198" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeShift">
		<Input name="datain" type="dfeOffsetFix(80, -79, TWOSCOMPLEMENT)" />
		<Input name="shift" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Output latency="4" name="dataout" type="dfeBits(80)" />
		<Text>&lt;&lt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.shiftLeft(DFEVar.java:219)
com.maxeler.maxblox.utils.Frexpf.&lt;init&gt;(Frexpf.java:57)
maxpower.math.Utils.ldexp(Utils.java:108)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:34)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Direction>Left</Direction>
		<Circular>false</Circular>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="199" dst_node_input="input" src_node_id="198" src_node_output="dataout" />
	<Node criticalPaths="[]" group="[]" id="199" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(80)" />
		<Output latency="0" name="output" type="dfeOffsetFix(80, -79, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:80, -79, TWOSCOMPLEMENT}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.shiftLeft(DFEVar.java:231)
com.maxeler.maxblox.utils.Frexpf.&lt;init&gt;(Frexpf.java:57)
maxpower.math.Utils.ldexp(Utils.java:108)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:34)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="200" dst_node_input="option1" src_node_id="199" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="200" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(80, -79, TWOSCOMPLEMENT)" />
		<Input name="option1" type="dfeOffsetFix(80, -79, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(80, -79, TWOSCOMPLEMENT)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="80" FMems="0" LUTs="80" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1187)
com.maxeler.maxblox.utils.Frexpf.&lt;init&gt;(Frexpf.java:56)
maxpower.math.Utils.ldexp(Utils.java:108)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:34)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="201" dst_node_input="input" src_node_id="200" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="201" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(80, -79, TWOSCOMPLEMENT)" />
		<Output latency="0" name="output" type="dfeBits(80)" />
		<Text>&lt;{HWRawBits:80}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.reinterpret(DFEVar.java:1440)
com.maxeler.maxblox.utils.Frexpf.&lt;init&gt;(Frexpf.java:58)
maxpower.math.Utils.ldexp(Utils.java:108)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:34)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="202" dst_node_input="input" src_node_id="201" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="202" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(80)" />
		<Output latency="0" name="output" type="dfeOffsetFix(80, -78, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:80, -78, TWOSCOMPLEMENT}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.reinterpret(DFEVar.java:1440)
com.maxeler.maxblox.utils.Frexpf.&lt;init&gt;(Frexpf.java:58)
maxpower.math.Utils.ldexp(Utils.java:108)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:34)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="206" dst_node_input="i" src_node_id="202" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="206" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(80, -78, TWOSCOMPLEMENT)" />
		<Output latency="1" name="o" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Text>NodeCast
{HWOffsetFix:80, -78, TWOSCOMPLEMENT} 
-&gt;
 {HWOffsetFix:24, -23, UNSIGNED}</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:181)
maxpower.math.Utils.ldexp(Utils.java:112)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:34)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="207" dst_node_input="a" src_node_id="206" src_node_output="o" />
	<Node criticalPaths="[]" group="[]" id="207" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeOffsetFix(24, -23, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(23)" />
		<Text>[22:0]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:344)
maxpower.math.Utils.ldexp(Utils.java:113)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:34)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>0</Base>
		<Width>23</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="210" dst_node_input="in1" src_node_id="207" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="210" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(9)" />
		<Input name="in1" type="dfeBits(23)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
maxpower.math.Utils.ldexp(Utils.java:115)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:34)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="211" dst_node_input="input" src_node_id="210" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="211" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeBits(32)" />
		<Text>&lt;{HWRawBits:32}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.reinterpret(DFEVar.java:1440)
maxpower.math.Utils.ldexp(Utils.java:115)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:34)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="212" dst_node_input="input" src_node_id="211" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="212" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>&lt;{HWFloat:8, 24}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.reinterpret(DFEVar.java:1440)
maxpower.math.Utils.ldexp(Utils.java:115)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:34)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="216" dst_node_input="option0" src_node_id="212" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="215" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x7f800000; Infinity</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1228)
maxpower.math.Utils.ldexp(Utils.java:116)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:34)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>01111111100000000000000000000000</Value>
		<HexValue>0x7f800000</HexValue>
		<NumericValue>Infinity</NumericValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="216" dst_node_input="option1" src_node_id="215" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="216" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="32" FMems="0" LUTs="32" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1228)
maxpower.math.Utils.ldexp(Utils.java:116)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:34)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="220" dst_node_input="option0" src_node_id="216" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="219" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0xff800000; -Infinity</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1228)
maxpower.math.Utils.ldexp(Utils.java:117)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:34)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>11111111100000000000000000000000</Value>
		<HexValue>0xff800000</HexValue>
		<NumericValue>-Infinity</NumericValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="220" dst_node_input="option1" src_node_id="219" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="220" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="32" FMems="0" LUTs="32" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1228)
maxpower.math.Utils.ldexp(Utils.java:117)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:34)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="227" dst_node_input="a" src_node_id="220" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="228" dst_node_input="a" src_node_id="220" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="235" dst_node_input="a" src_node_id="220" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="241" dst_node_input="a" src_node_id="220" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="256" dst_node_input="a" src_node_id="220" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="428" dst_node_input="a" src_node_id="220" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="429" dst_node_input="a" src_node_id="220" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="436" dst_node_input="a" src_node_id="220" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="442" dst_node_input="a" src_node_id="220" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="457" dst_node_input="a" src_node_id="220" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="643" dst_node_input="a" src_node_id="220" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="645" dst_node_input="a" src_node_id="220" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="642" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>0.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.lt(DFEVar.java:890)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:151)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="643" dst_node_input="b" src_node_id="642" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="643" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="2" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="2" FMems="0" LUTs="3" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.lt(DFEVar.java:890)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:151)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="646" dst_node_input="a" src_node_id="643" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="644" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>1.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.gte(DFEVar.java:800)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:151)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>1.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="645" dst_node_input="b" src_node_id="644" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="645" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeGte">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="2" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;=</Text>
		<ResourceUsage DSPs="0" FFs="2" FMems="0" LUTs="3" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.gte(DFEVar.java:800)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:151)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="646" dst_node_input="b" src_node_id="645" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="646" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeOr">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>|</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.or(DFEVar.java:469)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:151)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="648" dst_node_input="sel" src_node_id="646" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="221" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(2)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[0:0]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:344)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:37)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>0</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="629" dst_node_input="sel" src_node_id="221" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="630" dst_node_input="sel" src_node_id="221" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="631" dst_node_input="sel" src_node_id="221" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="632" dst_node_input="sel" src_node_id="221" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="633" dst_node_input="sel" src_node_id="221" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="245" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>7.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.addAsRHS(DFEVar.java:965)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:59)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>7.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="246" dst_node_input="a" src_node_id="245" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="241" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeBits(8)" />
		<Text>[30:23]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getExponent(FloatingPoint.java:37)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:59)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>23</Base>
		<Width>8</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="242" dst_node_input="input" src_node_id="241" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="242" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(8)" />
		<Output latency="0" name="output" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:8, 0, UNSIGNED}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getExponent(FloatingPoint.java:38)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:59)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="244" dst_node_input="a" src_node_id="242" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="243" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>127.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getExponent(FloatingPoint.java:41)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:59)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>127.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="244" dst_node_input="b" src_node_id="243" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="244" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSub">
		<Input name="a" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>-</Text>
		<ResourceUsage DSPs="0" FFs="9" FMems="0" LUTs="18" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getExponent(FloatingPoint.java:41)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:59)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="246" dst_node_input="b" src_node_id="244" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="246" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<ResourceUsage DSPs="0" FFs="9" FMems="0" LUTs="18" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.addAsRHS(DFEVar.java:965)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:59)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="248" dst_node_input="a" src_node_id="246" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="249" dst_node_input="i" src_node_id="246" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="247" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>0.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.lt(DFEVar.java:900)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:60)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="248" dst_node_input="b" src_node_id="247" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="248" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.lt(DFEVar.java:900)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:60)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="254" dst_node_input="sel" src_node_id="248" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="239" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(5, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:5, 0, UNSIGNED}\n0x00; 0.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:90)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:58)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>00000</Value>
		<HexValue>0x00</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="240" dst_node_input="in0" src_node_id="239" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="235" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[31:31]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getMantissa(FloatingPoint.java:93)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:55)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>31</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="236" dst_node_input="input" src_node_id="235" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="236" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(1)" />
		<Output latency="0" name="output" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:1, 0, UNSIGNED}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getMantissa(FloatingPoint.java:94)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:55)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="238" dst_node_input="sel" src_node_id="236" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="231" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getMantissa(FloatingPoint.java:89)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:55)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="232" dst_node_input="in0" src_node_id="231" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="228" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeBits(31)" />
		<Text>[30:0]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getMantissa(FloatingPoint.java:81)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:55)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>0</Base>
		<Width>31</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="230" dst_node_input="a" src_node_id="228" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="229" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>0.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getMantissa(FloatingPoint.java:82)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:55)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="230" dst_node_input="b" src_node_id="229" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="230" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeNeq">
		<Input name="a" type="dfeBits(31)" />
		<Input name="b" type="dfeBits(31)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>!=</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getMantissa(FloatingPoint.java:82)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:55)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="232" dst_node_input="in1" src_node_id="230" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="232" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(2)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getMantissa(FloatingPoint.java:89)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:55)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="233" dst_node_input="in0" src_node_id="232" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="227" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeBits(23)" />
		<Text>[22:0]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getMantissa(FloatingPoint.java:77)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:55)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>0</Base>
		<Width>23</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="233" dst_node_input="in1" src_node_id="227" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="233" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(2)" />
		<Input name="in1" type="dfeBits(23)" />
		<Output latency="0" name="result" type="dfeBits(25)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getMantissa(FloatingPoint.java:91)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:55)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="234" dst_node_input="input" src_node_id="233" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="234" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(25)" />
		<Output latency="0" name="output" type="dfeOffsetFix(25, -23, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:25, -23, TWOSCOMPLEMENT}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getMantissa(FloatingPoint.java:92)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:55)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="237" dst_node_input="a" src_node_id="234" src_node_output="output" />
	<Edge criticalPaths="[]" dst_node_id="238" dst_node_input="option0" src_node_id="234" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="237" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeNeg">
		<Input name="a" type="dfeOffsetFix(25, -23, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(25, -23, TWOSCOMPLEMENT)" />
		<Text>(-)</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getMantissa(FloatingPoint.java:95)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:55)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="238" dst_node_input="option1" src_node_id="237" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="238" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(25, -23, TWOSCOMPLEMENT)" />
		<Input name="option1" type="dfeOffsetFix(25, -23, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(25, -23, TWOSCOMPLEMENT)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="25" FMems="0" LUTs="25" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getMantissa(FloatingPoint.java:95)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:55)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="240" dst_node_input="in1" src_node_id="238" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="240" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeOffsetFix(5, 0, UNSIGNED)" />
		<Input name="in1" type="dfeOffsetFix(25, -23, TWOSCOMPLEMENT)" />
		<Output latency="0" name="result" type="dfeBits(30)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:58)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="250" dst_node_input="datain" src_node_id="240" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="249" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(5, 0, UNSIGNED)" />
		<Text>NodeCast
{HWOffsetFix:9, 0, TWOSCOMPLEMENT} 
-&gt;
 {HWOffsetFix:5, 0, UNSIGNED}</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:181)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:61)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="250" dst_node_input="shift" src_node_id="249" src_node_output="o" />
	<Node criticalPaths="[]" group="[]" id="250" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeShift">
		<Input name="datain" type="dfeBits(30)" />
		<Input name="shift" type="dfeOffsetFix(5, 0, UNSIGNED)" />
		<Output latency="4" name="dataout" type="dfeBits(30)" />
		<Text>&lt;&lt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.shiftLeft(DFEVar.java:219)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:62)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Direction>Left</Direction>
		<Circular>false</Circular>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="251" dst_node_input="a" src_node_id="250" src_node_output="dataout" />
	<Node criticalPaths="[]" group="[]" id="251" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(30)" />
		<Output latency="0" name="result" type="dfeBits(7)" />
		<Text>[29:23]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:344)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:63)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>23</Base>
		<Width>7</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="252" dst_node_input="input" src_node_id="251" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="252" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(7)" />
		<Output latency="0" name="output" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:7, 0, UNSIGNED}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:172)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:64)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="254" dst_node_input="option0" src_node_id="252" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="253" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:7, 0, UNSIGNED}\n0x00; 0.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1228)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:65)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0000000</Value>
		<HexValue>0x00</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="254" dst_node_input="option1" src_node_id="253" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="254" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Input name="option1" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="7" FMems="0" LUTs="7" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1228)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:65)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1295" dst_node_input="addr" src_node_id="254" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1295" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeROM">
		<Input name="addr" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Output latency="2" name="dout" type="dfeBits(128)" />
		<Text>ROM</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="4" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Mem.alloc(Mem.java:63)
maxpower.math.interpolation.CubicSplineBuilder.buildCoefficientRom(CubicSplineBuilder.java:293)
maxpower.math.interpolation.CubicSplineBuilder.access$1(CubicSplineBuilder.java:264)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:90)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:87)
maxpower.math.interpolation.CubicSplineBuilder.build(CubicSplineBuilder.java:239)
maxpower.math.interpolation.InterpolatorBuilder.build(InterpolatorBuilder.java:126)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:32)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Depth>128</Depth>
		<MemoryData>0x3101e0a3b89dea68000000003f800000
0x31c2ce73b89de75db91de8e33f7ffb11
0x32225289b89dde3bb99de5d73f7fec43
0x32633797b89dcf03b9ecd1273f7fd397
0x329209f1b89db9b6ba1dd9ab3f7fb10f
0x32b27275b89d9e54ba4544ac3f7f84ab
0x32d2d418b89d7cdfba6ca8123f7f4e6d
0x32f32d9ab89d5557ba8a012d3f7f0e58
0x3309bedeb89d27beba9da8fe3f7ec46d
0x3319e1a0b89cf416bab14abb3f7e70b0
0x3329fe73b89cba62bac4e5a33f7e1324
0x333a14b8b89c7aa2bad878f33f7dabcc
0x334a23d1b89c34dabaec03eb3f7d3aac
0x335a2b1eb89be90cbaff85c93f7cbfc9
0x336a2a03b89b973cbb097ee73f7c3b28
0x337a1fe0b89b3f6cbb13359c3f7baccd
0x3385060cb89ae1a0bb1ce6a43f7b14be
0x338cf708b89a7ddbbb2691a03f7a7302
0x3394e294b89a1421bb3036303f79c79d
0x339cc863b899a477bb39d3f53f791298
0x33a4a826b8992ee1bb436a903f7853f8
0x33ac8191b898b362bb4cf9a23f778bc5
0x33b45455b8983201bb5680cd3f76ba07
0x33bc2025b897aac1bb5fffb33f75dec6
0x33c3e4b4b8971da9bb6975f63f74fa0b
0x33cba1b6b8968abdbb72e3393f740bdd
0x33d356deb895f203bb7c471f3f731447
0x33db03e1b8955381bb82d0a63f721352
0x33e2a872b894af3ebb8778b13f710908
0x33ea4446b894053fbb8c1b833f6ff573
0x33f1d711b893558cbb90b8ee3f6ed89e
0x33f9608ab892a02abb9550c53f6db293
0x34007033b891e521bb99e2da3f6c835e
0x34042b2db8912478bb9e6f003f6b4b0c
0x3407e10fb8905e37bba2f50b3f6a09a7
0x340b91b4b88f9265bba774ce3f68bf3c
0x340f3cf7b88ec10abbabee1b3f676bd8
0x3412e2b5b88dea2ebbb060c83f660f88
0x341682c9b88d0dd9bbb4cca83f64aa59
0x341a1d0fb88c2c14bbb931903f633c5a
0x341db165b88b44e8bbbd8f543f61c598
0x34213fa6b88a585dbbc1e5c93f604621
0x3424c7afb889667dbbc634c53f5ebe05
0x3428495fb8886f51bbca7c1c3f5d2d53
0x342bc491b88772e2bbcebba53f5b941a
0x342f3924b886713bbbd2f3353f59f26a
0x3432a6f6b8856a65bbd722a43f584853
0x34360de5b8845e69bbdb49c73f5695e5
0x34396dcfb8834d54bbdf68763f54db31
0x343cc692b882372ebbe37e883f531849
0x3440180fb8811c04bbe78bd53f514d3d
0x34436224b87ff7bebbeb90343f4f7a1f
0x3446a4b0b87dad96bbef8b7f3f4d9f02
0x3449df94b87b59a6bbf37d8d3f4bbbf8
0x344d12b0b878fc06bbf766393f49d112
0x34503de3b87694ccbbfb455a3f47de65
0x34536110b8742411bbff1acc3f45e403
0x34567c16b871a9ecbc0173343f43e200
0x34598ed7b86f2676bc0354043f41d870
0x345c9935b86c99c8bc052fc53f3fc767
0x345f9b12b86a03fbbc0706623f3daef9
0x34629450b8676528bc08d7cc3f3b8f3b
0x346584d2b864bd69bc0aa3ee3f396842
0x34686c7ab8620cd9bc0c6ab83f373a23
0x346b4b2db85f5392bc0e2c193f3504f3
0x346e20ceb85c91aebc0fe7fe3f32c8c9
0x3470ed40b859c74abc119e573f3085bb
0x3473b068b856f481bc134f133f2e3bde
0x34766a2cb854196dbc14fa213f2beb4a
0x34791a6fb851362dbc169f703f299415
0x347bc118b84e4adcbc183ef13f273656
0x347e5e0cb84b5797bc19d8943f24d225
0x34807899b8485c7abc1b6c483f226799
0x3481bd38b84559a5bc1cf9fe3f1ff6cb
0x3482fcd6b8424f34bc1e81a73f1d7fd1
0x34843768b83f3d45bc2003333f1b02c6
0x34856ce1b83c23f6bc217e953f187fc0
0x34869d35b8390367bc22f3bc3f15f6d9
0x3487c858b835dbb5bc24629b3f13682a
0x3488ee3fb832ad01bc25cb243f10d3cd
0x348a0edfb82f776abc272d483f0e39da
0x348b2a2cb82c3b0ebc2888fb3f0b9a6b
0x348c401cb828f80fbc29de2e3f08f59b
0x348d50a4b825ae8cbc2b2cd53f064b82
0x348e5bb8b8225ea6bc2c74e23f039c3d
0x348f6150b81f087ebc2db6493f00e7e4
0x34906161b81bac34bc2ef0fe3efc5d27
0x34915be1b81849e9bc3024f43ef6e0cb
0x349250c6b814e1c0bc31521f3ef15aea
0x34934007b81173d9bc3278753eebcbbb
0x3494299bb80e0056bc3397e93ee63375
0x34950d79b80a875abc34b0713ee0924f
0x3495eb97b8070907bc35c2013edae880
0x3496c3eeb803857fbc36cc903ed53641
0x34979675b7fff9cbbc37d0123ecf7bca
0x34986324b7f8deb9bc38cc7e3ec9b953
0x349929f2b7f1ba0ebc39c1cb3ec3ef15
0x3499eadab7ea8c12bc3aafee3ebe1d4a
0x349aa5d2b7e3550bbc3b96df3eb8442a
0x349b5ad3b7dc1541bc3c76943eb263ef
0x349c09d8b7d4ccfabc3d4f053eac7cd4
0x349cb2d8b7cd7c7fbc3e202a3ea68f12
0x349d55ceb7c62418bc3ee9fa3ea09ae5
0x349df2b4b7bec40dbc3fac6e3e9aa086
0x349e8982b7b75ca8bc40677e3e94a031
0x349f1a33b7afee31bc411b243e8e9a22
0x349fa4c3b7a878f2bc41c7573e888e93
0x34a0292bb7a0fd34bc426c123e827dc0
0x34a0a766b7997b41bc43094f3e78cfcc
0x34a11f6fb791f363bc439f063e6c9a7f
0x34a19142b78a65e5bc442d333e605c13
0x34a1fcdbb782d311bc44b3cf3e541501
0x34a26235b7767663bc4532d63e47c5c2
0x34a2c14cb7673d24bc45aa433e3b6ecf
0x34a31a1db757fafbbc461a113e2f10a2
0x34a36ca4b748b07ebc46823c3e22abb6
0x34a3b8dfb7395e44bc46e2c03e164083
0x34a3fec9b72a04e5bc473b993e09cf86
0x34a43e61b71aa4f8bc478cc33dfab273
0x34a477a4b70b3f15bc47d63c3de1bc2e
0x34a4aa90b6f7a7a7bc4818013dc8bd36
0x34a4d723b6d8c798bc48520f3dafb680
0x34a4fd5ab6b9df2dbc4884643d96a905
0x34a51d36b69aef98bc48aefd3d7b2b74
0x34a536b3b677f413bc48d1db3d48fb30
0x34a549d2b639ff67bc48ecfa3d16c32c
0x34a55692b5f8071ebc49005a3cc90ab0
0x34a55cf2b5780bbdbc490bfa3c490e90</MemoryData>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1296" dst_node_input="a" src_node_id="1295" src_node_output="dout" />
	<Edge criticalPaths="[]" dst_node_id="1298" dst_node_input="a" src_node_id="1295" src_node_output="dout" />
	<Edge criticalPaths="[]" dst_node_id="1300" dst_node_input="a" src_node_id="1295" src_node_output="dout" />
	<Edge criticalPaths="[]" dst_node_id="1302" dst_node_input="a" src_node_id="1295" src_node_output="dout" />
	<Node criticalPaths="[]" group="[]" id="1302" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(128)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>[127:96]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Mem.alloc(Mem.java:63)
maxpower.math.interpolation.CubicSplineBuilder.buildCoefficientRom(CubicSplineBuilder.java:293)
maxpower.math.interpolation.CubicSplineBuilder.access$1(CubicSplineBuilder.java:264)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:90)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:87)
maxpower.math.interpolation.CubicSplineBuilder.build(CubicSplineBuilder.java:239)
maxpower.math.interpolation.InterpolatorBuilder.build(InterpolatorBuilder.java:126)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:32)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>96</Base>
		<Width>32</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1303" dst_node_input="input" src_node_id="1302" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1303" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>&lt;{HWFloat:8, 24}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Mem.alloc(Mem.java:63)
maxpower.math.interpolation.CubicSplineBuilder.buildCoefficientRom(CubicSplineBuilder.java:293)
maxpower.math.interpolation.CubicSplineBuilder.access$1(CubicSplineBuilder.java:264)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:90)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:87)
maxpower.math.interpolation.CubicSplineBuilder.build(CubicSplineBuilder.java:239)
maxpower.math.interpolation.InterpolatorBuilder.build(InterpolatorBuilder.java:126)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:32)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="633" dst_node_input="option0" src_node_id="1303" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="446" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>7.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.addAsRHS(DFEVar.java:965)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:59)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>7.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="447" dst_node_input="a" src_node_id="446" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="442" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeBits(8)" />
		<Text>[30:23]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getExponent(FloatingPoint.java:37)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:59)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>23</Base>
		<Width>8</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="443" dst_node_input="input" src_node_id="442" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="443" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(8)" />
		<Output latency="0" name="output" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:8, 0, UNSIGNED}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getExponent(FloatingPoint.java:38)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:59)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="445" dst_node_input="a" src_node_id="443" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="444" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>127.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getExponent(FloatingPoint.java:41)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:59)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>127.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="445" dst_node_input="b" src_node_id="444" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="445" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSub">
		<Input name="a" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>-</Text>
		<ResourceUsage DSPs="0" FFs="9" FMems="0" LUTs="18" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getExponent(FloatingPoint.java:41)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:59)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="447" dst_node_input="b" src_node_id="445" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="447" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>+</Text>
		<ResourceUsage DSPs="0" FFs="9" FMems="0" LUTs="18" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.addAsRHS(DFEVar.java:965)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:59)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="449" dst_node_input="a" src_node_id="447" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="450" dst_node_input="i" src_node_id="447" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="448" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>0.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.lt(DFEVar.java:900)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:60)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="449" dst_node_input="b" src_node_id="448" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="449" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.lt(DFEVar.java:900)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:60)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="455" dst_node_input="sel" src_node_id="449" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="440" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(5, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:5, 0, UNSIGNED}\n0x00; 0.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:90)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:58)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>00000</Value>
		<HexValue>0x00</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="441" dst_node_input="in0" src_node_id="440" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="436" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[31:31]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getMantissa(FloatingPoint.java:93)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:55)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>31</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="437" dst_node_input="input" src_node_id="436" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="437" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(1)" />
		<Output latency="0" name="output" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:1, 0, UNSIGNED}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getMantissa(FloatingPoint.java:94)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:55)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="439" dst_node_input="sel" src_node_id="437" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="432" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getMantissa(FloatingPoint.java:89)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:55)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="433" dst_node_input="in0" src_node_id="432" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="429" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeBits(31)" />
		<Text>[30:0]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getMantissa(FloatingPoint.java:81)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:55)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>0</Base>
		<Width>31</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="431" dst_node_input="a" src_node_id="429" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="430" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>0.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getMantissa(FloatingPoint.java:82)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:55)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="431" dst_node_input="b" src_node_id="430" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="431" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeNeq">
		<Input name="a" type="dfeBits(31)" />
		<Input name="b" type="dfeBits(31)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>!=</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getMantissa(FloatingPoint.java:82)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:55)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="433" dst_node_input="in1" src_node_id="431" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="433" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(2)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getMantissa(FloatingPoint.java:89)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:55)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="434" dst_node_input="in0" src_node_id="433" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="428" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeBits(23)" />
		<Text>[22:0]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getMantissa(FloatingPoint.java:77)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:55)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>0</Base>
		<Width>23</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="434" dst_node_input="in1" src_node_id="428" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="434" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(2)" />
		<Input name="in1" type="dfeBits(23)" />
		<Output latency="0" name="result" type="dfeBits(25)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getMantissa(FloatingPoint.java:91)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:55)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="435" dst_node_input="input" src_node_id="434" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="435" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(25)" />
		<Output latency="0" name="output" type="dfeOffsetFix(25, -23, TWOSCOMPLEMENT)" />
		<Text>&lt;{HWOffsetFix:25, -23, TWOSCOMPLEMENT}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getMantissa(FloatingPoint.java:92)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:55)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="438" dst_node_input="a" src_node_id="435" src_node_output="output" />
	<Edge criticalPaths="[]" dst_node_id="439" dst_node_input="option0" src_node_id="435" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="438" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeNeg">
		<Input name="a" type="dfeOffsetFix(25, -23, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(25, -23, TWOSCOMPLEMENT)" />
		<Text>(-)</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getMantissa(FloatingPoint.java:95)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:55)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="439" dst_node_input="option1" src_node_id="438" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="439" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(25, -23, TWOSCOMPLEMENT)" />
		<Input name="option1" type="dfeOffsetFix(25, -23, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(25, -23, TWOSCOMPLEMENT)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="25" FMems="0" LUTs="25" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getMantissa(FloatingPoint.java:95)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:55)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="441" dst_node_input="in1" src_node_id="439" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="441" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeOffsetFix(5, 0, UNSIGNED)" />
		<Input name="in1" type="dfeOffsetFix(25, -23, TWOSCOMPLEMENT)" />
		<Output latency="0" name="result" type="dfeBits(30)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:58)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="451" dst_node_input="datain" src_node_id="441" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="450" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(5, 0, UNSIGNED)" />
		<Text>NodeCast
{HWOffsetFix:9, 0, TWOSCOMPLEMENT} 
-&gt;
 {HWOffsetFix:5, 0, UNSIGNED}</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:181)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:61)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="451" dst_node_input="shift" src_node_id="450" src_node_output="o" />
	<Node criticalPaths="[]" group="[]" id="451" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeShift">
		<Input name="datain" type="dfeBits(30)" />
		<Input name="shift" type="dfeOffsetFix(5, 0, UNSIGNED)" />
		<Output latency="4" name="dataout" type="dfeBits(30)" />
		<Text>&lt;&lt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.shiftLeft(DFEVar.java:219)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:62)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Direction>Left</Direction>
		<Circular>false</Circular>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="452" dst_node_input="a" src_node_id="451" src_node_output="dataout" />
	<Node criticalPaths="[]" group="[]" id="452" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(30)" />
		<Output latency="0" name="result" type="dfeBits(7)" />
		<Text>[29:23]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:344)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:63)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>23</Base>
		<Width>7</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="453" dst_node_input="input" src_node_id="452" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="453" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(7)" />
		<Output latency="0" name="output" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:7, 0, UNSIGNED}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:172)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:64)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="455" dst_node_input="option0" src_node_id="453" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="454" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:7, 0, UNSIGNED}\n0x00; 0.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1228)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:65)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0000000</Value>
		<HexValue>0x00</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="455" dst_node_input="option1" src_node_id="454" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="455" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Input name="option1" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="7" FMems="0" LUTs="7" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1228)
maxpower.fmem.FloatingPointAddressGenerator.getAddress(FloatingPointAddressGenerator.java:65)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:128)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1304" dst_node_input="addr" src_node_id="455" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1304" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeROM">
		<Input name="addr" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Output latency="2" name="dout" type="dfeBits(128)" />
		<Text>ROM</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="4" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Mem.alloc(Mem.java:63)
maxpower.math.interpolation.CubicSplineBuilder.buildCoefficientRom(CubicSplineBuilder.java:293)
maxpower.math.interpolation.CubicSplineBuilder.access$1(CubicSplineBuilder.java:264)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:99)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:87)
maxpower.math.interpolation.CubicSplineBuilder.build(CubicSplineBuilder.java:239)
maxpower.math.interpolation.InterpolatorBuilder.build(InterpolatorBuilder.java:126)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:32)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Depth>128</Depth>
		<MemoryData>0xb4a55cf2aca335983c490fdb00000000
0xb4a55692b5780c603c490bfa3c490e90
0xb4a549d2b5f807703c49005a3cc90ab0
0xb4a536b3b639ff8f3c48ecfa3d16c32c
0xb4a51d36b677f43b3c48d1db3d48fb30
0xb4a4fd5ab69aefac3c48aefd3d7b2b74
0xb4a4d723b6b9df413c4884643d96a905
0xb4a4aa90b6d8c7ac3c48520f3dafb680
0xb4a477a4b6f7a7bc3c4818013dc8bd36
0xb4a43e61b70b3f1f3c47d63c3de1bc2e
0xb4a3fec9b71aa5033c478cc33dfab273
0xb4a3b8dfb72a04f03c473b993e09cf86
0xb4a36ca5b7395e4f3c46e2c03e164083
0xb4a31a1db748b0883c46823c3e22abb6
0xb4a2c14cb757fb053c461a113e2f10a2
0xb4a26235b7673d2e3c45aa433e3b6ecf
0xb4a1fcdbb776766d3c4532d63e47c5c2
0xb4a19142b782d3163c44b3cf3e541501
0xb4a11f6fb78a65ea3c442d333e605c13
0xb4a0a766b791f3683c439f063e6c9a7f
0xb4a0292bb7997b463c43094f3e78cfcc
0xb49fa4c3b7a0fd393c426c123e827dc0
0xb49f1a33b7a878f73c41c7573e888e93
0xb49e8982b7afee363c411b243e8e9a22
0xb49df2b4b7b75cad3c40677e3e94a031
0xb49d55ceb7bec4123c3fac6e3e9aa086
0xb49cb2d8b7c6241d3c3ee9fa3ea09ae5
0xb49c09d8b7cd7c843c3e202a3ea68f12
0xb49b5ad3b7d4ccff3c3d4f053eac7cd4
0xb49aa5d2b7dc15453c3c76943eb263ef
0xb499eadab7e355103c3b96df3eb8442a
0xb49929f2b7ea8c173c3aafee3ebe1d4a
0xb4986324b7f1ba133c39c1cb3ec3ef15
0xb4979675b7f8debd3c38cc7e3ec9b953
0xb496c3eeb7fff9cf3c37d0123ecf7bca
0xb495eb97b80385823c36cc903ed53641
0xb4950d79b80709093c35c2013edae880
0xb494299bb80a875d3c34b0713ee0924f
0xb4934007b80e00583c3397e93ee63375
0xb49250c6b81173db3c3278753eebcbbb
0xb4915be1b814e1c23c31521f3ef15aea
0xb4906161b81849eb3c3024f43ef6e0cb
0xb48f6150b81bac363c2ef0fe3efc5d27
0xb48e5bb8b81f08803c2db6493f00e7e4
0xb48d50a4b8225ea83c2c74e23f039c3d
0xb48c401cb825ae8e3c2b2cd53f064b82
0xb48b2a2cb828f8113c29de2e3f08f59b
0xb48a0edfb82c3b103c2888fb3f0b9a6b
0xb488ee3fb82f776c3c272d483f0e39da
0xb487c858b832ad033c25cb243f10d3cd
0xb4869d35b835dbb73c24629b3f13682a
0xb4856ce1b83903693c22f3bc3f15f6d9
0xb4843768b83c23f83c217e953f187fc0
0xb482fcd6b83f3d473c2003333f1b02c6
0xb481bd38b8424f363c1e81a73f1d7fd1
0xb4807899b84559a73c1cf9fe3f1ff6cb
0xb47e5e0cb8485c7c3c1b6c483f226799
0xb47bc118b84b57993c19d8943f24d225
0xb4791a6fb84e4ade3c183ef13f273656
0xb4766a2cb851362f3c169f703f299415
0xb473b068b854196f3c14fa213f2beb4a
0xb470ed40b856f4823c134f133f2e3bde
0xb46e20ceb859c74c3c119e573f3085bb
0xb46b4b2db85c91b03c0fe7fe3f32c8c9
0xb4686c7ab85f53943c0e2c193f3504f3
0xb46584d2b8620cdb3c0c6ab83f373a23
0xb4629450b864bd6b3c0aa3ee3f396842
0xb45f9b12b867652a3c08d7cc3f3b8f3b
0xb45c9935b86a03fd3c0706623f3daef9
0xb4598ed7b86c99ca3c052fc53f3fc767
0xb4567c16b86f26783c0354043f41d870
0xb4536110b871a9ee3c0173343f43e200
0xb4503de3b87424133bff1acc3f45e403
0xb44d12b0b87694ce3bfb455a3f47de65
0xb449df94b878fc083bf766393f49d112
0xb446a4b0b87b59a83bf37d8d3f4bbbf8
0xb4436224b87dad983bef8b7f3f4d9f02
0xb440180fb87ff7bf3beb90343f4f7a1f
0xb43cc692b8811c053be78bd53f514d3d
0xb4396dcfb882372f3be37e883f531849
0xb4360de5b8834d553bdf68763f54db31
0xb432a6f6b8845e6a3bdb49c73f5695e5
0xb42f3924b8856a653bd722a43f584853
0xb42bc491b886713c3bd2f3353f59f26a
0xb428495fb88772e33bcebba53f5b941a
0xb424c7afb8886f523bca7c1c3f5d2d53
0xb4213fa6b889667e3bc634c53f5ebe05
0xb41db165b88a585e3bc1e5c93f604621
0xb41a1d0fb88b44e93bbd8f543f61c598
0xb41682c9b88c2c153bb931903f633c5a
0xb412e2b5b88d0dda3bb4cca83f64aa59
0xb40f3cf7b88dea2e3bb060c83f660f88
0xb40b91b4b88ec10a3babee1b3f676bd8
0xb407e10fb88f92653ba774ce3f68bf3c
0xb4042b2db8905e373ba2f50b3f6a09a7
0xb4007033b89124793b9e6f003f6b4b0c
0xb3f9608ab891e5223b99e2da3f6c835e
0xb3f1d711b892a02a3b9550c53f6db293
0xb3ea4446b893558c3b90b8ee3f6ed89e
0xb3e2a872b89405403b8c1b833f6ff573
0xb3db03e1b894af3f3b8778b13f710908
0xb3d356deb89553823b82d0a63f721352
0xb3cba1b6b895f2033b7c471f3f731447
0xb3c3e4b4b8968abd3b72e3393f740bdd
0xb3bc2025b8971da93b6975f63f74fa0b
0xb3b45455b897aac13b5fffb33f75dec6
0xb3ac8191b89832013b5680cd3f76ba07
0xb3a4a826b898b3633b4cf9a23f778bc5
0xb39cc863b8992ee13b436a903f7853f8
0xb394e294b899a4783b39d3f53f791298
0xb38cf708b89a14223b3036303f79c79d
0xb385060cb89a7ddb3b2691a03f7a7302
0xb37a1fe0b89ae1a03b1ce6a43f7b14be
0xb36a2a03b89b3f6c3b13359c3f7baccd
0xb35a2b1eb89b973c3b097ee73f7c3b28
0xb34a23d1b89be90d3aff85c93f7cbfc9
0xb33a14b8b89c34da3aec03eb3f7d3aac
0xb329fe73b89c7aa23ad878f33f7dabcc
0xb319e1a0b89cba623ac4e5a33f7e1324
0xb309bedeb89cf4173ab14abb3f7e70b0
0xb2f32d9ab89d27be3a9da8fe3f7ec46d
0xb2d2d418b89d55573a8a012d3f7f0e58
0xb2b27275b89d7cdf3a6ca8123f7f4e6d
0xb29209f1b89d9e543a4544ac3f7f84ab
0xb2633797b89db9b63a1dd9ab3f7fb10f
0xb2225289b89dcf0339ecd1273f7fd397
0xb1c2ce73b89dde3b399de5d73f7fec43
0xb101e0a3b89de75d391de8e33f7ffb11</MemoryData>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1305" dst_node_input="a" src_node_id="1304" src_node_output="dout" />
	<Edge criticalPaths="[]" dst_node_id="1307" dst_node_input="a" src_node_id="1304" src_node_output="dout" />
	<Edge criticalPaths="[]" dst_node_id="1309" dst_node_input="a" src_node_id="1304" src_node_output="dout" />
	<Edge criticalPaths="[]" dst_node_id="1311" dst_node_input="a" src_node_id="1304" src_node_output="dout" />
	<Node criticalPaths="[]" group="[]" id="1311" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(128)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>[127:96]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Mem.alloc(Mem.java:63)
maxpower.math.interpolation.CubicSplineBuilder.buildCoefficientRom(CubicSplineBuilder.java:293)
maxpower.math.interpolation.CubicSplineBuilder.access$1(CubicSplineBuilder.java:264)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:99)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:87)
maxpower.math.interpolation.CubicSplineBuilder.build(CubicSplineBuilder.java:239)
maxpower.math.interpolation.InterpolatorBuilder.build(InterpolatorBuilder.java:126)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:32)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>96</Base>
		<Width>32</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1312" dst_node_input="input" src_node_id="1311" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1312" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>&lt;{HWFloat:8, 24}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Mem.alloc(Mem.java:63)
maxpower.math.interpolation.CubicSplineBuilder.buildCoefficientRom(CubicSplineBuilder.java:293)
maxpower.math.interpolation.CubicSplineBuilder.access$1(CubicSplineBuilder.java:264)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:99)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:87)
maxpower.math.interpolation.CubicSplineBuilder.build(CubicSplineBuilder.java:239)
maxpower.math.interpolation.InterpolatorBuilder.build(InterpolatorBuilder.java:126)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:32)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="633" dst_node_input="option1" src_node_id="1312" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="633" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeBits(1)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="32" FMems="0" LUTs="32" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Control.mux(Control.java:124)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:134)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="635" dst_node_input="a" src_node_id="633" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="255" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>128.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:1035)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>128.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="256" dst_node_input="b" src_node_id="255" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="256" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<ResourceUsage DSPs="0" FFs="256" FMems="0" LUTs="288" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:1035)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="257" dst_node_input="a" src_node_id="256" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="262" dst_node_input="a" src_node_id="256" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="264" dst_node_input="a" src_node_id="256" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="264" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[31:31]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getSignBit(FloatingPoint.java:264)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:36)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>31</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="425" dst_node_input="sel" src_node_id="264" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="257" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeBits(8)" />
		<Text>[30:23]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getExponent(FloatingPoint.java:37)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:34)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>23</Base>
		<Width>8</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="258" dst_node_input="input" src_node_id="257" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="258" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(8)" />
		<Output latency="0" name="output" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:8, 0, UNSIGNED}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getExponent(FloatingPoint.java:38)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:34)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="260" dst_node_input="a" src_node_id="258" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="259" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>127.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getExponent(FloatingPoint.java:41)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:34)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>127.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="260" dst_node_input="b" src_node_id="259" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="260" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSub">
		<Input name="a" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>-</Text>
		<ResourceUsage DSPs="0" FFs="9" FMems="0" LUTs="18" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getExponent(FloatingPoint.java:41)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:34)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="266" dst_node_input="a" src_node_id="260" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="268" dst_node_input="a" src_node_id="260" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="272" dst_node_input="a" src_node_id="260" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="273" dst_node_input="a" src_node_id="260" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="280" dst_node_input="b" src_node_id="260" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="419" dst_node_input="i" src_node_id="260" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="265" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>23.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:80)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:42)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>23.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="266" dst_node_input="b" src_node_id="265" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="266" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeGte">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;=</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.gte(DFEVar.java:795)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:42)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="269" dst_node_input="a" src_node_id="266" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="267" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>-24.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:80)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:43)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>-24.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="268" dst_node_input="b" src_node_id="267" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="268" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLte">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;=</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.lte(DFEVar.java:750)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:43)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="269" dst_node_input="b" src_node_id="268" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="269" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeOr">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>|</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.or(DFEVar.java:469)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:44)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="421" dst_node_input="in0" src_node_id="269" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="271" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>-1.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.lte(DFEVar.java:765)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:49)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>-1.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="272" dst_node_input="b" src_node_id="271" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="272" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLte">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;=</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.lte(DFEVar.java:765)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:49)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="421" dst_node_input="in1" src_node_id="272" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="421" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="in1" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(2)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:61)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="422" dst_node_input="input" src_node_id="421" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="422" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(2)" />
		<Output latency="0" name="output" type="dfeOffsetFix(2, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:2, 0, UNSIGNED}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:172)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:61)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="423" dst_node_input="sel" src_node_id="422" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="413" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>22.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>22.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="414" dst_node_input="a" src_node_id="413" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="279" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>23.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.subAsRHS(DFEVar.java:1010)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:55)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>23.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="280" dst_node_input="a" src_node_id="279" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="280" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSub">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>-</Text>
		<ResourceUsage DSPs="0" FFs="9" FMems="0" LUTs="18" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.subAsRHS(DFEVar.java:1010)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:55)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="282" dst_node_input="b" src_node_id="280" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="288" dst_node_input="b" src_node_id="280" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="294" dst_node_input="b" src_node_id="280" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="300" dst_node_input="b" src_node_id="280" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="306" dst_node_input="b" src_node_id="280" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="312" dst_node_input="b" src_node_id="280" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="318" dst_node_input="b" src_node_id="280" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="324" dst_node_input="b" src_node_id="280" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="330" dst_node_input="b" src_node_id="280" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="336" dst_node_input="b" src_node_id="280" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="342" dst_node_input="b" src_node_id="280" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="348" dst_node_input="b" src_node_id="280" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="354" dst_node_input="b" src_node_id="280" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="360" dst_node_input="b" src_node_id="280" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="366" dst_node_input="b" src_node_id="280" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="372" dst_node_input="b" src_node_id="280" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="378" dst_node_input="b" src_node_id="280" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="384" dst_node_input="b" src_node_id="280" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="390" dst_node_input="b" src_node_id="280" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="396" dst_node_input="b" src_node_id="280" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="402" dst_node_input="b" src_node_id="280" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="408" dst_node_input="b" src_node_id="280" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="414" dst_node_input="b" src_node_id="280" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="414" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="417" dst_node_input="sel" src_node_id="414" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="416" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="417" dst_node_input="option0" src_node_id="416" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="261" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x1; 1.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:90)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:35)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>1</Value>
		<HexValue>0x1</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="263" dst_node_input="in0" src_node_id="261" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="262" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeBits(23)" />
		<Text>[22:0]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getMantissaBits(FloatingPoint.java:233)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:35)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>0</Base>
		<Width>23</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="263" dst_node_input="in1" src_node_id="262" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="263" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="in1" type="dfeBits(23)" />
		<Output latency="0" name="result" type="dfeBits(24)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:35)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="277" dst_node_input="datain" src_node_id="263" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="283" dst_node_input="a" src_node_id="263" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="289" dst_node_input="a" src_node_id="263" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="295" dst_node_input="a" src_node_id="263" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="301" dst_node_input="a" src_node_id="263" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="307" dst_node_input="a" src_node_id="263" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="313" dst_node_input="a" src_node_id="263" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="319" dst_node_input="a" src_node_id="263" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="325" dst_node_input="a" src_node_id="263" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="331" dst_node_input="a" src_node_id="263" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="337" dst_node_input="a" src_node_id="263" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="343" dst_node_input="a" src_node_id="263" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="349" dst_node_input="a" src_node_id="263" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="355" dst_node_input="a" src_node_id="263" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="361" dst_node_input="a" src_node_id="263" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="367" dst_node_input="a" src_node_id="263" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="373" dst_node_input="a" src_node_id="263" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="379" dst_node_input="a" src_node_id="263" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="385" dst_node_input="a" src_node_id="263" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="391" dst_node_input="a" src_node_id="263" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="397" dst_node_input="a" src_node_id="263" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="403" dst_node_input="a" src_node_id="263" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="409" dst_node_input="a" src_node_id="263" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="415" dst_node_input="a" src_node_id="263" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="415" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[22:22]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>22</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="417" dst_node_input="option1" src_node_id="415" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="417" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="418" dst_node_input="in0" src_node_id="417" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="407" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>21.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>21.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="408" dst_node_input="a" src_node_id="407" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="408" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="411" dst_node_input="sel" src_node_id="408" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="410" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="411" dst_node_input="option0" src_node_id="410" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="409" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[21:21]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>21</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="411" dst_node_input="option1" src_node_id="409" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="411" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="412" dst_node_input="in0" src_node_id="411" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="401" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>20.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>20.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="402" dst_node_input="a" src_node_id="401" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="402" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="405" dst_node_input="sel" src_node_id="402" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="404" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="405" dst_node_input="option0" src_node_id="404" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="403" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[20:20]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>20</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="405" dst_node_input="option1" src_node_id="403" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="405" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="406" dst_node_input="in0" src_node_id="405" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="395" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>19.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>19.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="396" dst_node_input="a" src_node_id="395" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="396" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="399" dst_node_input="sel" src_node_id="396" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="398" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="399" dst_node_input="option0" src_node_id="398" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="397" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[19:19]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>19</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="399" dst_node_input="option1" src_node_id="397" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="399" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="400" dst_node_input="in0" src_node_id="399" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="389" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>18.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>18.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="390" dst_node_input="a" src_node_id="389" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="390" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="393" dst_node_input="sel" src_node_id="390" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="392" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="393" dst_node_input="option0" src_node_id="392" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="391" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[18:18]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>18</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="393" dst_node_input="option1" src_node_id="391" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="393" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="394" dst_node_input="in0" src_node_id="393" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="383" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>17.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>17.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="384" dst_node_input="a" src_node_id="383" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="384" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="387" dst_node_input="sel" src_node_id="384" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="386" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="387" dst_node_input="option0" src_node_id="386" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="385" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[17:17]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>17</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="387" dst_node_input="option1" src_node_id="385" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="387" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="388" dst_node_input="in0" src_node_id="387" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="377" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>16.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>16.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="378" dst_node_input="a" src_node_id="377" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="378" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="381" dst_node_input="sel" src_node_id="378" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="380" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="381" dst_node_input="option0" src_node_id="380" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="379" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[16:16]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>16</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="381" dst_node_input="option1" src_node_id="379" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="381" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="382" dst_node_input="in0" src_node_id="381" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="371" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>15.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>15.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="372" dst_node_input="a" src_node_id="371" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="372" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="375" dst_node_input="sel" src_node_id="372" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="374" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="375" dst_node_input="option0" src_node_id="374" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="373" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[15:15]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>15</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="375" dst_node_input="option1" src_node_id="373" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="375" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="376" dst_node_input="in0" src_node_id="375" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="365" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>14.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>14.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="366" dst_node_input="a" src_node_id="365" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="366" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="369" dst_node_input="sel" src_node_id="366" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="368" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="369" dst_node_input="option0" src_node_id="368" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="367" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[14:14]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>14</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="369" dst_node_input="option1" src_node_id="367" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="369" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="370" dst_node_input="in0" src_node_id="369" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="359" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>13.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>13.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="360" dst_node_input="a" src_node_id="359" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="360" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="363" dst_node_input="sel" src_node_id="360" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="362" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="363" dst_node_input="option0" src_node_id="362" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="361" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[13:13]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>13</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="363" dst_node_input="option1" src_node_id="361" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="363" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="364" dst_node_input="in0" src_node_id="363" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="353" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>12.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>12.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="354" dst_node_input="a" src_node_id="353" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="354" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="357" dst_node_input="sel" src_node_id="354" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="356" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="357" dst_node_input="option0" src_node_id="356" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="355" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[12:12]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>12</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="357" dst_node_input="option1" src_node_id="355" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="357" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="358" dst_node_input="in0" src_node_id="357" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="347" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>11.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>11.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="348" dst_node_input="a" src_node_id="347" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="348" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="351" dst_node_input="sel" src_node_id="348" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="350" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="351" dst_node_input="option0" src_node_id="350" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="349" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[11:11]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>11</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="351" dst_node_input="option1" src_node_id="349" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="351" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="352" dst_node_input="in0" src_node_id="351" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="341" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>10.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>10.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="342" dst_node_input="a" src_node_id="341" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="342" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="345" dst_node_input="sel" src_node_id="342" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="344" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="345" dst_node_input="option0" src_node_id="344" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="343" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[10:10]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>10</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="345" dst_node_input="option1" src_node_id="343" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="345" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="346" dst_node_input="in0" src_node_id="345" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="335" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>9.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>9.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="336" dst_node_input="a" src_node_id="335" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="336" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="339" dst_node_input="sel" src_node_id="336" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="338" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="339" dst_node_input="option0" src_node_id="338" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="337" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[9:9]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>9</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="339" dst_node_input="option1" src_node_id="337" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="339" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="340" dst_node_input="in0" src_node_id="339" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="329" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>8.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>8.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="330" dst_node_input="a" src_node_id="329" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="330" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="333" dst_node_input="sel" src_node_id="330" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="332" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="333" dst_node_input="option0" src_node_id="332" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="331" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[8:8]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>8</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="333" dst_node_input="option1" src_node_id="331" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="333" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="334" dst_node_input="in0" src_node_id="333" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="323" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>7.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>7.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="324" dst_node_input="a" src_node_id="323" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="324" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="327" dst_node_input="sel" src_node_id="324" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="326" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="327" dst_node_input="option0" src_node_id="326" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="325" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[7:7]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>7</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="327" dst_node_input="option1" src_node_id="325" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="327" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="328" dst_node_input="in0" src_node_id="327" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="317" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>6.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>6.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="318" dst_node_input="a" src_node_id="317" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="318" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="321" dst_node_input="sel" src_node_id="318" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="320" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="321" dst_node_input="option0" src_node_id="320" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="319" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[6:6]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>6</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="321" dst_node_input="option1" src_node_id="319" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="321" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="322" dst_node_input="in0" src_node_id="321" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="311" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>5.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>5.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="312" dst_node_input="a" src_node_id="311" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="312" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="315" dst_node_input="sel" src_node_id="312" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="314" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="315" dst_node_input="option0" src_node_id="314" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="313" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[5:5]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>5</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="315" dst_node_input="option1" src_node_id="313" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="315" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="316" dst_node_input="in0" src_node_id="315" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="305" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>4.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>4.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="306" dst_node_input="a" src_node_id="305" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="306" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="309" dst_node_input="sel" src_node_id="306" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="308" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="309" dst_node_input="option0" src_node_id="308" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="307" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[4:4]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>4</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="309" dst_node_input="option1" src_node_id="307" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="309" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="310" dst_node_input="in0" src_node_id="309" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="299" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>3.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>3.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="300" dst_node_input="a" src_node_id="299" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="300" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="303" dst_node_input="sel" src_node_id="300" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="302" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="303" dst_node_input="option0" src_node_id="302" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="301" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[3:3]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>3</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="303" dst_node_input="option1" src_node_id="301" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="303" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="304" dst_node_input="in0" src_node_id="303" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="293" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>2.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>2.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="294" dst_node_input="a" src_node_id="293" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="294" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="297" dst_node_input="sel" src_node_id="294" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="296" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="297" dst_node_input="option0" src_node_id="296" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="295" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[2:2]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>2</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="297" dst_node_input="option1" src_node_id="295" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="297" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="298" dst_node_input="in0" src_node_id="297" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="287" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>1.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>1.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="288" dst_node_input="a" src_node_id="287" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="288" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="291" dst_node_input="sel" src_node_id="288" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="290" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="291" dst_node_input="option0" src_node_id="290" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="289" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[1:1]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>1</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="291" dst_node_input="option1" src_node_id="289" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="291" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="292" dst_node_input="in0" src_node_id="291" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="281" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>0.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="282" dst_node_input="a" src_node_id="281" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="282" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="285" dst_node_input="sel" src_node_id="282" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="284" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="285" dst_node_input="option0" src_node_id="284" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="283" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[0:0]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>0</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="285" dst_node_input="option1" src_node_id="283" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="285" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="286" dst_node_input="in0" src_node_id="285" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="278" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x0; 0.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:90)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:54)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="286" dst_node_input="in1" src_node_id="278" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="286" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(2)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="292" dst_node_input="in1" src_node_id="286" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="292" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(2)" />
		<Output latency="0" name="result" type="dfeBits(3)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="298" dst_node_input="in1" src_node_id="292" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="298" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(3)" />
		<Output latency="0" name="result" type="dfeBits(4)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="304" dst_node_input="in1" src_node_id="298" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="304" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(4)" />
		<Output latency="0" name="result" type="dfeBits(5)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="310" dst_node_input="in1" src_node_id="304" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="310" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(5)" />
		<Output latency="0" name="result" type="dfeBits(6)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="316" dst_node_input="in1" src_node_id="310" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="316" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(6)" />
		<Output latency="0" name="result" type="dfeBits(7)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="322" dst_node_input="in1" src_node_id="316" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="322" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(7)" />
		<Output latency="0" name="result" type="dfeBits(8)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="328" dst_node_input="in1" src_node_id="322" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="328" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(8)" />
		<Output latency="0" name="result" type="dfeBits(9)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="334" dst_node_input="in1" src_node_id="328" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="334" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(9)" />
		<Output latency="0" name="result" type="dfeBits(10)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="340" dst_node_input="in1" src_node_id="334" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="340" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(10)" />
		<Output latency="0" name="result" type="dfeBits(11)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="346" dst_node_input="in1" src_node_id="340" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="346" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(11)" />
		<Output latency="0" name="result" type="dfeBits(12)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="352" dst_node_input="in1" src_node_id="346" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="352" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(12)" />
		<Output latency="0" name="result" type="dfeBits(13)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="358" dst_node_input="in1" src_node_id="352" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="358" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(13)" />
		<Output latency="0" name="result" type="dfeBits(14)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="364" dst_node_input="in1" src_node_id="358" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="364" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(14)" />
		<Output latency="0" name="result" type="dfeBits(15)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="370" dst_node_input="in1" src_node_id="364" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="370" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(15)" />
		<Output latency="0" name="result" type="dfeBits(16)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="376" dst_node_input="in1" src_node_id="370" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="376" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(16)" />
		<Output latency="0" name="result" type="dfeBits(17)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="382" dst_node_input="in1" src_node_id="376" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="382" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(17)" />
		<Output latency="0" name="result" type="dfeBits(18)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="388" dst_node_input="in1" src_node_id="382" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="388" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(18)" />
		<Output latency="0" name="result" type="dfeBits(19)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="394" dst_node_input="in1" src_node_id="388" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="394" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(19)" />
		<Output latency="0" name="result" type="dfeBits(20)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="400" dst_node_input="in1" src_node_id="394" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="400" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(20)" />
		<Output latency="0" name="result" type="dfeBits(21)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="406" dst_node_input="in1" src_node_id="400" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="406" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(21)" />
		<Output latency="0" name="result" type="dfeBits(22)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="412" dst_node_input="in1" src_node_id="406" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="412" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(22)" />
		<Output latency="0" name="result" type="dfeBits(23)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="418" dst_node_input="in1" src_node_id="412" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="418" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(23)" />
		<Output latency="0" name="result" type="dfeBits(24)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="420" dst_node_input="datain" src_node_id="418" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="419" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(5, 0, UNSIGNED)" />
		<Text>NodeCast
{HWOffsetFix:9, 0, TWOSCOMPLEMENT} 
-&gt;
 {HWOffsetFix:5, 0, UNSIGNED}</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:181)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:59)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="420" dst_node_input="shift" src_node_id="419" src_node_output="o" />
	<Node criticalPaths="[]" group="[]" id="420" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeShift">
		<Input name="datain" type="dfeBits(24)" />
		<Input name="shift" type="dfeOffsetFix(5, 0, UNSIGNED)" />
		<Output latency="4" name="dataout" type="dfeBits(24)" />
		<Text>&lt;&lt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.shiftLeft(DFEVar.java:219)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:59)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Direction>Left</Direction>
		<Circular>false</Circular>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="423" dst_node_input="option0" src_node_id="420" src_node_output="dataout" />
	<Node criticalPaths="[]" group="[]" id="273" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeNeg">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>(-)</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.neg(DFEVar.java:1119)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:50)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="275" dst_node_input="a" src_node_id="273" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="274" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>1.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:990)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:50)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>1.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="275" dst_node_input="b" src_node_id="274" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="275" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSub">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>-</Text>
		<ResourceUsage DSPs="0" FFs="9" FMems="0" LUTs="18" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:990)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:50)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="276" dst_node_input="i" src_node_id="275" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="276" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(5, 0, UNSIGNED)" />
		<Text>NodeCast
{HWOffsetFix:9, 0, TWOSCOMPLEMENT} 
-&gt;
 {HWOffsetFix:5, 0, UNSIGNED}</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:181)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:50)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="277" dst_node_input="shift" src_node_id="276" src_node_output="o" />
	<Node criticalPaths="[]" group="[]" id="277" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeShift">
		<Input name="datain" type="dfeBits(24)" />
		<Input name="shift" type="dfeOffsetFix(5, 0, UNSIGNED)" />
		<Output latency="4" name="dataout" type="dfeBits(24)" />
		<Text>&gt;&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.shiftRight(DFEVar.java:243)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:50)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Direction>Right</Direction>
		<Circular>false</Circular>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="423" dst_node_input="option1" src_node_id="277" src_node_output="dataout" />
	<Node criticalPaths="[]" group="[]" id="270" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>0.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:80)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:45)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="423" dst_node_input="option2" src_node_id="270" src_node_output="value" />
	<Edge criticalPaths="[]" dst_node_id="423" dst_node_input="option3" src_node_id="270" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="423" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(2, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(24)" />
		<Input name="option1" type="dfeBits(24)" />
		<Input name="option2" type="dfeBits(24)" />
		<Input name="option3" type="dfeBits(24)" />
		<Output latency="1" name="result" type="dfeBits(24)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="24" FMems="0" LUTs="24" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Control.mux(Control.java:112)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:62)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="424" dst_node_input="a" src_node_id="423" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="425" dst_node_input="option0" src_node_id="423" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="424" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeNot">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(24)" />
		<Text>~</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.complement(DFEVar.java:1110)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:63)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="425" dst_node_input="option1" src_node_id="424" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="425" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeBits(1)" />
		<Input name="option0" type="dfeBits(24)" />
		<Input name="option1" type="dfeBits(24)" />
		<Output latency="1" name="result" type="dfeBits(24)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="24" FMems="0" LUTs="24" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1187)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:63)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="426" dst_node_input="input" src_node_id="425" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="426" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(24)" />
		<Output latency="0" name="output" type="dfeOffsetFix(24, -24, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:24, -24, UNSIGNED}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:172)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:63)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="427" dst_node_input="i" src_node_id="426" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="427" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(24, -24, UNSIGNED)" />
		<Output latency="7" name="o" type="dfeFloat(8, 24)" />
		<Text>NodeCast
{HWOffsetFix:24, -24, UNSIGNED} 
-&gt;
 {HWFloat:8, 24}</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:181)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="629" dst_node_input="option0" src_node_id="427" src_node_output="o" />
	<Node criticalPaths="[]" group="[]" id="456" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>128.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:1035)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>128.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="457" dst_node_input="b" src_node_id="456" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="457" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<ResourceUsage DSPs="0" FFs="256" FMems="0" LUTs="288" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:1035)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="458" dst_node_input="a" src_node_id="457" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="463" dst_node_input="a" src_node_id="457" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="465" dst_node_input="a" src_node_id="457" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="465" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[31:31]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getSignBit(FloatingPoint.java:264)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:36)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>31</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="626" dst_node_input="sel" src_node_id="465" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="458" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeBits(8)" />
		<Text>[30:23]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getExponent(FloatingPoint.java:37)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:34)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>23</Base>
		<Width>8</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="459" dst_node_input="input" src_node_id="458" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="459" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(8)" />
		<Output latency="0" name="output" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:8, 0, UNSIGNED}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getExponent(FloatingPoint.java:38)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:34)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="461" dst_node_input="a" src_node_id="459" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="460" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>127.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getExponent(FloatingPoint.java:41)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:34)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>127.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="461" dst_node_input="b" src_node_id="460" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="461" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSub">
		<Input name="a" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(7, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>-</Text>
		<ResourceUsage DSPs="0" FFs="9" FMems="0" LUTs="18" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getExponent(FloatingPoint.java:41)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:34)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="467" dst_node_input="a" src_node_id="461" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="469" dst_node_input="a" src_node_id="461" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="473" dst_node_input="a" src_node_id="461" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="474" dst_node_input="a" src_node_id="461" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="481" dst_node_input="b" src_node_id="461" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="620" dst_node_input="i" src_node_id="461" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="466" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>23.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:80)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:42)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>23.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="467" dst_node_input="b" src_node_id="466" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="467" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeGte">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;=</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.gte(DFEVar.java:795)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:42)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="470" dst_node_input="a" src_node_id="467" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="468" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>-24.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:80)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:43)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>-24.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="469" dst_node_input="b" src_node_id="468" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="469" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLte">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;=</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.lte(DFEVar.java:750)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:43)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="470" dst_node_input="b" src_node_id="469" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="470" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeOr">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>|</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.or(DFEVar.java:469)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:44)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="622" dst_node_input="in0" src_node_id="470" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="472" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>-1.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.lte(DFEVar.java:765)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:49)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>-1.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="473" dst_node_input="b" src_node_id="472" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="473" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLte">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;=</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.lte(DFEVar.java:765)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:49)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="622" dst_node_input="in1" src_node_id="473" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="622" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="in1" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(2)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:61)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="623" dst_node_input="input" src_node_id="622" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="623" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(2)" />
		<Output latency="0" name="output" type="dfeOffsetFix(2, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:2, 0, UNSIGNED}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:172)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:61)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="624" dst_node_input="sel" src_node_id="623" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="614" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>22.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>22.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="615" dst_node_input="a" src_node_id="614" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="480" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>23.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.subAsRHS(DFEVar.java:1010)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:55)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>23.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="481" dst_node_input="a" src_node_id="480" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="481" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSub">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>-</Text>
		<ResourceUsage DSPs="0" FFs="9" FMems="0" LUTs="18" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.subAsRHS(DFEVar.java:1010)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:55)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="483" dst_node_input="b" src_node_id="481" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="489" dst_node_input="b" src_node_id="481" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="495" dst_node_input="b" src_node_id="481" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="501" dst_node_input="b" src_node_id="481" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="507" dst_node_input="b" src_node_id="481" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="513" dst_node_input="b" src_node_id="481" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="519" dst_node_input="b" src_node_id="481" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="525" dst_node_input="b" src_node_id="481" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="531" dst_node_input="b" src_node_id="481" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="537" dst_node_input="b" src_node_id="481" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="543" dst_node_input="b" src_node_id="481" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="549" dst_node_input="b" src_node_id="481" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="555" dst_node_input="b" src_node_id="481" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="561" dst_node_input="b" src_node_id="481" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="567" dst_node_input="b" src_node_id="481" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="573" dst_node_input="b" src_node_id="481" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="579" dst_node_input="b" src_node_id="481" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="585" dst_node_input="b" src_node_id="481" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="591" dst_node_input="b" src_node_id="481" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="597" dst_node_input="b" src_node_id="481" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="603" dst_node_input="b" src_node_id="481" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="609" dst_node_input="b" src_node_id="481" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="615" dst_node_input="b" src_node_id="481" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="615" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="618" dst_node_input="sel" src_node_id="615" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="617" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="618" dst_node_input="option0" src_node_id="617" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="462" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x1; 1.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:90)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:35)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>1</Value>
		<HexValue>0x1</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="464" dst_node_input="in0" src_node_id="462" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="463" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeBits(23)" />
		<Text>[22:0]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.FloatingPoint.getMantissaBits(FloatingPoint.java:233)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:35)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>0</Base>
		<Width>23</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="464" dst_node_input="in1" src_node_id="463" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="464" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="in1" type="dfeBits(23)" />
		<Output latency="0" name="result" type="dfeBits(24)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:35)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="478" dst_node_input="datain" src_node_id="464" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="484" dst_node_input="a" src_node_id="464" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="490" dst_node_input="a" src_node_id="464" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="496" dst_node_input="a" src_node_id="464" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="502" dst_node_input="a" src_node_id="464" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="508" dst_node_input="a" src_node_id="464" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="514" dst_node_input="a" src_node_id="464" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="520" dst_node_input="a" src_node_id="464" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="526" dst_node_input="a" src_node_id="464" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="532" dst_node_input="a" src_node_id="464" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="538" dst_node_input="a" src_node_id="464" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="544" dst_node_input="a" src_node_id="464" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="550" dst_node_input="a" src_node_id="464" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="556" dst_node_input="a" src_node_id="464" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="562" dst_node_input="a" src_node_id="464" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="568" dst_node_input="a" src_node_id="464" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="574" dst_node_input="a" src_node_id="464" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="580" dst_node_input="a" src_node_id="464" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="586" dst_node_input="a" src_node_id="464" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="592" dst_node_input="a" src_node_id="464" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="598" dst_node_input="a" src_node_id="464" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="604" dst_node_input="a" src_node_id="464" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="610" dst_node_input="a" src_node_id="464" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="616" dst_node_input="a" src_node_id="464" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="616" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[22:22]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>22</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="618" dst_node_input="option1" src_node_id="616" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="618" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="619" dst_node_input="in0" src_node_id="618" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="608" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>21.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>21.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="609" dst_node_input="a" src_node_id="608" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="609" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="612" dst_node_input="sel" src_node_id="609" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="611" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="612" dst_node_input="option0" src_node_id="611" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="610" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[21:21]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>21</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="612" dst_node_input="option1" src_node_id="610" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="612" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="613" dst_node_input="in0" src_node_id="612" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="602" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>20.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>20.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="603" dst_node_input="a" src_node_id="602" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="603" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="606" dst_node_input="sel" src_node_id="603" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="605" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="606" dst_node_input="option0" src_node_id="605" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="604" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[20:20]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>20</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="606" dst_node_input="option1" src_node_id="604" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="606" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="607" dst_node_input="in0" src_node_id="606" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="596" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>19.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>19.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="597" dst_node_input="a" src_node_id="596" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="597" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="600" dst_node_input="sel" src_node_id="597" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="599" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="600" dst_node_input="option0" src_node_id="599" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="598" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[19:19]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>19</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="600" dst_node_input="option1" src_node_id="598" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="600" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="601" dst_node_input="in0" src_node_id="600" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="590" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>18.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>18.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="591" dst_node_input="a" src_node_id="590" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="591" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="594" dst_node_input="sel" src_node_id="591" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="593" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="594" dst_node_input="option0" src_node_id="593" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="592" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[18:18]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>18</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="594" dst_node_input="option1" src_node_id="592" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="594" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="595" dst_node_input="in0" src_node_id="594" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="584" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>17.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>17.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="585" dst_node_input="a" src_node_id="584" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="585" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="588" dst_node_input="sel" src_node_id="585" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="587" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="588" dst_node_input="option0" src_node_id="587" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="586" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[17:17]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>17</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="588" dst_node_input="option1" src_node_id="586" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="588" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="589" dst_node_input="in0" src_node_id="588" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="578" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>16.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>16.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="579" dst_node_input="a" src_node_id="578" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="579" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="582" dst_node_input="sel" src_node_id="579" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="581" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="582" dst_node_input="option0" src_node_id="581" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="580" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[16:16]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>16</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="582" dst_node_input="option1" src_node_id="580" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="582" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="583" dst_node_input="in0" src_node_id="582" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="572" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>15.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>15.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="573" dst_node_input="a" src_node_id="572" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="573" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="576" dst_node_input="sel" src_node_id="573" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="575" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="576" dst_node_input="option0" src_node_id="575" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="574" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[15:15]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>15</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="576" dst_node_input="option1" src_node_id="574" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="576" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="577" dst_node_input="in0" src_node_id="576" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="566" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>14.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>14.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="567" dst_node_input="a" src_node_id="566" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="567" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="570" dst_node_input="sel" src_node_id="567" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="569" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="570" dst_node_input="option0" src_node_id="569" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="568" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[14:14]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>14</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="570" dst_node_input="option1" src_node_id="568" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="570" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="571" dst_node_input="in0" src_node_id="570" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="560" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>13.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>13.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="561" dst_node_input="a" src_node_id="560" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="561" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="564" dst_node_input="sel" src_node_id="561" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="563" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="564" dst_node_input="option0" src_node_id="563" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="562" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[13:13]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>13</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="564" dst_node_input="option1" src_node_id="562" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="564" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="565" dst_node_input="in0" src_node_id="564" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="554" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>12.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>12.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="555" dst_node_input="a" src_node_id="554" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="555" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="558" dst_node_input="sel" src_node_id="555" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="557" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="558" dst_node_input="option0" src_node_id="557" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="556" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[12:12]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>12</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="558" dst_node_input="option1" src_node_id="556" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="558" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="559" dst_node_input="in0" src_node_id="558" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="548" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>11.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>11.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="549" dst_node_input="a" src_node_id="548" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="549" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="552" dst_node_input="sel" src_node_id="549" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="551" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="552" dst_node_input="option0" src_node_id="551" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="550" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[11:11]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>11</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="552" dst_node_input="option1" src_node_id="550" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="552" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="553" dst_node_input="in0" src_node_id="552" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="542" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>10.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>10.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="543" dst_node_input="a" src_node_id="542" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="543" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="546" dst_node_input="sel" src_node_id="543" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="545" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="546" dst_node_input="option0" src_node_id="545" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="544" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[10:10]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>10</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="546" dst_node_input="option1" src_node_id="544" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="546" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="547" dst_node_input="in0" src_node_id="546" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="536" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>9.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>9.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="537" dst_node_input="a" src_node_id="536" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="537" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="540" dst_node_input="sel" src_node_id="537" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="539" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="540" dst_node_input="option0" src_node_id="539" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="538" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[9:9]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>9</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="540" dst_node_input="option1" src_node_id="538" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="540" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="541" dst_node_input="in0" src_node_id="540" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="530" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>8.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>8.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="531" dst_node_input="a" src_node_id="530" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="531" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="534" dst_node_input="sel" src_node_id="531" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="533" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="534" dst_node_input="option0" src_node_id="533" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="532" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[8:8]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>8</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="534" dst_node_input="option1" src_node_id="532" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="534" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="535" dst_node_input="in0" src_node_id="534" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="524" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>7.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>7.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="525" dst_node_input="a" src_node_id="524" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="525" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="528" dst_node_input="sel" src_node_id="525" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="527" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="528" dst_node_input="option0" src_node_id="527" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="526" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[7:7]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>7</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="528" dst_node_input="option1" src_node_id="526" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="528" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="529" dst_node_input="in0" src_node_id="528" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="518" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>6.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>6.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="519" dst_node_input="a" src_node_id="518" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="519" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="522" dst_node_input="sel" src_node_id="519" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="521" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="522" dst_node_input="option0" src_node_id="521" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="520" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[6:6]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>6</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="522" dst_node_input="option1" src_node_id="520" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="522" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="523" dst_node_input="in0" src_node_id="522" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="512" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>5.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>5.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="513" dst_node_input="a" src_node_id="512" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="513" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="516" dst_node_input="sel" src_node_id="513" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="515" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="516" dst_node_input="option0" src_node_id="515" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="514" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[5:5]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>5</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="516" dst_node_input="option1" src_node_id="514" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="516" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="517" dst_node_input="in0" src_node_id="516" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="506" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>4.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>4.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="507" dst_node_input="a" src_node_id="506" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="507" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="510" dst_node_input="sel" src_node_id="507" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="509" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="510" dst_node_input="option0" src_node_id="509" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="508" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[4:4]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>4</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="510" dst_node_input="option1" src_node_id="508" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="510" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="511" dst_node_input="in0" src_node_id="510" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="500" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>3.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>3.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="501" dst_node_input="a" src_node_id="500" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="501" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="504" dst_node_input="sel" src_node_id="501" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="503" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="504" dst_node_input="option0" src_node_id="503" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="502" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[3:3]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>3</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="504" dst_node_input="option1" src_node_id="502" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="504" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="505" dst_node_input="in0" src_node_id="504" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="494" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>2.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>2.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="495" dst_node_input="a" src_node_id="494" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="495" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="498" dst_node_input="sel" src_node_id="495" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="497" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="498" dst_node_input="option0" src_node_id="497" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="496" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[2:2]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>2</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="498" dst_node_input="option1" src_node_id="496" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="498" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="499" dst_node_input="in0" src_node_id="498" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="488" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>1.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>1.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="489" dst_node_input="a" src_node_id="488" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="489" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="492" dst_node_input="sel" src_node_id="489" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="491" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="492" dst_node_input="option0" src_node_id="491" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="490" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[1:1]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>1</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="492" dst_node_input="option1" src_node_id="490" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="492" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="493" dst_node_input="in0" src_node_id="492" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="482" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>0.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="483" dst_node_input="a" src_node_id="482" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="483" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="2" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ltAsRHS(DFEVar.java:920)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="486" dst_node_input="sel" src_node_id="483" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="485" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(1)" />
		<Text>{HWRawBits:1}\n0x0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="486" dst_node_input="option0" src_node_id="485" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="484" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(1)" />
		<Text>[0:0]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.slice(DFEVar.java:373)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>0</Base>
		<Width>1</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="486" dst_node_input="option1" src_node_id="484" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="486" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(1)" />
		<Input name="option1" type="dfeBits(1)" />
		<Output latency="1" name="result" type="dfeBits(1)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="487" dst_node_input="in0" src_node_id="486" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="479" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x0; 0.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:90)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:54)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="487" dst_node_input="in1" src_node_id="479" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="487" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeBits(2)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="493" dst_node_input="in1" src_node_id="487" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="493" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(2)" />
		<Output latency="0" name="result" type="dfeBits(3)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="499" dst_node_input="in1" src_node_id="493" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="499" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(3)" />
		<Output latency="0" name="result" type="dfeBits(4)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="505" dst_node_input="in1" src_node_id="499" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="505" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(4)" />
		<Output latency="0" name="result" type="dfeBits(5)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="511" dst_node_input="in1" src_node_id="505" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="511" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(5)" />
		<Output latency="0" name="result" type="dfeBits(6)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="517" dst_node_input="in1" src_node_id="511" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="517" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(6)" />
		<Output latency="0" name="result" type="dfeBits(7)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="523" dst_node_input="in1" src_node_id="517" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="523" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(7)" />
		<Output latency="0" name="result" type="dfeBits(8)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="529" dst_node_input="in1" src_node_id="523" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="529" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(8)" />
		<Output latency="0" name="result" type="dfeBits(9)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="535" dst_node_input="in1" src_node_id="529" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="535" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(9)" />
		<Output latency="0" name="result" type="dfeBits(10)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="541" dst_node_input="in1" src_node_id="535" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="541" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(10)" />
		<Output latency="0" name="result" type="dfeBits(11)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="547" dst_node_input="in1" src_node_id="541" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="547" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(11)" />
		<Output latency="0" name="result" type="dfeBits(12)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="553" dst_node_input="in1" src_node_id="547" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="553" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(12)" />
		<Output latency="0" name="result" type="dfeBits(13)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="559" dst_node_input="in1" src_node_id="553" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="559" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(13)" />
		<Output latency="0" name="result" type="dfeBits(14)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="565" dst_node_input="in1" src_node_id="559" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="565" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(14)" />
		<Output latency="0" name="result" type="dfeBits(15)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="571" dst_node_input="in1" src_node_id="565" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="571" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(15)" />
		<Output latency="0" name="result" type="dfeBits(16)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="577" dst_node_input="in1" src_node_id="571" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="577" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(16)" />
		<Output latency="0" name="result" type="dfeBits(17)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="583" dst_node_input="in1" src_node_id="577" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="583" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(17)" />
		<Output latency="0" name="result" type="dfeBits(18)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="589" dst_node_input="in1" src_node_id="583" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="589" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(18)" />
		<Output latency="0" name="result" type="dfeBits(19)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="595" dst_node_input="in1" src_node_id="589" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="595" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(19)" />
		<Output latency="0" name="result" type="dfeBits(20)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="601" dst_node_input="in1" src_node_id="595" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="601" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(20)" />
		<Output latency="0" name="result" type="dfeBits(21)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="607" dst_node_input="in1" src_node_id="601" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="607" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(21)" />
		<Output latency="0" name="result" type="dfeBits(22)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="613" dst_node_input="in1" src_node_id="607" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="613" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(22)" />
		<Output latency="0" name="result" type="dfeBits(23)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="619" dst_node_input="in1" src_node_id="613" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="619" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(23)" />
		<Output latency="0" name="result" type="dfeBits(24)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cat(DFEVar.java:205)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:57)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="621" dst_node_input="datain" src_node_id="619" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="620" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(5, 0, UNSIGNED)" />
		<Text>NodeCast
{HWOffsetFix:9, 0, TWOSCOMPLEMENT} 
-&gt;
 {HWOffsetFix:5, 0, UNSIGNED}</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:181)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:59)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="621" dst_node_input="shift" src_node_id="620" src_node_output="o" />
	<Node criticalPaths="[]" group="[]" id="621" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeShift">
		<Input name="datain" type="dfeBits(24)" />
		<Input name="shift" type="dfeOffsetFix(5, 0, UNSIGNED)" />
		<Output latency="4" name="dataout" type="dfeBits(24)" />
		<Text>&lt;&lt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.shiftLeft(DFEVar.java:219)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:59)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Direction>Left</Direction>
		<Circular>false</Circular>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="624" dst_node_input="option0" src_node_id="621" src_node_output="dataout" />
	<Node criticalPaths="[]" group="[]" id="474" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeNeg">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>(-)</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.neg(DFEVar.java:1119)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:50)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="476" dst_node_input="a" src_node_id="474" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="475" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>1.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:990)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:50)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>1.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="476" dst_node_input="b" src_node_id="475" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="476" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSub">
		<Input name="a" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Input name="b" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="1" name="result" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Text>-</Text>
		<ResourceUsage DSPs="0" FFs="9" FMems="0" LUTs="18" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:990)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:50)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="477" dst_node_input="i" src_node_id="476" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="477" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(9, 0, TWOSCOMPLEMENT)" />
		<Output latency="0" name="o" type="dfeOffsetFix(5, 0, UNSIGNED)" />
		<Text>NodeCast
{HWOffsetFix:9, 0, TWOSCOMPLEMENT} 
-&gt;
 {HWOffsetFix:5, 0, UNSIGNED}</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:181)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:50)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="478" dst_node_input="shift" src_node_id="477" src_node_output="o" />
	<Node criticalPaths="[]" group="[]" id="478" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeShift">
		<Input name="datain" type="dfeBits(24)" />
		<Input name="shift" type="dfeOffsetFix(5, 0, UNSIGNED)" />
		<Output latency="4" name="dataout" type="dfeBits(24)" />
		<Text>&gt;&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.shiftRight(DFEVar.java:243)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:50)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Direction>Right</Direction>
		<Circular>false</Circular>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="624" dst_node_input="option1" src_node_id="478" src_node_output="dataout" />
	<Node criticalPaths="[]" group="[]" id="471" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>0.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:80)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:45)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="624" dst_node_input="option2" src_node_id="471" src_node_output="value" />
	<Edge criticalPaths="[]" dst_node_id="624" dst_node_input="option3" src_node_id="471" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="624" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(2, 0, UNSIGNED)" />
		<Input name="option0" type="dfeBits(24)" />
		<Input name="option1" type="dfeBits(24)" />
		<Input name="option2" type="dfeBits(24)" />
		<Input name="option3" type="dfeBits(24)" />
		<Output latency="1" name="result" type="dfeBits(24)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="24" FMems="0" LUTs="24" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Control.mux(Control.java:112)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:62)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="625" dst_node_input="a" src_node_id="624" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="626" dst_node_input="option0" src_node_id="624" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="625" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeNot">
		<Input name="a" type="dfeBits(24)" />
		<Output latency="0" name="result" type="dfeBits(24)" />
		<Text>~</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.complement(DFEVar.java:1110)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:63)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="626" dst_node_input="option1" src_node_id="625" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="626" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeBits(1)" />
		<Input name="option0" type="dfeBits(24)" />
		<Input name="option1" type="dfeBits(24)" />
		<Output latency="1" name="result" type="dfeBits(24)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="24" FMems="0" LUTs="24" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1187)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:63)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="627" dst_node_input="input" src_node_id="626" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="627" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(24)" />
		<Output latency="0" name="output" type="dfeOffsetFix(24, -24, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:24, -24, UNSIGNED}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:172)
com.maxeler.maxblox.funceval.Frac.&lt;init&gt;(Frac.maxj:63)
com.maxeler.maxblox.funceval.Frac.getFrac(Frac.maxj:74)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="628" dst_node_input="i" src_node_id="627" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="628" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(24, -24, UNSIGNED)" />
		<Output latency="7" name="o" type="dfeFloat(8, 24)" />
		<Text>NodeCast
{HWOffsetFix:24, -24, UNSIGNED} 
-&gt;
 {HWFloat:8, 24}</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:181)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:130)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="629" dst_node_input="option1" src_node_id="628" src_node_output="o" />
	<Node criticalPaths="[]" group="[]" id="629" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeBits(1)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="32" FMems="0" LUTs="32" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Control.mux(Control.java:124)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:133)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="634" dst_node_input="a" src_node_id="629" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="634" dst_node_input="b" src_node_id="629" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="635" dst_node_input="b" src_node_id="629" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="639" dst_node_input="b" src_node_id="629" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="635" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<ResourceUsage DSPs="0" FFs="256" FMems="0" LUTs="288" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:1020)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:147)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="636" dst_node_input="a" src_node_id="635" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="634" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<ResourceUsage DSPs="0" FFs="256" FMems="0" LUTs="288" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:1020)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:142)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="636" dst_node_input="b" src_node_id="634" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="637" dst_node_input="b" src_node_id="634" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="636" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<ResourceUsage DSPs="0" FFs="256" FMems="0" LUTs="288" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:1020)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:147)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="638" dst_node_input="a" src_node_id="636" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1300" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(128)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>[95:64]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Mem.alloc(Mem.java:63)
maxpower.math.interpolation.CubicSplineBuilder.buildCoefficientRom(CubicSplineBuilder.java:293)
maxpower.math.interpolation.CubicSplineBuilder.access$1(CubicSplineBuilder.java:264)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:90)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:87)
maxpower.math.interpolation.CubicSplineBuilder.build(CubicSplineBuilder.java:239)
maxpower.math.interpolation.InterpolatorBuilder.build(InterpolatorBuilder.java:126)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:32)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>64</Base>
		<Width>32</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1301" dst_node_input="input" src_node_id="1300" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1301" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>&lt;{HWFloat:8, 24}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Mem.alloc(Mem.java:63)
maxpower.math.interpolation.CubicSplineBuilder.buildCoefficientRom(CubicSplineBuilder.java:293)
maxpower.math.interpolation.CubicSplineBuilder.access$1(CubicSplineBuilder.java:264)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:90)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:87)
maxpower.math.interpolation.CubicSplineBuilder.build(CubicSplineBuilder.java:239)
maxpower.math.interpolation.InterpolatorBuilder.build(InterpolatorBuilder.java:126)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:32)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="632" dst_node_input="option0" src_node_id="1301" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="1309" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(128)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>[95:64]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Mem.alloc(Mem.java:63)
maxpower.math.interpolation.CubicSplineBuilder.buildCoefficientRom(CubicSplineBuilder.java:293)
maxpower.math.interpolation.CubicSplineBuilder.access$1(CubicSplineBuilder.java:264)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:99)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:87)
maxpower.math.interpolation.CubicSplineBuilder.build(CubicSplineBuilder.java:239)
maxpower.math.interpolation.InterpolatorBuilder.build(InterpolatorBuilder.java:126)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:32)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>64</Base>
		<Width>32</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1310" dst_node_input="input" src_node_id="1309" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1310" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>&lt;{HWFloat:8, 24}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Mem.alloc(Mem.java:63)
maxpower.math.interpolation.CubicSplineBuilder.buildCoefficientRom(CubicSplineBuilder.java:293)
maxpower.math.interpolation.CubicSplineBuilder.access$1(CubicSplineBuilder.java:264)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:99)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:87)
maxpower.math.interpolation.CubicSplineBuilder.build(CubicSplineBuilder.java:239)
maxpower.math.interpolation.InterpolatorBuilder.build(InterpolatorBuilder.java:126)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:32)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="632" dst_node_input="option1" src_node_id="1310" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="632" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeBits(1)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="32" FMems="0" LUTs="32" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Control.mux(Control.java:124)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:134)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="637" dst_node_input="a" src_node_id="632" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="637" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<ResourceUsage DSPs="0" FFs="256" FMems="0" LUTs="288" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:1020)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:147)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="638" dst_node_input="b" src_node_id="637" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="638" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="11" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<ResourceUsage DSPs="0" FFs="352" FMems="0" LUTs="384" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:930)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:147)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="640" dst_node_input="a" src_node_id="638" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1298" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(128)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>[63:32]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Mem.alloc(Mem.java:63)
maxpower.math.interpolation.CubicSplineBuilder.buildCoefficientRom(CubicSplineBuilder.java:293)
maxpower.math.interpolation.CubicSplineBuilder.access$1(CubicSplineBuilder.java:264)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:90)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:87)
maxpower.math.interpolation.CubicSplineBuilder.build(CubicSplineBuilder.java:239)
maxpower.math.interpolation.InterpolatorBuilder.build(InterpolatorBuilder.java:126)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:32)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>32</Base>
		<Width>32</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1299" dst_node_input="input" src_node_id="1298" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1299" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>&lt;{HWFloat:8, 24}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Mem.alloc(Mem.java:63)
maxpower.math.interpolation.CubicSplineBuilder.buildCoefficientRom(CubicSplineBuilder.java:293)
maxpower.math.interpolation.CubicSplineBuilder.access$1(CubicSplineBuilder.java:264)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:90)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:87)
maxpower.math.interpolation.CubicSplineBuilder.build(CubicSplineBuilder.java:239)
maxpower.math.interpolation.InterpolatorBuilder.build(InterpolatorBuilder.java:126)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:32)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="631" dst_node_input="option0" src_node_id="1299" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="1307" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(128)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>[63:32]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Mem.alloc(Mem.java:63)
maxpower.math.interpolation.CubicSplineBuilder.buildCoefficientRom(CubicSplineBuilder.java:293)
maxpower.math.interpolation.CubicSplineBuilder.access$1(CubicSplineBuilder.java:264)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:99)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:87)
maxpower.math.interpolation.CubicSplineBuilder.build(CubicSplineBuilder.java:239)
maxpower.math.interpolation.InterpolatorBuilder.build(InterpolatorBuilder.java:126)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:32)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>32</Base>
		<Width>32</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1308" dst_node_input="input" src_node_id="1307" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1308" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>&lt;{HWFloat:8, 24}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Mem.alloc(Mem.java:63)
maxpower.math.interpolation.CubicSplineBuilder.buildCoefficientRom(CubicSplineBuilder.java:293)
maxpower.math.interpolation.CubicSplineBuilder.access$1(CubicSplineBuilder.java:264)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:99)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:87)
maxpower.math.interpolation.CubicSplineBuilder.build(CubicSplineBuilder.java:239)
maxpower.math.interpolation.InterpolatorBuilder.build(InterpolatorBuilder.java:126)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:32)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="631" dst_node_input="option1" src_node_id="1308" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="631" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeBits(1)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="32" FMems="0" LUTs="32" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Control.mux(Control.java:124)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:134)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="639" dst_node_input="a" src_node_id="631" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="639" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<ResourceUsage DSPs="0" FFs="256" FMems="0" LUTs="288" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:1020)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:147)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="640" dst_node_input="b" src_node_id="639" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="640" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="11" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<ResourceUsage DSPs="0" FFs="352" FMems="0" LUTs="384" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:930)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:147)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="641" dst_node_input="a" src_node_id="640" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1296" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(128)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>[31:0]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Mem.alloc(Mem.java:63)
maxpower.math.interpolation.CubicSplineBuilder.buildCoefficientRom(CubicSplineBuilder.java:293)
maxpower.math.interpolation.CubicSplineBuilder.access$1(CubicSplineBuilder.java:264)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:90)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:87)
maxpower.math.interpolation.CubicSplineBuilder.build(CubicSplineBuilder.java:239)
maxpower.math.interpolation.InterpolatorBuilder.build(InterpolatorBuilder.java:126)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:32)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>0</Base>
		<Width>32</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1297" dst_node_input="input" src_node_id="1296" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1297" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>&lt;{HWFloat:8, 24}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Mem.alloc(Mem.java:63)
maxpower.math.interpolation.CubicSplineBuilder.buildCoefficientRom(CubicSplineBuilder.java:293)
maxpower.math.interpolation.CubicSplineBuilder.access$1(CubicSplineBuilder.java:264)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:90)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:87)
maxpower.math.interpolation.CubicSplineBuilder.build(CubicSplineBuilder.java:239)
maxpower.math.interpolation.InterpolatorBuilder.build(InterpolatorBuilder.java:126)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:32)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="630" dst_node_input="option0" src_node_id="1297" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="1305" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSlice">
		<Input name="a" type="dfeBits(128)" />
		<Output latency="0" name="result" type="dfeBits(32)" />
		<Text>[31:0]</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Mem.alloc(Mem.java:63)
maxpower.math.interpolation.CubicSplineBuilder.buildCoefficientRom(CubicSplineBuilder.java:293)
maxpower.math.interpolation.CubicSplineBuilder.access$1(CubicSplineBuilder.java:264)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:99)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:87)
maxpower.math.interpolation.CubicSplineBuilder.build(CubicSplineBuilder.java:239)
maxpower.math.interpolation.InterpolatorBuilder.build(InterpolatorBuilder.java:126)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:32)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Base>0</Base>
		<Width>32</Width>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1306" dst_node_input="input" src_node_id="1305" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1306" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeBits(32)" />
		<Output latency="0" name="output" type="dfeFloat(8, 24)" />
		<Text>&lt;{HWFloat:8, 24}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Mem.alloc(Mem.java:63)
maxpower.math.interpolation.CubicSplineBuilder.buildCoefficientRom(CubicSplineBuilder.java:293)
maxpower.math.interpolation.CubicSplineBuilder.access$1(CubicSplineBuilder.java:264)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:99)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.&lt;init&gt;(CubicSplineBuilder.java:87)
maxpower.math.interpolation.CubicSplineBuilder.build(CubicSplineBuilder.java:239)
maxpower.math.interpolation.InterpolatorBuilder.build(InterpolatorBuilder.java:126)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:32)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="630" dst_node_input="option1" src_node_id="1306" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="630" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeBits(1)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="32" FMems="0" LUTs="32" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Control.mux(Control.java:124)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:134)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="641" dst_node_input="b" src_node_id="630" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="641" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="11" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<ResourceUsage DSPs="0" FFs="352" FMems="0" LUTs="384" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:930)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:147)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="648" dst_node_input="option0" src_node_id="641" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="647" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>NaN</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:80)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:151)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>NaN</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="648" dst_node_input="option1" src_node_id="647" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="648" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="32" FMems="0" LUTs="32" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1187)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.evalFloat(CubicSplineBuilder.java:151)
maxpower.math.interpolation.CubicSplineBuilder$CubicSpline.eval(CubicSplineBuilder.java:202)
maxpower.math.interpolation.InterpolatorBuilder$SplineInterpolator.eval(InterpolatorBuilder.java:60)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:40)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="649" dst_node_input="a" src_node_id="648" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="650" dst_node_input="option0" src_node_id="648" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="649" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeNeg">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeFloat(8, 24)" />
		<Text>(-)</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.neg(DFEVar.java:1119)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:41)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="650" dst_node_input="option1" src_node_id="649" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="650" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="32" FMems="0" LUTs="32" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1187)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:41)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="663" dst_node_input="option0" src_node_id="650" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="662" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x7fc00000; NaN</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1228)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:43)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>01111111110000000000000000000000</Value>
		<HexValue>0x7fc00000</HexValue>
		<NumericValue>NaN</NumericValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="663" dst_node_input="option1" src_node_id="662" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="663" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="32" FMems="0" LUTs="32" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1228)
maxpower.math.interpolation.functions.trigonometric.Cos.value(Cos.java:43)
maxpower.math.functions.Trigonometric.cos(Trigonometric.java:40)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="664" dst_node_input="b" src_node_id="663" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="664" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<ResourceUsage DSPs="0" FFs="256" FMems="0" LUTs="288" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:1020)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:80)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1204" dst_node_input="b" src_node_id="664" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1210" dst_node_input="option0" src_node_id="664" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1214" dst_node_input="b" src_node_id="664" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1224" dst_node_input="b" src_node_id="664" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1214" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<ResourceUsage DSPs="0" FFs="256" FMems="0" LUTs="288" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:1020)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:91)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1216" dst_node_input="a" src_node_id="1214" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1215" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<ResourceUsage DSPs="0" FFs="256" FMems="0" LUTs="288" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:1020)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:91)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1216" dst_node_input="b" src_node_id="1215" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1216" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSub">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="11" name="result" type="dfeFloat(8, 24)" />
		<Text>-</Text>
		<ResourceUsage DSPs="0" FFs="352" FMems="0" LUTs="384" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:975)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:91)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1217" dst_node_input="a" src_node_id="1216" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1196" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeNot">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>~</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.complement(DFEVar.java:1110)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:86)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1197" dst_node_input="a" src_node_id="1196" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1197" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.and(DFEVar.java:579)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:86)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1200" dst_node_input="sel" src_node_id="1197" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1198" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSqrt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="28" name="result" type="dfeFloat(8, 24)" />
		<Text>sqrt</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.sqrt(KernelMath.java:267)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:86)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1199" dst_node_input="i" src_node_id="1198" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1199" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCast">
		<Input name="i" type="dfeFloat(8, 24)" />
		<Output latency="0" name="o" type="dfeFloat(8, 24)" />
		<Text>NodeCast
{HWFloat:8, 24} 
-&gt;
 {HWFloat:8, 24}</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.sqrt(KernelMath.java:267)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:86)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1200" dst_node_input="option1" src_node_id="1199" src_node_output="o" />
	<Node criticalPaths="[]" group="[]" id="1200" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="32" FMems="0" LUTs="32" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1187)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:86)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1207" dst_node_input="b" src_node_id="1200" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1217" dst_node_input="b" src_node_id="1200" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1223" dst_node_input="a" src_node_id="1200" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1217" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeDiv">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="28" name="result" type="dfeFloat(8, 24)" />
		<Text>/</Text>
		<ResourceUsage DSPs="0" FFs="896" FMems="0" LUTs="928" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.div(DFEVar.java:1065)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:91)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1219" dst_node_input="a" src_node_id="1217" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1218" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<ResourceUsage DSPs="0" FFs="256" FMems="0" LUTs="288" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:1020)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:91)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1219" dst_node_input="b" src_node_id="1218" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1219" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="11" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<ResourceUsage DSPs="0" FFs="352" FMems="0" LUTs="384" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:930)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:91)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1220" dst_node_input="option1" src_node_id="1219" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1220" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="32" FMems="0" LUTs="32" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1187)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:91)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1243" dst_node_input="option1" src_node_id="1220" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1243" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="32" FMems="0" LUTs="32" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1187)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:99)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1250" dst_node_input="input" src_node_id="1243" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="2" dst_node_input="track_4" src_node_id="1243" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1270" dst_node_input="input" src_node_id="1243" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1250" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeStreamOffset">
		<Input name="input" type="dfeFloat(8, 24)" />
		<Output latency="-loopLength" name="output" type="dfeFloat(8, 24)" />
		<Text>stream offset: -loopLength</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:353)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:109)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="20" dst_node_input="option0" src_node_id="1250" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="19" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1228)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:51)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="20" dst_node_input="option1" src_node_id="19" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="20" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="32" FMems="0" LUTs="32" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1228)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:51)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="113" dst_node_input="a" src_node_id="20" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1192" dst_node_input="a" src_node_id="20" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1192" dst_node_input="b" src_node_id="20" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1205" dst_node_input="a" src_node_id="20" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1213" dst_node_input="a" src_node_id="20" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1218" dst_node_input="a" src_node_id="20" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1243" dst_node_input="option0" src_node_id="20" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1192" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<ResourceUsage DSPs="0" FFs="256" FMems="0" LUTs="288" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:1020)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:84)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1193" dst_node_input="b" src_node_id="1192" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1193" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="11" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<ResourceUsage DSPs="0" FFs="352" FMems="0" LUTs="384" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:930)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:84)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1195" dst_node_input="a" src_node_id="1193" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1198" dst_node_input="a" src_node_id="1193" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1200" dst_node_input="option0" src_node_id="1193" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1194" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>0.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.gt(DFEVar.java:845)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:85)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1195" dst_node_input="b" src_node_id="1194" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="1195" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeGt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="2" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;</Text>
		<ResourceUsage DSPs="0" FFs="2" FMems="0" LUTs="3" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.gt(DFEVar.java:845)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:85)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1197" dst_node_input="b" src_node_id="1195" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1202" dst_node_input="b" src_node_id="1195" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1212" dst_node_input="b" src_node_id="1195" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1222" dst_node_input="b" src_node_id="1195" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1230" dst_node_input="a" src_node_id="1195" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1222" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.and(DFEVar.java:579)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:92)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1227" dst_node_input="sel" src_node_id="1222" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1223" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeNeg">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeFloat(8, 24)" />
		<Text>(-)</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.neg(DFEVar.java:1119)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:92)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1224" dst_node_input="a" src_node_id="1223" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1224" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<ResourceUsage DSPs="0" FFs="256" FMems="0" LUTs="288" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:1020)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:92)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1226" dst_node_input="a" src_node_id="1224" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1225" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<ResourceUsage DSPs="0" FFs="256" FMems="0" LUTs="288" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:1020)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:92)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1226" dst_node_input="b" src_node_id="1225" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1226" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="11" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<ResourceUsage DSPs="0" FFs="352" FMems="0" LUTs="384" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:930)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:92)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1227" dst_node_input="option1" src_node_id="1226" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1227" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="32" FMems="0" LUTs="32" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1187)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:92)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1238" dst_node_input="a" src_node_id="1227" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1239" dst_node_input="option0" src_node_id="1227" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1238" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeNeg">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeFloat(8, 24)" />
		<Text>(-)</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.neg(DFEVar.java:1119)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:96)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1239" dst_node_input="option1" src_node_id="1238" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1239" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="32" FMems="0" LUTs="32" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1187)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:96)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1245" dst_node_input="option1" src_node_id="1239" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1245" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="32" FMems="0" LUTs="32" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1187)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:100)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1251" dst_node_input="input" src_node_id="1245" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="2" dst_node_input="track_5" src_node_id="1245" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1272" dst_node_input="input" src_node_id="1245" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1251" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeStreamOffset">
		<Input name="input" type="dfeFloat(8, 24)" />
		<Output latency="-loopLength" name="output" type="dfeFloat(8, 24)" />
		<Text>stream offset: -loopLength</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:353)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:110)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="22" dst_node_input="option0" src_node_id="1251" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="21" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x3f800000; 1.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1228)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:52)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>00111111100000000000000000000000</Value>
		<HexValue>0x3f800000</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="22" dst_node_input="option1" src_node_id="21" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="22" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="32" FMems="0" LUTs="32" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1228)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:52)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="115" dst_node_input="a" src_node_id="22" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1203" dst_node_input="b" src_node_id="22" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1213" dst_node_input="b" src_node_id="22" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1225" dst_node_input="a" src_node_id="22" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1229" dst_node_input="a" src_node_id="22" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1245" dst_node_input="option0" src_node_id="22" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1228" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>0.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.lt(DFEVar.java:890)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:94)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1229" dst_node_input="b" src_node_id="1228" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="1229" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeLt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="2" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<ResourceUsage DSPs="0" FFs="2" FMems="0" LUTs="3" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.lt(DFEVar.java:890)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:94)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1231" dst_node_input="a" src_node_id="1229" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1230" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeNot">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>~</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.complement(DFEVar.java:1110)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:94)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1231" dst_node_input="b" src_node_id="1230" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1231" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.and(DFEVar.java:579)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:94)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1233" dst_node_input="b" src_node_id="1231" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1237" dst_node_input="b" src_node_id="1231" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1233" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.and(DFEVar.java:579)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:95)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1235" dst_node_input="sel" src_node_id="1233" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1201" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeNot">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>~</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.complement(DFEVar.java:1110)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:90)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1202" dst_node_input="a" src_node_id="1201" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1202" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<ResourceUsage DSPs="0" FFs="1" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.and(DFEVar.java:579)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:90)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1210" dst_node_input="sel" src_node_id="1202" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1203" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<ResourceUsage DSPs="0" FFs="256" FMems="0" LUTs="288" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:1020)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:90)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1204" dst_node_input="a" src_node_id="1203" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1204" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<ResourceUsage DSPs="0" FFs="256" FMems="0" LUTs="288" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:1020)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:90)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1206" dst_node_input="a" src_node_id="1204" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1205" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<ResourceUsage DSPs="0" FFs="256" FMems="0" LUTs="288" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:1020)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:90)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1206" dst_node_input="b" src_node_id="1205" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1206" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSub">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="11" name="result" type="dfeFloat(8, 24)" />
		<Text>-</Text>
		<ResourceUsage DSPs="0" FFs="352" FMems="0" LUTs="384" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:975)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:90)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1207" dst_node_input="a" src_node_id="1206" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1207" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeDiv">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="28" name="result" type="dfeFloat(8, 24)" />
		<Text>/</Text>
		<ResourceUsage DSPs="0" FFs="896" FMems="0" LUTs="928" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.div(DFEVar.java:1065)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:90)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1209" dst_node_input="a" src_node_id="1207" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1208" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<ResourceUsage DSPs="0" FFs="256" FMems="0" LUTs="288" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:1020)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:90)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1209" dst_node_input="b" src_node_id="1208" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1209" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="11" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<ResourceUsage DSPs="0" FFs="352" FMems="0" LUTs="384" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:930)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:90)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1210" dst_node_input="option1" src_node_id="1209" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1210" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="32" FMems="0" LUTs="32" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1187)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:90)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1234" dst_node_input="a" src_node_id="1210" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1235" dst_node_input="option0" src_node_id="1210" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1234" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeNeg">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Output latency="0" name="result" type="dfeFloat(8, 24)" />
		<Text>(-)</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.neg(DFEVar.java:1119)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:95)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1235" dst_node_input="option1" src_node_id="1234" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1235" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="32" FMems="0" LUTs="32" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1187)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:95)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1241" dst_node_input="option1" src_node_id="1235" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1241" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="32" FMems="0" LUTs="32" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1187)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:98)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1249" dst_node_input="input" src_node_id="1241" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="2" dst_node_input="track_3" src_node_id="1241" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1268" dst_node_input="input" src_node_id="1241" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1249" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeStreamOffset">
		<Input name="input" type="dfeFloat(8, 24)" />
		<Output latency="-loopLength" name="output" type="dfeFloat(8, 24)" />
		<Text>stream offset: -loopLength</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:353)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:108)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="2" dst_node_input="carrieddirx" src_node_id="1249" src_node_output="output" />
	<Edge criticalPaths="[]" dst_node_id="18" dst_node_input="option0" src_node_id="1249" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="17" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1228)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:50)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="18" dst_node_input="option1" src_node_id="17" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="18" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="32" FMems="0" LUTs="32" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1228)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:50)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="2" dst_node_input="dirx" src_node_id="18" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="111" dst_node_input="a" src_node_id="18" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1191" dst_node_input="a" src_node_id="18" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1191" dst_node_input="b" src_node_id="18" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1203" dst_node_input="a" src_node_id="18" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1208" dst_node_input="a" src_node_id="18" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1215" dst_node_input="a" src_node_id="18" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1241" dst_node_input="option0" src_node_id="18" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="108" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>9.688792023218961E-4</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.subAsRHS(DFEVar.java:1000)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:68)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>9.688792023218961E-4</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="109" dst_node_input="a" src_node_id="108" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="117" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="11" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<ResourceUsage DSPs="0" FFs="352" FMems="0" LUTs="384" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:930)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:73)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="119" dst_node_input="arg0" src_node_id="117" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1252" dst_node_input="input" src_node_id="117" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1258" dst_node_input="arg1" src_node_id="117" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="2" dst_node_input="track_6" src_node_id="117" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1274" dst_node_input="input" src_node_id="117" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1252" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeStreamOffset">
		<Input name="input" type="dfeFloat(8, 24)" />
		<Output latency="-loopLength" name="output" type="dfeFloat(8, 24)" />
		<Text>stream offset: -loopLength</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:353)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:111)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="24" dst_node_input="option0" src_node_id="1252" src_node_output="output" />
	<Edge criticalPaths="[]" dst_node_id="1258" dst_node_input="arg4" src_node_id="1252" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="23" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1228)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:53)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="24" dst_node_input="option1" src_node_id="23" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="24" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="32" FMems="0" LUTs="32" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1228)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:53)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="2" dst_node_input="tracklength" src_node_id="24" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="109" dst_node_input="b" src_node_id="24" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="117" dst_node_input="a" src_node_id="24" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="109" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeSub">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="11" name="result" type="dfeFloat(8, 24)" />
		<Text>-</Text>
		<ResourceUsage DSPs="0" FFs="352" FMems="0" LUTs="384" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.subAsRHS(DFEVar.java:1000)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:68)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="110" dst_node_input="option1" src_node_id="109" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="110" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="32" FMems="0" LUTs="32" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1187)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:68)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="111" dst_node_input="b" src_node_id="110" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="113" dst_node_input="b" src_node_id="110" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="115" dst_node_input="b" src_node_id="110" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="117" dst_node_input="b" src_node_id="110" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="111" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<ResourceUsage DSPs="0" FFs="256" FMems="0" LUTs="288" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:1020)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:70)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="112" dst_node_input="b" src_node_id="111" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="112" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="11" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<ResourceUsage DSPs="0" FFs="352" FMems="0" LUTs="384" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:930)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:70)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1246" dst_node_input="input" src_node_id="112" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="2" dst_node_input="track_0" src_node_id="112" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1263" dst_node_input="input" src_node_id="112" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1246" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeStreamOffset">
		<Input name="input" type="dfeFloat(8, 24)" />
		<Output latency="-loopLength" name="output" type="dfeFloat(8, 24)" />
		<Text>stream offset: -loopLength</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:353)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:105)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="2" dst_node_input="carriedposx" src_node_id="1246" src_node_output="output" />
	<Edge criticalPaths="[]" dst_node_id="12" dst_node_input="option0" src_node_id="1246" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="15" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1228)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:49)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="16" dst_node_input="option1" src_node_id="15" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="16" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="32" FMems="0" LUTs="32" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1228)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:49)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="2" dst_node_input="posz" src_node_id="16" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="116" dst_node_input="a" src_node_id="16" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="115" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<ResourceUsage DSPs="0" FFs="256" FMems="0" LUTs="288" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:1020)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:72)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="116" dst_node_input="b" src_node_id="115" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="116" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="11" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<ResourceUsage DSPs="0" FFs="352" FMems="0" LUTs="384" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:930)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:72)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1248" dst_node_input="input" src_node_id="116" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="2" dst_node_input="track_2" src_node_id="116" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1266" dst_node_input="input" src_node_id="116" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1248" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeStreamOffset">
		<Input name="input" type="dfeFloat(8, 24)" />
		<Output latency="-loopLength" name="output" type="dfeFloat(8, 24)" />
		<Text>stream offset: -loopLength</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:353)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:107)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="2" dst_node_input="carriedposz" src_node_id="1248" src_node_output="output" />
	<Edge criticalPaths="[]" dst_node_id="16" dst_node_input="option0" src_node_id="1248" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="1247" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeStreamOffset">
		<Input name="input" type="dfeFloat(8, 24)" />
		<Output latency="-loopLength" name="output" type="dfeFloat(8, 24)" />
		<Text>stream offset: -loopLength</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:353)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:106)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="14" dst_node_input="option0" src_node_id="1247" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="13" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(8, 24)" />
		<Text>{HWFloat:8, 24}\n0x00000000; 0.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1228)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:48)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>00000000000000000000000000000000</Value>
		<HexValue>0x00000000</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="14" dst_node_input="option1" src_node_id="13" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="14" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeFloat(8, 24)" />
		<Input name="option1" type="dfeFloat(8, 24)" />
		<Output latency="1" name="result" type="dfeFloat(8, 24)" />
		<Text>MUX</Text>
		<ResourceUsage DSPs="0" FFs="32" FMems="0" LUTs="32" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1228)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:48)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="114" dst_node_input="a" src_node_id="14" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="113" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeMul">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="8" name="result" type="dfeFloat(8, 24)" />
		<Text>*</Text>
		<ResourceUsage DSPs="0" FFs="256" FMems="0" LUTs="288" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:1020)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:71)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="114" dst_node_input="b" src_node_id="113" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="114" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeAdd">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="11" name="result" type="dfeFloat(8, 24)" />
		<Text>+</Text>
		<ResourceUsage DSPs="0" FFs="352" FMems="0" LUTs="384" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:930)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:71)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1247" dst_node_input="input" src_node_id="114" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="2" dst_node_input="track_1" src_node_id="114" src_node_output="result" />
	<Edge criticalPaths="[]" dst_node_id="1264" dst_node_input="input" src_node_id="114" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="2" isControl="false" isVisible="false" pipelineFactor="1.0" powerUsage="N/A" type="NodeWatch">
		<Input name="llv" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Input name="carriedposx" type="dfeFloat(8, 24)" />
		<Input name="carriedposz" type="dfeFloat(8, 24)" />
		<Input name="carrieddirx" type="dfeFloat(8, 24)" />
		<Input name="carriedlength" type="dfeFloat(8, 24)" />
		<Input name="posz" type="dfeFloat(8, 24)" />
		<Input name="dirx" type="dfeFloat(8, 24)" />
		<Input name="tracklength" type="dfeFloat(8, 24)" />
		<Input name="reset" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="pastlimit" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="lengthoffset" type="dfeFloat(8, 24)" />
		<Input name="length" type="dfeFloat(8, 24)" />
		<Input name="track_0" type="dfeFloat(8, 24)" />
		<Input name="track_1" type="dfeFloat(8, 24)" />
		<Input name="track_2" type="dfeFloat(8, 24)" />
		<Input name="track_3" type="dfeFloat(8, 24)" />
		<Input name="track_4" type="dfeFloat(8, 24)" />
		<Input name="track_5" type="dfeFloat(8, 24)" />
		<Input name="track_6" type="dfeFloat(8, 24)" />
		<Text>WatchNode</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.simWatch(DFEVar.java:1148)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:28)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Node criticalPaths="[]" group="[]" id="118" isControl="false" isVisible="false" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x1; 1.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.Debug.simPrintf(Debug.java:415)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:74)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>1</Value>
		<HexValue>0x1</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="119" dst_node_input="condition" src_node_id="118" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="119" isControl="false" isVisible="false" pipelineFactor="1.0" powerUsage="N/A" type="NodePrintf">
		<Input name="condition" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="arg0" type="dfeFloat(8, 24)" />
		<Input name="arg1" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>NodePrintf</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.Debug.simPrintf(Debug.java:415)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:74)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<StreamName></StreamName>
		<Format>%f %i\n</Format>
	</Node>
	<Node criticalPaths="[]" group="[]" id="1256" isControl="false" isVisible="false" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x1; 1.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.Debug.simPrintf(Debug.java:415)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:132)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>1</Value>
		<HexValue>0x1</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1258" dst_node_input="condition" src_node_id="1256" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="1257" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeFloat(11, 53)" />
		<Text>{HWFloat:11, 53}\n0x3f4fbf8c3e6e7f51; 9.688792023218961E-4</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.Debug.simPrintf(Debug.java:415)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:132)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0011111101001111101111111000110000111110011011100111111101010001</Value>
		<HexValue>0x3f4fbf8c3e6e7f51</HexValue>
		<NumericValue>9.688792023218961E-4</NumericValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1258" dst_node_input="arg0" src_node_id="1257" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="1254" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>9.688792023218961E-4</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.gt(DFEVar.java:845)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:132)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>9.688792023218961E-4</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1255" dst_node_input="b" src_node_id="1254" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="1255" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeGt">
		<Input name="a" type="dfeFloat(8, 24)" />
		<Input name="b" type="dfeFloat(8, 24)" />
		<Output latency="2" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;</Text>
		<ResourceUsage DSPs="0" FFs="2" FMems="0" LUTs="3" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.gt(DFEVar.java:845)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:132)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1258" dst_node_input="arg5" src_node_id="1255" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1258" isControl="false" isVisible="false" pipelineFactor="1.0" powerUsage="N/A" type="NodePrintf">
		<Input name="condition" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="arg0" type="dfeFloat(11, 53)" />
		<Input name="arg1" type="dfeFloat(8, 24)" />
		<Input name="arg2" type="dfeFloat(8, 24)" />
		<Input name="arg3" type="dfeFloat(8, 24)" />
		<Input name="arg4" type="dfeFloat(8, 24)" />
		<Input name="arg5" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>NodePrintf</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.Debug.simPrintf(Debug.java:415)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:132)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<StreamName></StreamName>
		<Format>%f %f %f %f %f %i\n</Format>
	</Node>
	<Node criticalPaths="[]" group="[]" id="1259" isControl="true" isVisible="false" pipelineFactor="1.0" powerUsage="N/A" type="NodeInputMappedReg">
		<Output latency="0" name="io_z_force_disabled" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>Scalar input (io_z_force_disabled)</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.output(IO.java:707)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:137)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Name>io_z_force_disabled</Name>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1260" dst_node_input="a" src_node_id="1259" src_node_output="io_z_force_disabled" />
	<Node criticalPaths="[]" group="[]" id="1260" isControl="true" isVisible="false" pipelineFactor="0.0" powerUsage="N/A" type="NodeNot">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>~</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.output(IO.java:707)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:137)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1261" dst_node_input="b" src_node_id="1260" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1261" isControl="false" isVisible="false" pipelineFactor="0.0" powerUsage="N/A" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="1" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.output(IO.java:707)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:137)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1262" dst_node_input="output_control" src_node_id="1261" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1274" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeFloat(8, 24)" />
		<Output latency="0" name="output" type="dfeBits(32)" />
		<Text>&lt;{HWRawBits:32}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.output(IO.java:707)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:137)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1275" dst_node_input="in0" src_node_id="1274" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="1272" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeFloat(8, 24)" />
		<Output latency="0" name="output" type="dfeBits(32)" />
		<Text>&lt;{HWRawBits:32}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.output(IO.java:707)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:137)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1273" dst_node_input="in0" src_node_id="1272" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="1270" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeFloat(8, 24)" />
		<Output latency="0" name="output" type="dfeBits(32)" />
		<Text>&lt;{HWRawBits:32}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.output(IO.java:707)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:137)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1271" dst_node_input="in0" src_node_id="1270" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="1268" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeFloat(8, 24)" />
		<Output latency="0" name="output" type="dfeBits(32)" />
		<Text>&lt;{HWRawBits:32}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.output(IO.java:707)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:137)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1269" dst_node_input="in0" src_node_id="1268" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="1266" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeFloat(8, 24)" />
		<Output latency="0" name="output" type="dfeBits(32)" />
		<Text>&lt;{HWRawBits:32}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.output(IO.java:707)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:137)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1267" dst_node_input="in0" src_node_id="1266" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="1264" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeFloat(8, 24)" />
		<Output latency="0" name="output" type="dfeBits(32)" />
		<Text>&lt;{HWRawBits:32}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.output(IO.java:707)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:137)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1265" dst_node_input="in0" src_node_id="1264" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="1263" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeReinterpret">
		<Input name="input" type="dfeFloat(8, 24)" />
		<Output latency="0" name="output" type="dfeBits(32)" />
		<Text>&lt;{HWRawBits:32}&gt;</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.output(IO.java:707)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:137)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1265" dst_node_input="in1" src_node_id="1263" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="1265" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(32)" />
		<Input name="in1" type="dfeBits(32)" />
		<Output latency="0" name="result" type="dfeBits(64)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.output(IO.java:707)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:137)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1267" dst_node_input="in1" src_node_id="1265" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1267" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(32)" />
		<Input name="in1" type="dfeBits(64)" />
		<Output latency="0" name="result" type="dfeBits(96)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.output(IO.java:707)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:137)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1269" dst_node_input="in1" src_node_id="1267" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1269" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(32)" />
		<Input name="in1" type="dfeBits(96)" />
		<Output latency="0" name="result" type="dfeBits(128)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.output(IO.java:707)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:137)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1271" dst_node_input="in1" src_node_id="1269" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1271" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(32)" />
		<Input name="in1" type="dfeBits(128)" />
		<Output latency="0" name="result" type="dfeBits(160)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.output(IO.java:707)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:137)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1273" dst_node_input="in1" src_node_id="1271" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1273" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(32)" />
		<Input name="in1" type="dfeBits(160)" />
		<Output latency="0" name="result" type="dfeBits(192)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.output(IO.java:707)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:137)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1275" dst_node_input="in1" src_node_id="1273" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1275" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeCat">
		<Input name="in0" type="dfeBits(32)" />
		<Input name="in1" type="dfeBits(192)" />
		<Output latency="0" name="result" type="dfeBits(224)" />
		<Text>@</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.output(IO.java:707)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:137)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1262" dst_node_input="data" src_node_id="1275" src_node_output="result" />
	<Node criticalPaths="[]" group="[]" id="1262" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeOutput">
		<Input name="output_control" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="data" type="dfeBits(224)" />
		<Text>Output(z)</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.output(IO.java:707)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:137)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Name>z</Name>
	</Node>
	<Node criticalPaths="[]" group="[]" id="1335" isControl="false" isVisible="false" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x1; 1.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>1</Value>
		<HexValue>0x1</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1336" dst_node_input="load" src_node_id="1335" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="1331" isControl="false" isVisible="false" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>1.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>1.0</Value>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1333" dst_node_input="enable" src_node_id="1331" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="1332" isControl="false" isVisible="false" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(49, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:49, 0, UNSIGNED}\n0x1000000000000; 2.81474976710656E14</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>1000000000000000000000000000000000000000000000000</Value>
		<HexValue>0x1000000000000</HexValue>
		<NumericValue>2.81474976710656E14</NumericValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1333" dst_node_input="max" src_node_id="1332" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="1333" isControl="false" isVisible="false" pipelineFactor="1.0" powerUsage="N/A" type="NodeCounter">
		<Input name="enable" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="max" type="dfeOffsetFix(49, 0, UNSIGNED)" />
		<Output latency="0" name="count" type="dfeOffsetFix(48, 0, UNSIGNED)" />
		<Output latency="0" name="wrap" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>Counter(NUMERIC_INCREMENTING)\nInc: 1\nReset: 0\nInit: 0</Text>
		<ResourceUsage DSPs="0" FFs="48" FMems="0" LUTs="48" />
		<OriginStackTrace>com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Increment>1</Increment>
		<WrapValue>0</WrapValue>
		<InitValue>0</InitValue>
		<CountMode>NUMERIC_INCREMENTING</CountMode>
		<WrapMode>COUNT_LT_MAX_THEN_WRAP</WrapMode>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1334" dst_node_input="input" src_node_id="1333" src_node_output="count" />
	<Node criticalPaths="[]" group="[]" id="1334" isControl="false" isVisible="false" pipelineFactor="1.0" powerUsage="N/A" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(48, 0, UNSIGNED)" />
		<Output latency="1" name="output" type="dfeOffsetFix(48, 0, UNSIGNED)" />
		<Text>stream offset: 1</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1336" dst_node_input="data" src_node_id="1334" src_node_output="output" />
	<Node criticalPaths="[]" group="[]" id="1336" isControl="false" isVisible="false" pipelineFactor="1.0" powerUsage="N/A" type="NodeOutputMappedReg">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="data" type="dfeOffsetFix(48, 0, UNSIGNED)" />
		<Text>Scalar output (current_run_cycle_count)</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Name>current_run_cycle_count</Name>
	</Node>
	<Node criticalPaths="[]" group="[]" id="0" isControl="false" isVisible="true" pipelineFactor="1.0" powerUsage="N/A" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x0; 0.0</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.Flush.disabled(Flush.java:174)
mcss.LoopKernel.&lt;init&gt;(LoopKernel.java:24)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge criticalPaths="[]" dst_node_id="1340" dst_node_input="start" src_node_id="0" src_node_output="value" />
	<Node criticalPaths="[]" group="[]" id="1340" isControl="false" isVisible="false" pipelineFactor="1.0" powerUsage="N/A" type="NodeFlush">
		<Input name="start" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>flush on trigger</Text>
		<ResourceUsage DSPs="0" FFs="0" FMems="0" LUTs="0" />
		<OriginStackTrace>com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)
mcss.MCSSManager.&lt;init&gt;(MCSSManager.maxj:18)
mcss.MCSSManager.main(MCSSManager.maxj:33)</OriginStackTrace>
	</Node>
</Graph>
